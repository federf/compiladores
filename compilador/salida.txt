*********************************************************************************** 
**                                                                               ** 
**                            Corriendo casos de prueba . . .                    ** 
**                                                                               ** 
**                                                                               ** 
*********************************************************************************** 
     
     
///////////////////////// TESTS CORRECTOS ////////////////////////////////////////
---------------- Test tests/test_correctos/factorial.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -4
OFFSET = -20
OFFSET = -28
OFFSET = -40
OFFSET = -44
OFFSET = -56

parseo exitoso
tamaño lista de codigo tercetos: 28
lista: 
{LABEL, null, null, Result: BeginMethod factorial}

{METHODDECL, Metodo{ name=factorial, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
{LABEL, int, null, Result: i}
{LABEL, int, null, Result: total}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: IntLiteral Label 2}
{ASSIGN(=), 1, null, Result: VarLocation{name=total, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: IntLiteral Label 5}
{GE(>), 0, 0, Result: VarLocation{name=GE Label 7, type=boolean, expr=0 > 0, size=0}}
{LABEL, null, null, Result: BeginWhile Label 9}
{CMP, VarLocation{name=factor Label 8, type=boolean, expr=VarLocation{name=GE Label 7, type=boolean, expr=0 > 0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhile Label 10}
{MULTIPLY(*), 0, 0, Result: VarLocation{name=MULTIPLY Label 13, type=int, expr=0 * 0, size=0}}
{ASSIGN(=), 0 * 0, null, Result: VarLocation{name=total, type=int, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: IntLiteral Label 15}
{MINUS(-), 0, 1, Result: VarLocation{name=MINUS Label 17, type=int, expr=0 - 1, size=0}}
{ASSIGN(=), 0 - 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhile Label 9}
{LABEL, null, null, Result: EndWhile Label 10}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod factorial}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 3, null, Result: IntLiteral Label 19}
{METHODCALL, factorial, 1, Result: RESULT Label 21}
{PARAM, null, null, Result: 3}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=factorial, args=[3]}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/floatTest.ctds ... -------------------
parseo iniciado
OFFSET = -4
OFFSET = -4
OFFSET = -4
OFFSET = -4
Error: Method mult must return float
OFFSET = 4
OFFSET = -4
OFFSET = -12
OFFSET = -16
OFFSET = -24
OFFSET = -60

parseo exitoso
tamaño lista de codigo tercetos: 50
lista: 
{LABEL, null, null, Result: BeginMethod div}

{METHODDECL, Metodo{ name=div, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{DIVIDE(/), 0.0, 0.0, Result: VarLocation{name=DIVIDE Label 3, type=float, expr=VarLocation{name=factor Label 1, type=float, expr=0.0, size=0} / VarLocation{name=factor Label 2, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=factor Label 1, type=float, expr=0.0, size=0} / VarLocation{name=factor Label 2, type=float, expr=0.0, size=0}}
{LABEL, null, null, Result: EndMethod div}
{LABEL, null, null, Result: BeginMethod resta}

{METHODDECL, Metodo{ name=resta, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{MINUS(-), 0.0, 0.0, Result: VarLocation{name=MINUS Label 6, type=float, expr=0.0 - 0.0, size=0}}
{RETURN, null, null, Result: 0.0 - 0.0}
{LABEL, null, null, Result: EndMethod resta}
{LABEL, null, null, Result: BeginMethod sum}

{METHODDECL, Metodo{ name=sum, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUS Label 9, type=float, expr=0.0 + 0.0, size=0}}
{RETURN, null, null, Result: 0.0 + 0.0}
{LABEL, null, null, Result: EndMethod sum}
{LABEL, null, null, Result: BeginMethod mult}

{METHODDECL, Metodo{ name=mult, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLY Label 12, type=int, expr=0.0 * 0.0, size=0}}
{LABEL, null, null, Result: EndMethod mult}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{LABEL, float, null, Result: x}
{LABEL, float, null, Result: y}
{LABEL, float, null, Result: z}
{ASSIGN(=), 1.234, null, Result: FloatLiteral Label 13}
{ASSIGN(=), 1.234, null, Result: VarLocation{name=x, type=float, expr=null, size=0}}
{ASSIGN(=), 27.5, null, Result: FloatLiteral Label 15}
{UNARYMINUS(-expr), 27.5, null, Result: VarLocation{name=UNARYMINUS Label 17, type=float, expr=-27.5, size=0}}
{ASSIGN(=), -27.5, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
{ASSIGN(=), 70.3, null, Result: FloatLiteral Label 18}
{UNARYMINUS(-expr), 70.3, null, Result: VarLocation{name=UNARYMINUS Label 20, type=float, expr=-70.3, size=0}}
{ASSIGN(=), -70.3, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
{METHODCALL, sum, 2, Result: RESULT Label 23}
{PARAM, null, null, Result: 0.0}
{PARAM, null, null, Result: 0.0}
{METHODCALL, div, 2, Result: RESULT Label 27}
{PARAM, null, null, Result: 0.0}
{PARAM, null, null, Result: 0.0}
{METHODCALL, mult, 2, Result: RESULT Label 29}
{PARAM, null, null, Result: MethodCallExpr{name=sum, args=[0.0, 0.0]}}
{PARAM, null, null, Result: MethodCallExpr{name=div, args=[0.0, 0.0]}}
{UNARYMINUS(-expr), 0.0, null, Result: VarLocation{name=UNARYMINUS Label 32, type=float, expr=-0.0, size=0}}
{METHODCALL, resta, 2, Result: RESULT Label 34}
{PARAM, null, null, Result: -0.0}
{PARAM, null, null, Result: 0.0}
{METHODCALL, sum, 2, Result: RESULT Label 36}
{PARAM, null, null, Result: MethodCallExpr{name=mult, args=[MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}}
{PARAM, null, null, Result: MethodCallExpr{name=resta, args=[-0.0, 0.0]}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="anidandoFloatTest"}, MethodCallExpr{name=sum, args=[MethodCallExpr{name=mult, args=[MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}, MethodCallExpr{name=resta, args=[-0.0, 0.0]}]}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/logicTest.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -12
OFFSET = -24
OFFSET = -28
OFFSET = -40
OFFSET = -44
Error: Method pruebaLogica must return int

parseo exitoso
tamaño lista de codigo tercetos: 20
lista: 
{LABEL, boolean, null, Result: bool}
{LABEL, null, null, Result: BeginMethod pruebaLogica}

{METHODDECL, Metodo{ name=pruebaLogica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), true, null, Result: BoolLiteral Label 1}
{ASSIGN(=), true, null, Result: VarLocation{name=bool, type=boolean, expr=null, size=0}}
{ASSIGN(=), false, null, Result: BoolLiteral Label 3}
{OR(||), false, false, Result: VarLocation{name=DISYUNCION Label 6, type=boolean, expr=false || false, size=0}}
{ASSIGN(=), true, null, Result: BoolLiteral Label 8}
{NON(!), true, null, Result: VarLocation{name=NON Label 10, type=boolean, expr=!true, size=0}}
{AND(&&), VarLocation{name=DISYUNCION Label 6, type=boolean, expr=false || false, size=0}, !true, Result: VarLocation{name=CONJUNCION Label 11, type=boolean, expr=VarLocation{name=DISYUNCION Label 6, type=boolean, expr=false || false, size=0} && !true, size=0}}
{NON(!), false, null, Result: VarLocation{name=NON Label 14, type=boolean, expr=!false, size=0}}
{AND(&&), VarLocation{name=CONJUNCION Label 11, type=boolean, expr=VarLocation{name=DISYUNCION Label 6, type=boolean, expr=false || false, size=0} && !true, size=0}, !false, Result: VarLocation{name=CONJUNCION Label 15, type=boolean, expr=VarLocation{name=CONJUNCION Label 11, type=boolean, expr=VarLocation{name=DISYUNCION Label 6, type=boolean, expr=false || false, size=0} && !true, size=0} && !false, size=0}}
{LABEL, null, null, Result: EndMethod pruebaLogica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), true, null, Result: BoolLiteral Label 17}
{METHODCALL, pruebaLogica, 1, Result: RESULT Label 19}
{PARAM, null, null, Result: true}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruebaLogica, args=[true]}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/program.ctds ... -------------------
parseo iniciado
OFFSET = -4
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/testAssing.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -4
OFFSET = -12
OFFSET = -24
OFFSET = -28
OFFSET = -40
OFFSET = -44
OFFSET = -56
OFFSET = -64
OFFSET = -76
OFFSET = -80
OFFSET = -88

parseo exitoso
tamaño lista de codigo tercetos: 32
lista: 
{LABEL, null, null, Result: BeginMethod aritmTest}

{METHODDECL, Metodo{ name=aritmTest, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
{LABEL, int, null, Result: a}
{LABEL, int, null, Result: b}
{ASSIGN(=), 1, null, Result: IntLiteral Label 1}
{ASSIGN(=), 1, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: IntLiteral Label 3}
{ASSIGN(=), 2, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: IntLiteral Label 5}
{PLUS(+), 1, 0, Result: VarLocation{name=PLUS Label 8, type=int, expr=1 + 0, size=0}}
{ASSIGN(=), 1 + 0, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: IntLiteral Label 10}
{PLUS(+), 0, 2, Result: VarLocation{name=PLUS Label 12, type=int, expr=0 + 2, size=0}}
{ASSIGN(=), 0 + 2, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{DIVIDE(/), 0, 0, Result: VarLocation{name=DIVIDE Label 15, type=int, expr=0 / 0, size=0}}
{ASSIGN(=), VarLocation{name=DIVIDE Label 15, type=int, expr=0 / 0, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 3, null, Result: IntLiteral Label 18}
{MOD(%), 0, 3, Result: VarLocation{name=MOD Label 20, type=int, expr=0 % 3, size=0}}
{ASSIGN(=), 0 % 3, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: IntLiteral Label 21}
{ASSIGN(=), 1, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: IntLiteral Label 23}
{ASSIGN(=), 2, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod aritmTest}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 5, null, Result: IntLiteral Label 26}
{METHODCALL, aritmTest, 1, Result: RESULT Label 28}
{PARAM, null, null, Result: 5}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=aritmTest, args=[5]}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_Asignaciones.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -4
OFFSET = -12
OFFSET = -24
OFFSET = -28
OFFSET = -40
OFFSET = -44
OFFSET = -56
OFFSET = -64
OFFSET = -72
OFFSET = -80
OFFSET = -92

parseo exitoso
tamaño lista de codigo tercetos: 31
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
{LABEL, int, null, Result: a}
{LABEL, int, null, Result: b}
{ASSIGN(=), 1, null, Result: IntLiteral Label 1}
{ASSIGN(=), 1, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 8, null, Result: IntLiteral Label 3}
{ASSIGN(=), 8, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{ASSIGN(=), 699, null, Result: IntLiteral Label 5}
{PLUS(+), 699, 0, Result: VarLocation{name=PLUS Label 8, type=int, expr=699 + 0, size=0}}
{ASSIGN(=), 699 + 0, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: IntLiteral Label 10}
{PLUS(+), 0, 2, Result: VarLocation{name=PLUS Label 12, type=int, expr=0 + 2, size=0}}
{ASSIGN(=), 0 + 2, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{DIVIDE(/), 0, 0, Result: VarLocation{name=DIVIDE Label 15, type=int, expr=0 / 0, size=0}}
{DIVIDE(/), 0 / 0, 0, Result: VarLocation{name=DIVIDE Label 17, type=int, expr=0 / 0 / 0, size=0}}
{ASSIGN(=), 2, null, Result: IntLiteral Label 18}
{DIVIDE(/), 0 / 0 / 0, 2, Result: VarLocation{name=DIVIDE Label 20, type=int, expr=0 / 0 / 0 / 2, size=0}}
{ASSIGN(=), VarLocation{name=DIVIDE Label 20, type=int, expr=0 / 0 / 0 / 2, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: IntLiteral Label 23}
{MOD(%), 0, 2, Result: VarLocation{name=MOD Label 25, type=int, expr=0 % 2, size=0}}
{ASSIGN(=), 0 % 2, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 3, null, Result: IntLiteral Label 27}
{METHODCALL, pruAritmetica, 1, Result: RESULT Label 29}
{PARAM, null, null, Result: 3}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[3]}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_arreglos.ctds ... -------------------
parseo iniciado
OFFSET = -4
OFFSET = -12
OFFSET = -24
OFFSET = -36
OFFSET = -48
OFFSET = -52
OFFSET = -64
OFFSET = -76
OFFSET = -80
OFFSET = -88
OFFSET = -104
OFFSET = -116
OFFSET = -128
OFFSET = -132
OFFSET = -140
OFFSET = -156
OFFSET = -164
OFFSET = -176
OFFSET = -184
OFFSET = -196
OFFSET = -200
OFFSET = -208
OFFSET = -228
OFFSET = -240
OFFSET = -244
OFFSET = -252
OFFSET = -264
OFFSET = -272
OFFSET = -288
OFFSET = -292
OFFSET = -304
Error: Method pruArreglos must return int

parseo exitoso
tamaño lista de codigo tercetos: 101
lista: 
{array[], int[], 589, Result: A}
{array[], float[], 56, Result: B}
{array[], boolean[], 5, Result: C}
{LABEL, null, null, Result: BeginMethod pruArreglos}

{METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0}, Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
{array[], float[], 8, Result: res}
{LABEL, int, null, Result: i}
{GE(>), 0, 0, Result: VarLocation{name=GE Label 3, type=boolean, expr=0 > 0, size=0}}
{CMP, VarLocation{name=GE Label 3, type=boolean, expr=0 > 0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 4}
{ASSIGN(=), 0, null, Result: IntLiteral Label 6}
{ASSIGN(=), 1, null, Result: IntLiteral Label 8}
{MINUS(-), 1, 0, Result: VarLocation{name=MINUS Label 11, type=int, expr=1 - 0, size=0}}
{ASSIGN(=), 1 - 0, null, Result: VarLocation{name=res, type=float[], expr=null, size=8}}
{JMP, null, null, Result: endIf Label 5}
{LABEL, null, null, Result: elseCond Label 4}
{LABEL, null, null, Result: endIf Label 5}
{CEQ(==), 0, 0, Result: VarLocation{name=CEQ Label 14, type=boolean, expr=0 == 0, size=0}}
{CMP, VarLocation{name=CEQ Label 14, type=boolean, expr=0 == 0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 15}
{ASSIGN(=), 1, null, Result: IntLiteral Label 17}
{ASSIGN(=), 1, null, Result: IntLiteral Label 19}
{MINUS(-), 1, 1, Result: VarLocation{name=MINUS Label 21, type=int, expr=1 - 1, size=0}}
{ASSIGN(=), 5, null, Result: IntLiteral Label 23}
{MULTIPLY(*), 0, 5, Result: VarLocation{name=MULTIPLY Label 25, type=int, expr=0 * 5, size=0}}
{ASSIGN(=), 0 * 5, null, Result: VarLocation{name=res, type=float[], expr=null, size=8}}
{JMP, null, null, Result: endIf Label 16}
{LABEL, null, null, Result: elseCond Label 15}
{MINUS(-), 0, 0, Result: VarLocation{name=MINUS Label 28, type=int, expr=0 - 0, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=res, type=float[], expr=null, size=8}}
{LABEL, null, null, Result: endIf Label 16}
{ASSIGN(=), 0, null, Result: IntLiteral Label 30}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 589, null, Result: IntLiteral Label 33}
{LE(<), 0, 589, Result: VarLocation{name=LE Label 35, type=boolean, expr=0 < 589, size=0}}
{LABEL, null, null, Result: BeginWhile Label 37}
{CMP, VarLocation{name=factor Label 36, type=boolean, expr=VarLocation{name=LE Label 35, type=boolean, expr=0 < 589, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhile Label 38}
{ASSIGN(=), 2, null, Result: IntLiteral Label 41}
{MULTIPLY(*), 0, 2, Result: VarLocation{name=MULTIPLY Label 43, type=int, expr=0 * 2, size=0}}
{ASSIGN(=), 0 * 2, null, Result: VarLocation{name=A, type=int[], expr=null, size=589}}
{ASSIGN(=), 1, null, Result: IntLiteral Label 44}
{ASSIGN(=), 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhile Label 37}
{LABEL, null, null, Result: EndWhile Label 38}
{ASSIGN(=), 8, null, Result: IntLiteral Label 46}
{ASSIGN(=), 8, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: IntLiteral Label 49}
{GEQ(>=), 0, 0, Result: VarLocation{name=GEQ Label 51, type=boolean, expr=0 >= 0, size=0}}
{LABEL, null, null, Result: BeginWhile Label 52}
{CMP, VarLocation{name=GEQ Label 51, type=boolean, expr=0 >= 0, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhile Label 53}
{ASSIGN(=), 2, null, Result: IntLiteral Label 56}
{MULTIPLY(*), 0, 2, Result: VarLocation{name=MULTIPLY Label 58, type=int, expr=0 * 2, size=0}}
{ASSIGN(=), 8, null, Result: IntLiteral Label 59}
{PLUS(+), 0 * 2, 8, Result: VarLocation{name=PLUS Label 61, type=int, expr=0 * 2 + 8, size=0}}
{ARRAYACCESS, A, VarLocation{name=PLUS Label 61, type=int, expr=0 * 2 + 8, size=0}, Result: Array Access Label 62}
{ASSIGN(=), 3, null, Result: IntLiteral Label 64}
{PLUS(+), ArrayLiteral{id=A, size=589}, 3, Result: VarLocation{name=PLUS Label 66, type=int, expr=ArrayLiteral{id=A, size=589} + 3, size=0}}
{ASSIGN(=), ArrayLiteral{id=A, size=589} + 3, null, Result: VarLocation{name=B, type=float[], expr=null, size=56}}
{ASSIGN(=), 1, null, Result: IntLiteral Label 67}
{ASSIGN(=), 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhile Label 52}
{LABEL, null, null, Result: EndWhile Label 53}
{ASSIGN(=), 0, null, Result: IntLiteral Label 69}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 5, null, Result: IntLiteral Label 72}
{ASSIGN(=), 9, null, Result: IntLiteral Label 74}
{MULTIPLY(*), 5, 9, Result: VarLocation{name=MULTIPLY Label 76, type=int, expr=5 * 9, size=0}}
{ASSIGN(=), 40, null, Result: IntLiteral Label 78}
{MINUS(-), VarLocation{name=MULTIPLY Label 76, type=int, expr=5 * 9, size=0}, 40, Result: VarLocation{name=MINUS Label 80, type=int, expr=VarLocation{name=MULTIPLY Label 76, type=int, expr=5 * 9, size=0} - 40, size=0}}
{LEQ(<=), 0, VarLocation{name=MULTIPLY Label 76, type=int, expr=5 * 9, size=0} - 40, Result: VarLocation{name=LEQ Label 81, type=boolean, expr=0 <= VarLocation{name=MULTIPLY Label 76, type=int, expr=5 * 9, size=0} - 40, size=0}}
{LABEL, null, null, Result: BeginWhile Label 82}
{CMP, VarLocation{name=LEQ Label 81, type=boolean, expr=0 <= VarLocation{name=MULTIPLY Label 76, type=int, expr=5 * 9, size=0} - 40, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhile Label 83}
{ASSIGN(=), 2, null, Result: IntLiteral Label 86}
{MULTIPLY(*), 0, 2, Result: VarLocation{name=MULTIPLY Label 88, type=int, expr=0 * 2, size=0}}
{ASSIGN(=), 8, null, Result: IntLiteral Label 89}
{PLUS(+), 0 * 2, 8, Result: VarLocation{name=PLUS Label 91, type=int, expr=0 * 2 + 8, size=0}}
{ARRAYACCESS, A, VarLocation{name=PLUS Label 91, type=int, expr=0 * 2 + 8, size=0}, Result: Array Access Label 92}
{ARRAYACCESS, B, VarLocation{name=factor Label 94, type=int, expr=0, size=0}, Result: Array Access Label 95}
{GE(>), ArrayLiteral{id=A, size=589}, ArrayLiteral{id=B, size=56}, Result: VarLocation{name=GE Label 97, type=boolean, expr=ArrayLiteral{id=A, size=589} > ArrayLiteral{id=B, size=56}, size=0}}
{ASSIGN(=), ArrayLiteral{id=A, size=589} > ArrayLiteral{id=B, size=56}, null, Result: VarLocation{name=C, type=boolean[], expr=null, size=5}}
{ASSIGN(=), 1, null, Result: IntLiteral Label 99}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUS Label 101, type=int, expr=0 + 1, size=0}}
{ASSIGN(=), 0 + 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhile Label 82}
{LABEL, null, null, Result: EndWhile Label 83}
{ASSIGN(=), 0, null, Result: IntLiteral Label 102}
{ARRAYACCESS, res, VarLocation{name=factor Label 103, type=int, expr=0, size=0}, Result: Array Access Label 104}
{LABEL, null, null, Result: EndMethod pruArreglos}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 4, null, Result: IntLiteral Label 106}
{ASSIGN(=), 8, null, Result: IntLiteral Label 108}
{METHODCALL, pruArreglos, 2, Result: RESULT Label 110}
{PARAM, null, null, Result: 4}
{PARAM, null, null, Result: 8}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: null}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_arreglos2.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -8
OFFSET = -20
OFFSET = -32
OFFSET = -40
OFFSET = -52
OFFSET = -68
OFFSET = -80
OFFSET = 4
OFFSET = -8
OFFSET = -20
OFFSET = -28
OFFSET = -36
OFFSET = -44
OFFSET = -52
OFFSET = -64
OFFSET = -76
OFFSET = -84
OFFSET = -104
OFFSET = -112
OFFSET = -120
OFFSET = -132
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_bloques.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -12
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_bloques02.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -12
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_booleanos.ctds ... -------------------
parseo iniciado
OFFSET = 0
OFFSET = -4
OFFSET = -4
OFFSET = 4
OFFSET = -4
OFFSET = -12
OFFSET = -24

parseo exitoso
tamaño lista de codigo tercetos: 40
lista: 
{LABEL, null, null, Result: BeginMethod neg}

{METHODDECL, Metodo{ name=neg, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
{NON(!), false, null, Result: VarLocation{name=NON Label 2, type=boolean, expr=!false, size=0}}
{RETURN, null, null, Result: !false}
{LABEL, null, null, Result: EndMethod neg}
{LABEL, null, null, Result: BeginMethod and}

{METHODDECL, Metodo{ name=and, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=a, value=null, size=0}, Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
{AND(&&), false, false, Result: VarLocation{name=CONJUNCION Label 5, type=boolean, expr=false && false, size=0}}
{RETURN, null, null, Result: false && false}
{LABEL, null, null, Result: EndMethod and}
{LABEL, null, null, Result: BeginMethod or}

{METHODDECL, Metodo{ name=or, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=a, value=null, size=0}, Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
{OR(||), false, false, Result: VarLocation{name=DISYUNCION Label 8, type=boolean, expr=false || false, size=0}}
{RETURN, null, null, Result: false || false}
{LABEL, null, null, Result: EndMethod or}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{LABEL, boolean, null, Result: a}
{LABEL, boolean, null, Result: b}
{LABEL, boolean, null, Result: c}
{LABEL, int, null, Result: x}
{LABEL, int, null, Result: y}
{ASSIGN(=), true, null, Result: BoolLiteral Label 9}
{ASSIGN(=), true, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
{ASSIGN(=), false, null, Result: BoolLiteral Label 11}
{ASSIGN(=), false, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
{METHODCALL, neg, 1, Result: RESULT Label 14}
{PARAM, null, null, Result: false}
{ASSIGN(=), MethodCallExpr{name=neg, args=[false]}, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
{METHODCALL, and, 2, Result: RESULT Label 18}
{PARAM, null, null, Result: false}
{PARAM, null, null, Result: false}
{METHODCALL, neg, 1, Result: RESULT Label 21}
{PARAM, null, null, Result: false}
{METHODCALL, or, 2, Result: RESULT Label 23}
{PARAM, null, null, Result: MethodCallExpr{name=and, args=[false, false]}}
{PARAM, null, null, Result: MethodCallExpr{name=neg, args=[false]}}
{ASSIGN(=), MethodCallExpr{name=or, args=[MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]}, null, Result: VarLocation{name=c, type=boolean, expr=null, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=boolean, parameters=[false]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_break.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -12
OFFSET = -20
OFFSET = -32
OFFSET = -44

parseo exitoso
tamaño lista de codigo tercetos: 35
lista: 
{LABEL, null, null, Result: BeginMethod breaks}

{METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0}]}, null, Result: null}
{LABEL, int, null, Result: i}
{ASSIGN(=), 0, null, Result: IntLiteral Label 1}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 10, null, Result: IntLiteral Label 4}
{LE(<), 0, 10, Result: VarLocation{name=LE Label 6, type=boolean, expr=0 < 10, size=0}}
{LABEL, null, null, Result: BeginWhile Label 8}
{CMP, VarLocation{name=factor Label 7, type=boolean, expr=VarLocation{name=LE Label 6, type=boolean, expr=0 < 10, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhile Label 9}
{ASSIGN(=), 1, null, Result: IntLiteral Label 11}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUS Label 13, type=int, expr=0 + 1, size=0}}
{ASSIGN(=), 0 + 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: IntLiteral Label 15}
{LE(<), 0, 0, Result: VarLocation{name=LE Label 17, type=boolean, expr=0 < 0, size=0}}
{CMP, VarLocation{name=LE Label 17, type=boolean, expr=0 < 0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 18}
{JMP, null, null, Result: EndWhile Label 9}
{JMP, null, null, Result: endIf Label 19}
{LABEL, null, null, Result: elseCond Label 18}
{JMP, null, null, Result: BeginWhile Label 8}
{LABEL, null, null, Result: endIf Label 19}
{JMP, null, null, Result: BeginWhile Label 8}
{LABEL, null, null, Result: EndWhile Label 9}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod breaks}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 1, null, Result: IntLiteral Label 21}
{METHODCALL, breaks, 1, Result: RESULT Label 23}
{PARAM, null, null, Result: 1}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: null}
{ASSIGN(=), 1, null, Result: IntLiteral Label 26}
{RETURN, null, null, Result: 1}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_comentarios.ctds ... -------------------
parseo iniciado
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_comentarios2.ctds ... -------------------
parseo iniciado
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_condiciones.ctds ... -------------------
parseo iniciado
OFFSET = -4
OFFSET = -12
OFFSET = -24
OFFSET = -32
OFFSET = -36
OFFSET = -48
OFFSET = -56
OFFSET = -60
OFFSET = -76
OFFSET = -92
OFFSET = -100
OFFSET = -104
OFFSET = -116
OFFSET = -124
OFFSET = -128
OFFSET = -144
OFFSET = -152
OFFSET = -164
OFFSET = -172
OFFSET = -184
OFFSET = -192
OFFSET = -196
OFFSET = -204
OFFSET = -216
OFFSET = -224
OFFSET = -236
OFFSET = -244
OFFSET = -248
OFFSET = -260
OFFSET = -268
OFFSET = -276
OFFSET = -292
OFFSET = -308
OFFSET = -316
OFFSET = -328
OFFSET = -336
OFFSET = -340
OFFSET = -356
OFFSET = -372
OFFSET = -380
OFFSET = -384
OFFSET = -396
OFFSET = -404
OFFSET = -412
OFFSET = -424
OFFSET = -432
OFFSET = -444
OFFSET = -452
OFFSET = -464
OFFSET = -472
OFFSET = -480
OFFSET = -496
OFFSET = -512
OFFSET = -520
OFFSET = -532
OFFSET = -540

parseo exitoso
tamaño lista de codigo tercetos: 122
lista: 
{LABEL, null, null, Result: BeginMethod dados}

{METHODDECL, Metodo{ name=dados, return_not_void=true, typeReturn=float, parameters [Simbolo{type=int, name=d1, value=null, size=0}, Simbolo{type=int, name=d2, value=null, size=0}, Simbolo{type=int, name=d3, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 6, null, Result: IntLiteral Label 2}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 4, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 4, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 6, type=boolean, expr=!VarLocation{name=CEQ Label 4, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 8}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 10, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 10, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 12, type=boolean, expr=!VarLocation{name=CEQ Label 10, type=boolean, expr=0 == 6, size=0}, size=0}}
{AND(&&), !VarLocation{name=CEQ Label 4, type=boolean, expr=0 == 6, size=0}, !VarLocation{name=CEQ Label 10, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 13, type=boolean, expr=!VarLocation{name=CEQ Label 4, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 10, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 15}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 17, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 17, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 19, type=boolean, expr=!VarLocation{name=CEQ Label 17, type=boolean, expr=0 == 6, size=0}, size=0}}
{AND(&&), !VarLocation{name=CEQ Label 4, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 10, type=boolean, expr=0 == 6, size=0}, !VarLocation{name=CEQ Label 17, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 20, type=boolean, expr=!VarLocation{name=CEQ Label 4, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 10, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 17, type=boolean, expr=0 == 6, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCION Label 20, type=boolean, expr=!VarLocation{name=CEQ Label 4, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 10, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 17, type=boolean, expr=0 == 6, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 21}
{ASSIGN(=), 1.00, null, Result: FloatLiteral Label 23}
{RETURN, null, null, Result: 1.00}
{JMP, null, null, Result: endIf Label 22}
{LABEL, null, null, Result: elseCond Label 21}
{LABEL, null, null, Result: endIf Label 22}
{ASSIGN(=), 6, null, Result: IntLiteral Label 26}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 28, type=boolean, expr=0 == 6, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 31}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 35, type=boolean, expr=!VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0}, size=0}}
{AND(&&), VarLocation{name=CEQ Label 28, type=boolean, expr=0 == 6, size=0}, !VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 36, type=boolean, expr=VarLocation{name=CEQ Label 28, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 38}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 40, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 40, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 42, type=boolean, expr=!VarLocation{name=CEQ Label 40, type=boolean, expr=0 == 6, size=0}, size=0}}
{AND(&&), VarLocation{name=CEQ Label 28, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0}, !VarLocation{name=CEQ Label 40, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 43, type=boolean, expr=VarLocation{name=CEQ Label 28, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 40, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 46}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 50, type=boolean, expr=!VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 52}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 54, type=boolean, expr=0 == 6, size=0}}
{AND(&&), !VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0}, VarLocation{name=CEQ Label 54, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 56, type=boolean, expr=!VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 54, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 58}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 60, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 60, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 62, type=boolean, expr=!VarLocation{name=CEQ Label 60, type=boolean, expr=0 == 6, size=0}, size=0}}
{AND(&&), !VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 54, type=boolean, expr=0 == 6, size=0}, !VarLocation{name=CEQ Label 60, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 63, type=boolean, expr=!VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 54, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 60, type=boolean, expr=0 == 6, size=0}, size=0}}
{OR(||), VarLocation{name=CONJUNCION Label 43, type=boolean, expr=VarLocation{name=CEQ Label 28, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 40, type=boolean, expr=0 == 6, size=0}, size=0}, VarLocation{name=CONJUNCION Label 63, type=boolean, expr=!VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 54, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 60, type=boolean, expr=0 == 6, size=0}, size=0}, Result: VarLocation{name=DISYUNCION Label 65, type=boolean, expr=VarLocation{name=CONJUNCION Label 43, type=boolean, expr=VarLocation{name=CEQ Label 28, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 40, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 63, type=boolean, expr=!VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 54, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 60, type=boolean, expr=0 == 6, size=0}, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 67}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 69, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 69, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 71, type=boolean, expr=!VarLocation{name=CEQ Label 69, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 73}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 75, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 75, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 77, type=boolean, expr=!VarLocation{name=CEQ Label 75, type=boolean, expr=0 == 6, size=0}, size=0}}
{AND(&&), !VarLocation{name=CEQ Label 69, type=boolean, expr=0 == 6, size=0}, !VarLocation{name=CEQ Label 75, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 78, type=boolean, expr=!VarLocation{name=CEQ Label 69, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 75, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 80}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 82, type=boolean, expr=0 == 6, size=0}}
{AND(&&), !VarLocation{name=CEQ Label 69, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 75, type=boolean, expr=0 == 6, size=0}, VarLocation{name=CEQ Label 82, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 84, type=boolean, expr=!VarLocation{name=CEQ Label 69, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 75, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 82, type=boolean, expr=0 == 6, size=0}, size=0}}
{OR(||), VarLocation{name=CONJUNCION Label 43, type=boolean, expr=VarLocation{name=CEQ Label 28, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 40, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 63, type=boolean, expr=!VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 54, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 60, type=boolean, expr=0 == 6, size=0}, size=0}, VarLocation{name=CONJUNCION Label 84, type=boolean, expr=!VarLocation{name=CEQ Label 69, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 75, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 82, type=boolean, expr=0 == 6, size=0}, size=0}, Result: VarLocation{name=DISYUNCION Label 86, type=boolean, expr=VarLocation{name=CONJUNCION Label 43, type=boolean, expr=VarLocation{name=CEQ Label 28, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 40, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 63, type=boolean, expr=!VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 54, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 60, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 84, type=boolean, expr=!VarLocation{name=CEQ Label 69, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 75, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 82, type=boolean, expr=0 == 6, size=0}, size=0}, size=0}}
{CMP, VarLocation{name=DISYUNCION Label 86, type=boolean, expr=VarLocation{name=CONJUNCION Label 43, type=boolean, expr=VarLocation{name=CEQ Label 28, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 33, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 40, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 63, type=boolean, expr=!VarLocation{name=CEQ Label 48, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 54, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 60, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 84, type=boolean, expr=!VarLocation{name=CEQ Label 69, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 75, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 82, type=boolean, expr=0 == 6, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 87}
{ASSIGN(=), 4.00, null, Result: FloatLiteral Label 89}
{RETURN, null, null, Result: 4.00}
{JMP, null, null, Result: endIf Label 88}
{LABEL, null, null, Result: elseCond Label 87}
{LABEL, null, null, Result: endIf Label 88}
{ASSIGN(=), 6, null, Result: IntLiteral Label 92}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 94, type=boolean, expr=0 == 6, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 97}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 99, type=boolean, expr=0 == 6, size=0}}
{AND(&&), VarLocation{name=CEQ Label 94, type=boolean, expr=0 == 6, size=0}, VarLocation{name=CEQ Label 99, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 101, type=boolean, expr=VarLocation{name=CEQ Label 94, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 99, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 103}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 105, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 105, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 107, type=boolean, expr=!VarLocation{name=CEQ Label 105, type=boolean, expr=0 == 6, size=0}, size=0}}
{AND(&&), VarLocation{name=CEQ Label 94, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 99, type=boolean, expr=0 == 6, size=0}, !VarLocation{name=CEQ Label 105, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 108, type=boolean, expr=VarLocation{name=CEQ Label 94, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 99, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 105, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 111}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 113, type=boolean, expr=0 == 6, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 116}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 120, type=boolean, expr=!VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0}, size=0}}
{AND(&&), VarLocation{name=CEQ Label 113, type=boolean, expr=0 == 6, size=0}, !VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 121, type=boolean, expr=VarLocation{name=CEQ Label 113, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 123}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 125, type=boolean, expr=0 == 6, size=0}}
{AND(&&), VarLocation{name=CEQ Label 113, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0}, VarLocation{name=CEQ Label 125, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 127, type=boolean, expr=VarLocation{name=CEQ Label 113, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 125, type=boolean, expr=0 == 6, size=0}, size=0}}
{OR(||), VarLocation{name=CONJUNCION Label 108, type=boolean, expr=VarLocation{name=CEQ Label 94, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 99, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 105, type=boolean, expr=0 == 6, size=0}, size=0}, VarLocation{name=CONJUNCION Label 127, type=boolean, expr=VarLocation{name=CEQ Label 113, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 125, type=boolean, expr=0 == 6, size=0}, size=0}, Result: VarLocation{name=DISYUNCION Label 129, type=boolean, expr=VarLocation{name=CONJUNCION Label 108, type=boolean, expr=VarLocation{name=CEQ Label 94, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 99, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 105, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 127, type=boolean, expr=VarLocation{name=CEQ Label 113, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 125, type=boolean, expr=0 == 6, size=0}, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 131}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 133, type=boolean, expr=0 == 6, size=0}}
{NON(!), VarLocation{name=CEQ Label 133, type=boolean, expr=0 == 6, size=0}, null, Result: VarLocation{name=NON Label 135, type=boolean, expr=!VarLocation{name=CEQ Label 133, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 137}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 139, type=boolean, expr=0 == 6, size=0}}
{AND(&&), !VarLocation{name=CEQ Label 133, type=boolean, expr=0 == 6, size=0}, VarLocation{name=CEQ Label 139, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 141, type=boolean, expr=!VarLocation{name=CEQ Label 133, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 139, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 143}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 145, type=boolean, expr=0 == 6, size=0}}
{AND(&&), !VarLocation{name=CEQ Label 133, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 139, type=boolean, expr=0 == 6, size=0}, VarLocation{name=CEQ Label 145, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 147, type=boolean, expr=!VarLocation{name=CEQ Label 133, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 139, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 145, type=boolean, expr=0 == 6, size=0}, size=0}}
{OR(||), VarLocation{name=CONJUNCION Label 108, type=boolean, expr=VarLocation{name=CEQ Label 94, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 99, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 105, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 127, type=boolean, expr=VarLocation{name=CEQ Label 113, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 125, type=boolean, expr=0 == 6, size=0}, size=0}, VarLocation{name=CONJUNCION Label 147, type=boolean, expr=!VarLocation{name=CEQ Label 133, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 139, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 145, type=boolean, expr=0 == 6, size=0}, size=0}, Result: VarLocation{name=DISYUNCION Label 149, type=boolean, expr=VarLocation{name=CONJUNCION Label 108, type=boolean, expr=VarLocation{name=CEQ Label 94, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 99, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 105, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 127, type=boolean, expr=VarLocation{name=CEQ Label 113, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 125, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 147, type=boolean, expr=!VarLocation{name=CEQ Label 133, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 139, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 145, type=boolean, expr=0 == 6, size=0}, size=0}, size=0}}
{CMP, VarLocation{name=DISYUNCION Label 149, type=boolean, expr=VarLocation{name=CONJUNCION Label 108, type=boolean, expr=VarLocation{name=CEQ Label 94, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 99, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 105, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 127, type=boolean, expr=VarLocation{name=CEQ Label 113, type=boolean, expr=0 == 6, size=0} && !VarLocation{name=CEQ Label 118, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 125, type=boolean, expr=0 == 6, size=0}, size=0} || VarLocation{name=CONJUNCION Label 147, type=boolean, expr=!VarLocation{name=CEQ Label 133, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 139, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 145, type=boolean, expr=0 == 6, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 150}
{ASSIGN(=), 8.50, null, Result: FloatLiteral Label 152}
{RETURN, null, null, Result: 8.50}
{JMP, null, null, Result: endIf Label 151}
{LABEL, null, null, Result: elseCond Label 150}
{LABEL, null, null, Result: endIf Label 151}
{ASSIGN(=), 6, null, Result: IntLiteral Label 155}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 157, type=boolean, expr=0 == 6, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 160}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 162, type=boolean, expr=0 == 6, size=0}}
{AND(&&), VarLocation{name=CEQ Label 157, type=boolean, expr=0 == 6, size=0}, VarLocation{name=CEQ Label 162, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 164, type=boolean, expr=VarLocation{name=CEQ Label 157, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 162, type=boolean, expr=0 == 6, size=0}, size=0}}
{ASSIGN(=), 6, null, Result: IntLiteral Label 166}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQ Label 168, type=boolean, expr=0 == 6, size=0}}
{AND(&&), VarLocation{name=CEQ Label 157, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 162, type=boolean, expr=0 == 6, size=0}, VarLocation{name=CEQ Label 168, type=boolean, expr=0 == 6, size=0}, Result: VarLocation{name=CONJUNCION Label 170, type=boolean, expr=VarLocation{name=CEQ Label 157, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 162, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 168, type=boolean, expr=0 == 6, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCION Label 170, type=boolean, expr=VarLocation{name=CEQ Label 157, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 162, type=boolean, expr=0 == 6, size=0} && VarLocation{name=CEQ Label 168, type=boolean, expr=0 == 6, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 171}
{ASSIGN(=), 10.00, null, Result: FloatLiteral Label 173}
{RETURN, null, null, Result: 10.00}
{JMP, null, null, Result: endIf Label 172}
{LABEL, null, null, Result: elseCond Label 171}
{LABEL, null, null, Result: endIf Label 172}
{LABEL, null, null, Result: EndMethod dados}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 1, null, Result: IntLiteral Label 175}
{ASSIGN(=), 6, null, Result: IntLiteral Label 177}
{ASSIGN(=), 9, null, Result: IntLiteral Label 179}
{METHODCALL, dados, 3, Result: RESULT Label 181}
{PARAM, null, null, Result: 1}
{PARAM, null, null, Result: 6}
{PARAM, null, null, Result: 9}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=dados, args=[1, 6, 9]}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_continuebreak.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -4
OFFSET = -8
OFFSET = -16
OFFSET = -32
OFFSET = -40
OFFSET = -52
OFFSET = -64
OFFSET = -76
OFFSET = -80
OFFSET = -92
OFFSET = -100
OFFSET = -104
OFFSET = -112
OFFSET = -120
OFFSET = -128
OFFSET = -136
Error: Method pruContinue must return float

parseo exitoso
tamaño lista de codigo tercetos: 58
lista: 
{LABEL, null, null, Result: BeginMethod pruContinue}

{METHODDECL, Metodo{ name=pruContinue, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
{LABEL, float, null, Result: i}
{LABEL, int, null, Result: n}
{LABEL, float, null, Result: total}
{ASSIGN(=), 1, null, Result: IntLiteral Label 1}
{UNARYMINUS(-expr), 1, null, Result: VarLocation{name=UNARYMINUS Label 3, type=int, expr=-1, size=0}}
{ASSIGN(=), -1, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{ASSIGN(=), 23, null, Result: IntLiteral Label 4}
{ASSIGN(=), 23, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{ASSIGN(=), 23, null, Result: IntLiteral Label 6}
{ASSIGN(=), 23, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: IntLiteral Label 9}
{GEQ(>=), 0.0, 0, Result: VarLocation{name=GEQ Label 11, type=boolean, expr=0.0 >= 0, size=0}}
{LABEL, null, null, Result: BeginWhile Label 13}
{CMP, VarLocation{name=factor Label 12, type=boolean, expr=VarLocation{name=GEQ Label 11, type=boolean, expr=0.0 >= 0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhile Label 14}
{ASSIGN(=), 1, null, Result: IntLiteral Label 16}
{MINUS(-), 0.0, 1, Result: VarLocation{name=MINUS Label 18, type=float, expr=0.0 - 1, size=0}}
{ASSIGN(=), 0.0 - 1, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
{LE(<), 0.0, 0, Result: VarLocation{name=LE Label 21, type=boolean, expr=0.0 < 0, size=0}}
{CMP, VarLocation{name=LE Label 21, type=boolean, expr=0.0 < 0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 22}
{ASSIGN(=), 0, null, Result: IntLiteral Label 25}
{NEQ(!=), 0.0, 0, Result: VarLocation{name=NEQ Label 27, type=boolean, expr=0.0 != 0, size=0}}
{CMP, VarLocation{name=NEQ Label 27, type=boolean, expr=0.0 != 0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 28}
{MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLY Label 32, type=int, expr=0.0 * 0.0, size=0}}
{MULTIPLY(*), 0.0 * 0.0, 0, Result: VarLocation{name=MULTIPLY Label 34, type=int, expr=0.0 * 0.0 * 0, size=0}}
{ASSIGN(=), 0.0 * 0.0 * 0, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIf Label 29}
{LABEL, null, null, Result: elseCond Label 28}
{LABEL, null, null, Result: endIf Label 29}
{JMP, null, null, Result: BeginWhile Label 13}
{JMP, null, null, Result: endIf Label 23}
{LABEL, null, null, Result: elseCond Label 22}
{ASSIGN(=), 1000.2343, null, Result: FloatLiteral Label 35}
{UNARYMINUS(-expr), 1000.2343, null, Result: VarLocation{name=UNARYMINUS Label 37, type=float, expr=-1000.2343, size=0}}
{ASSIGN(=), 6752, null, Result: IntLiteral Label 38}
{PLUS(+), -1000.2343, 6752, Result: VarLocation{name=PLUS Label 40, type=float, expr=-1000.2343 + 6752, size=0}}
{ASSIGN(=), -1000.2343 + 6752, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{JMP, null, null, Result: EndWhile Label 14}
{LABEL, null, null, Result: endIf Label 23}
{JMP, null, null, Result: BeginWhile Label 13}
{LABEL, null, null, Result: EndWhile Label 14}
{ASSIGN(=), 2, null, Result: IntLiteral Label 41}
{UNARYMINUS(-expr), 2, null, Result: VarLocation{name=UNARYMINUS Label 43, type=int, expr=-2, size=0}}
{MULTIPLY(*), -2, 0.0, Result: VarLocation{name=MULTIPLY Label 45, type=int, expr=-2 * 0.0, size=0}}
{LABEL, null, null, Result: EndMethod pruContinue}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 3.0, null, Result: FloatLiteral Label 46}
{ASSIGN(=), 2, null, Result: IntLiteral Label 48}
{METHODCALL, pruContinue, 2, Result: RESULT Label 50}
{PARAM, null, null, Result: 3.0}
{PARAM, null, null, Result: 2}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=pruContinue, args=[3.0, 2]}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_expresiones01.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -12
OFFSET = -16
OFFSET = -32
OFFSET = -44
OFFSET = -60
OFFSET = -68
OFFSET = -80
OFFSET = -84
OFFSET = -96
OFFSET = -100
OFFSET = -112
OFFSET = -116
OFFSET = -128

parseo exitoso
tamaño lista de codigo tercetos: 58
lista: 
{LABEL, null, null, Result: BeginMethod prueba}

{METHODDECL, Metodo{ name=prueba, return_not_void=true, typeReturn=float, parameters [Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
{LABEL, int, null, Result: a}
{LABEL, float, null, Result: c}
{LABEL, int, null, Result: g}
{ASSIGN(=), 50, null, Result: IntLiteral Label 1}
{ASSIGN(=), 50, null, Result: VarLocation{name=g, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: IntLiteral Label 4}
{GE(>), 0, 0, Result: VarLocation{name=GE Label 6, type=boolean, expr=0 > 0, size=0}}
{CMP, VarLocation{name=GE Label 6, type=boolean, expr=0 > 0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 7}
{ASSIGN(=), 4, null, Result: IntLiteral Label 9}
{ASSIGN(=), 4, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 4, null, Result: IntLiteral Label 12}
{CEQ(==), 0, 4, Result: VarLocation{name=CEQ Label 14, type=boolean, expr=0 == 4, size=0}}
{CMP, VarLocation{name=CEQ Label 14, type=boolean, expr=0 == 4, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 15}
{ASSIGN(=), 4, null, Result: IntLiteral Label 18}
{LE(<), 0, 4, Result: VarLocation{name=LE Label 20, type=boolean, expr=0 < 4, size=0}}
{LABEL, null, null, Result: BeginWhile Label 22}
{CMP, VarLocation{name=factor Label 21, type=boolean, expr=VarLocation{name=LE Label 20, type=boolean, expr=0 < 4, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhile Label 23}
{ASSIGN(=), 4, null, Result: IntLiteral Label 25}
{GE(>), 0, 4, Result: VarLocation{name=GE Label 27, type=boolean, expr=0 > 4, size=0}}
{LABEL, null, null, Result: BeginWhile Label 29}
{CMP, VarLocation{name=factor Label 28, type=boolean, expr=VarLocation{name=GE Label 27, type=boolean, expr=0 > 4, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhile Label 30}
{ASSIGN(=), 1, null, Result: IntLiteral Label 32}
{MINUS(-), 0, 1, Result: VarLocation{name=MINUS Label 34, type=int, expr=0 - 1, size=0}}
{ASSIGN(=), 0 - 1, null, Result: VarLocation{name=g, type=int, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: IntLiteral Label 36}
{MULTIPLY(*), 0, 2, Result: VarLocation{name=MULTIPLY Label 38, type=int, expr=0 * 2, size=0}}
{ASSIGN(=), 0 * 2, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{JMP, null, null, Result: BeginWhile Label 29}
{LABEL, null, null, Result: EndWhile Label 30}
{ASSIGN(=), 1, null, Result: IntLiteral Label 40}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUS Label 42, type=int, expr=0 + 1, size=0}}
{ASSIGN(=), 0 + 1, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: IntLiteral Label 44}
{DIVIDE(/), 0.0, 2, Result: VarLocation{name=DIVIDE Label 46, type=float, expr=VarLocation{name=factor Label 43, type=float, expr=0.0, size=0} / VarLocation{name=factor Label 45, type=int, expr=2, size=0}, size=0}}
{ASSIGN(=), VarLocation{name=factor Label 43, type=float, expr=0.0, size=0} / VarLocation{name=factor Label 45, type=int, expr=2, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{JMP, null, null, Result: BeginWhile Label 22}
{LABEL, null, null, Result: EndWhile Label 23}
{JMP, null, null, Result: endIf Label 16}
{LABEL, null, null, Result: elseCond Label 15}
{LABEL, null, null, Result: endIf Label 16}
{JMP, null, null, Result: endIf Label 8}
{LABEL, null, null, Result: elseCond Label 7}
{LABEL, null, null, Result: endIf Label 8}
{RETURN, null, null, Result: 0.0}
{LABEL, null, null, Result: EndMethod prueba}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 6, null, Result: IntLiteral Label 48}
{METHODCALL, prueba, 1, Result: RESULT Label 50}
{PARAM, null, null, Result: 6}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=prueba, args=[6]}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_expresiones02.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -4
OFFSET = -12
OFFSET = -24
OFFSET = -28
OFFSET = -40
OFFSET = -44
OFFSET = -52
OFFSET = -64
OFFSET = -76
OFFSET = -88

parseo exitoso
tamaño lista de codigo tercetos: 40
lista: 
{LABEL, null, null, Result: BeginMethod prueba}

{METHODDECL, Metodo{ name=prueba, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=p, value=null, size=0}]}, null, Result: null}
{LABEL, int, null, Result: a}
{LABEL, float, null, Result: f}
{LABEL, int, null, Result: b}
{LABEL, int, null, Result: c}
{ASSIGN(=), 4, null, Result: IntLiteral Label 1}
{ASSIGN(=), 4, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{ASSIGN(=), 5, null, Result: IntLiteral Label 3}
{ASSIGN(=), 5, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
{MULTIPLY(*), 0, 0, Result: VarLocation{name=MULTIPLY Label 7, type=int, expr=0 * 0, size=0}}
{ASSIGN(=), 0 * 0, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{PLUS(+), 0, 0, Result: VarLocation{name=PLUS Label 10, type=int, expr=0 + 0, size=0}}
{ASSIGN(=), 0 + 0, null, Result: VarLocation{name=p, type=int, expr=null, size=0}}
{LABEL, float, null, Result: pi}
{ASSIGN(=), 3.14, null, Result: FloatLiteral Label 11}
{ASSIGN(=), 3.14, null, Result: VarLocation{name=pi, type=float, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: IntLiteral Label 13}
{MULTIPLY(*), 2, 0.0, Result: VarLocation{name=MULTIPLY Label 16, type=int, expr=2 * 0.0, size=0}}
{ASSIGN(=), 2 * 0.0, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{DIVIDE(/), 0, 0.0, Result: VarLocation{name=DIVIDE Label 19, type=float, expr=VarLocation{name=factor Label 17, type=int, expr=0, size=0} / VarLocation{name=factor Label 18, type=float, expr=0.0, size=0}, size=0}}
{ASSIGN(=), 5, null, Result: IntLiteral Label 21}
{GE(>), VarLocation{name=DIVIDE Label 19, type=float, expr=VarLocation{name=factor Label 17, type=int, expr=0, size=0} / VarLocation{name=factor Label 18, type=float, expr=0.0, size=0}, size=0}, 5, Result: VarLocation{name=GE Label 23, type=boolean, expr=VarLocation{name=DIVIDE Label 19, type=float, expr=VarLocation{name=factor Label 17, type=int, expr=0, size=0} / VarLocation{name=factor Label 18, type=float, expr=0.0, size=0}, size=0} > 5, size=0}}
{CMP, VarLocation{name=GE Label 23, type=boolean, expr=VarLocation{name=DIVIDE Label 19, type=float, expr=VarLocation{name=factor Label 17, type=int, expr=0, size=0} / VarLocation{name=factor Label 18, type=float, expr=0.0, size=0}, size=0} > 5, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 24}
{ASSIGN(=), 1, null, Result: IntLiteral Label 26}
{RETURN, null, null, Result: 1}
{JMP, null, null, Result: endIf Label 25}
{LABEL, null, null, Result: elseCond Label 24}
{ASSIGN(=), 0, null, Result: IntLiteral Label 28}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: endIf Label 25}
{LABEL, null, null, Result: EndMethod prueba}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 6, null, Result: IntLiteral Label 30}
{METHODCALL, prueba, 1, Result: RESULT Label 32}
{PARAM, null, null, Result: 6}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=prueba, args=[6]}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_float01.ctds ... -------------------
parseo iniciado
OFFSET = 4
OFFSET = -4
OFFSET = -12
OFFSET = -28
OFFSET = -32
OFFSET = -40
OFFSET = -44
OFFSET = -52
OFFSET = -64
OFFSET = -72
OFFSET = -84
OFFSET = -88
OFFSET = -100
OFFSET = -108
OFFSET = -116
OFFSET = -128
OFFSET = -140
OFFSET = 4
OFFSET = -4

parseo exitoso
tamaño lista de codigo tercetos: 61
lista: 
{LABEL, null, null, Result: BeginMethod potencia}

{METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
{LABEL, int, null, Result: i}
{LABEL, boolean, null, Result: neg}
{LABEL, float, null, Result: prod}
{ASSIGN(=), false, null, Result: BoolLiteral Label 1}
{ASSIGN(=), false, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: IntLiteral Label 3}
{ASSIGN(=), 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 1.0, null, Result: FloatLiteral Label 5}
{ASSIGN(=), 1.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: IntLiteral Label 8}
{LE(<), 0, 0, Result: VarLocation{name=LE Label 10, type=boolean, expr=0 < 0, size=0}}
{CMP, VarLocation{name=LE Label 10, type=boolean, expr=0 < 0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 11}
{UNARYMINUS(-expr), 0, null, Result: VarLocation{name=UNARYMINUS Label 14, type=int, expr=-0, size=0}}
{ASSIGN(=), -0, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{NON(!), false, null, Result: VarLocation{name=NON Label 16, type=boolean, expr=!false, size=0}}
{ASSIGN(=), !false, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{JMP, null, null, Result: endIf Label 12}
{LABEL, null, null, Result: elseCond Label 11}
{LABEL, null, null, Result: endIf Label 12}
{LEQ(<=), 0, 0, Result: VarLocation{name=LEQ Label 19, type=boolean, expr=0 <= 0, size=0}}
{LABEL, null, null, Result: BeginWhile Label 21}
{CMP, VarLocation{name=factor Label 20, type=boolean, expr=VarLocation{name=LEQ Label 19, type=boolean, expr=0 <= 0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhile Label 22}
{MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLY Label 25, type=int, expr=0.0 * 0.0, size=0}}
{ASSIGN(=), 0.0 * 0.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: IntLiteral Label 27}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUS Label 29, type=int, expr=0 + 1, size=0}}
{ASSIGN(=), 0 + 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhile Label 21}
{LABEL, null, null, Result: EndWhile Label 22}
{NON(!), false, null, Result: VarLocation{name=NON Label 31, type=boolean, expr=!false, size=0}}
{NON(!), VarLocation{name=NON Label 31, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=NON Label 33, type=boolean, expr=!VarLocation{name=NON Label 31, type=boolean, expr=!false, size=0}, size=0}}
{CMP, VarLocation{name=NON Label 33, type=boolean, expr=!VarLocation{name=NON Label 31, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCond Label 34}
{ASSIGN(=), 1.0, null, Result: FloatLiteral Label 36}
{DIVIDE(/), 1.0, 0.0, Result: VarLocation{name=DIVIDE Label 39, type=float, expr=VarLocation{name=factor Label 37, type=float, expr=1.0, size=0} / VarLocation{name=factor Label 38, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=factor Label 37, type=float, expr=1.0, size=0} / VarLocation{name=factor Label 38, type=float, expr=0.0, size=0}}
{JMP, null, null, Result: endIf Label 35}
{LABEL, null, null, Result: elseCond Label 34}
{RETURN, null, null, Result: 0.0}
{LABEL, null, null, Result: endIf Label 35}
{ASSIGN(=), 100.1, null, Result: FloatLiteral Label 41}
{UNARYMINUS(-expr), 100.1, null, Result: VarLocation{name=UNARYMINUS Label 43, type=float, expr=-100.1, size=0}}
{RETURN, null, null, Result: -100.1}
{LABEL, null, null, Result: EndMethod potencia}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{LABEL, float, null, Result: f}
{LABEL, float, null, Result: a}
{ASSIGN(=), 8.0, null, Result: FloatLiteral Label 44}
{ASSIGN(=), 8.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: IntLiteral Label 47}
{METHODCALL, potencia, 2, Result: RESULT Label 49}
{PARAM, null, null, Result: 0.0}
{PARAM, null, null, Result: 2}
{ASSIGN(=), MethodCallExpr{name=potencia, args=[0.0, 2]}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, 0.0]}, null, Result: null}
{LABEL, null, null, Result: EndMethod main}
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_float02.ctds ... -------------------
