*********************************************************************************** 
**                                                                               ** 
**                            Corriendo casos de prueba . . .                    ** 
**                                                                               ** 
**                                                                               ** 
*********************************************************************************** 
     
     
///////////////////////// TESTS CORRECTOS ////////////////////////////////////////
---------------- Test tests/test_correctos/factorial.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 22
lista: 
{LABEL, null, null, Result: BeginMethod factorial}

{METHODDECL, Metodo{ name=factorial, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=n, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=1, size=0}, null, Result: VarLocation{name=total, type=int, expr=null, size=0}}
{GE(>), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel3, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel4, type=boolean, expr=0>0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel6}
{CMP, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=GELabel4, type=boolean, expr=0>0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel7}
{MULTIPLY(*), VarLocation{name=total, type=int, expr=0, size=0}, VarLocation{name=i, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel8, type=int, expr=0*0, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel8, type=int, expr=0*0, size=0}, null, Result: VarLocation{name=total, type=int, expr=null, size=0}}
{MINUS(-), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel9, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel10, type=int, expr=0-1, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel10, type=int, expr=0-1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel6}
{LABEL, null, null, Result: EndWhileLabel7}
{RETURN, null, null, Result: VarLocation{name=total, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod factorial}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [3]}
{METHODCALL, factorial, 1, Result: RESULTLabel12}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=factorial, args=[3]}]}, null, Result: EXTERNINVKLabel14}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod factorial}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=factorial, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=n, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=1, size=0}, null, Result: VarLocation{name=total, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel3, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel4, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=GELabel4, type=boolean, expr=0>0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=total, type=int, expr=0, size=0}, VarLocation{name=i, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel8, type=int, expr=0*0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel8, type=int, expr=0*0, size=0}, null, Result: VarLocation{name=total, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel9, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel10, type=int, expr=0-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel10, type=int, expr=0-1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=total, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod factorial}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [3]}
index: 0 tamaño: 1

Result = 3
finalizado.

procesando : . . . {METHODCALL, factorial, 1, Result: RESULTLabel12}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=factorial, args=[3]}]}, null, Result: EXTERNINVKLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	factorial
    .type	factorial, @function 
factorial: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $0,-4(%ebp)

    mov $1,-8(%ebp)

    movl	-4(%ebp), %eax
    cmpl	-20(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -24(%ebp)

.BeginWhileLabel6:

    mov $ 1, %eax
    cmp -28(%ebp), %eax

    jne EndWhileLabel7

    mov -8(%ebp) , %eax 
    mov -4(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-32(%ebp) 

    mov -32(%ebp),-8(%ebp)

    mov -4(%ebp) , %eax 
    mov -36(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-40(%ebp) 

    mov -40(%ebp),-4(%ebp)

    jmp BeginWhileLabel6

.EndWhileLabel7:

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $3 , 8(%esp)

    call factorial

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/floatTest.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 40
lista: 
{LABEL, null, null, Result: BeginMethod div}

{METHODDECL, Metodo{ name=div, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{DIVIDE(/), VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel2, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=b, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=DIVIDELabel2, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=b, type=float, expr=0.0, size=0}, size=0}}
{LABEL, null, null, Result: EndMethod div}
{LABEL, null, null, Result: BeginMethod resta}

{METHODDECL, Metodo{ name=resta, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{MINUS(-), VarLocation{name=factorLabel3, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=MINUSLabel4, type=float, expr=0.0-0.0, size=0}}
{RETURN, null, null, Result: VarLocation{name=MINUSLabel4, type=float, expr=0.0-0.0, size=0}}
{LABEL, null, null, Result: EndMethod resta}
{LABEL, null, null, Result: BeginMethod sum}

{METHODDECL, Metodo{ name=sum, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{PLUS(+), VarLocation{name=factorLabel5, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel6, type=float, expr=0.0+0.0, size=0}}
{RETURN, null, null, Result: VarLocation{name=PLUSLabel6, type=float, expr=0.0+0.0, size=0}}
{LABEL, null, null, Result: EndMethod sum}
{LABEL, null, null, Result: BeginMethod mult}

{METHODDECL, Metodo{ name=mult, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{MULTIPLY(*), VarLocation{name=factorLabel7, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel8, type=float, expr=0.0*0.0, size=0}}
{RETURN, null, null, Result: VarLocation{name=MULTIPLYLabel8, type=float, expr=0.0*0.0, size=0}}
{LABEL, null, null, Result: EndMethod mult}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel9, type=float, expr=1.234, size=0}, null, Result: VarLocation{name=x, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel10, type=float, expr=27.5, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel11, type=float, expr=-27.5, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel11, type=float, expr=-27.5, size=0}, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel12, type=float, expr=70.3, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel13, type=float, expr=-70.3, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel13, type=float, expr=-70.3, size=0}, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 0.0]}
{METHODCALL, sum, 2, Result: RESULTLabel14}
{PARAM, null, null, Result: [0.0, 0.0]}
{METHODCALL, div, 2, Result: RESULTLabel16}
{PARAM, null, null, Result: [MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}
{METHODCALL, mult, 2, Result: RESULTLabel18}
{UNARYMINUS(-expr), VarLocation{name=y, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel20, type=float, expr=-0.0, size=0}}
{PARAM, null, null, Result: [-0.0, 0.0]}
{METHODCALL, resta, 2, Result: RESULTLabel21}
{PARAM, null, null, Result: [MethodCallExpr{name=mult, args=[MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}, MethodCallExpr{name=resta, args=[-0.0, 0.0]}]}
{METHODCALL, sum, 2, Result: RESULTLabel23}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="anidandoFloatTest"}, MethodCallExpr{name=sum, args=[MethodCallExpr{name=mult, args=[MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}, MethodCallExpr{name=resta, args=[-0.0, 0.0]}]}]}, null, Result: EXTERNINVKLabel25}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod div}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=div, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel2, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=b, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=DIVIDELabel2, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=b, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod div}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod resta}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=resta, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel3, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=MINUSLabel4, type=float, expr=0.0-0.0, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=MINUSLabel4, type=float, expr=0.0-0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod resta}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod sum}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=sum, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel5, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel6, type=float, expr=0.0+0.0, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=PLUSLabel6, type=float, expr=0.0+0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod sum}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod mult}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=mult, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel7, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel8, type=float, expr=0.0*0.0, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=MULTIPLYLabel8, type=float, expr=0.0*0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod mult}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel9, type=float, expr=1.234, size=0}, null, Result: VarLocation{name=x, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel10, type=float, expr=27.5, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel11, type=float, expr=-27.5, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel11, type=float, expr=-27.5, size=0}, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel12, type=float, expr=70.3, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel13, type=float, expr=-70.3, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel13, type=float, expr=-70.3, size=0}, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, sum, 2, Result: RESULTLabel14}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, div, 2, Result: RESULTLabel16}
finalizado.

procesando : . . . {PARAM, null, null, Result: [MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}
index: 1 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, mult, 2, Result: RESULTLabel18}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=y, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel20, type=float, expr=-0.0, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [-0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} FALTA CASO class ir.ast.UnaryOpExpr
finalizado.

procesando : . . . {METHODCALL, resta, 2, Result: RESULTLabel21}
finalizado.

procesando : . . . {PARAM, null, null, Result: [MethodCallExpr{name=mult, args=[MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}, MethodCallExpr{name=resta, args=[-0.0, 0.0]}]}
index: 1 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, sum, 2, Result: RESULTLabel23}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="anidandoFloatTest"}, MethodCallExpr{name=sum, args=[MethodCallExpr{name=mult, args=[MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}, MethodCallExpr{name=resta, args=[-0.0, 0.0]}]}]}, null, Result: EXTERNINVKLabel25}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	div
    .type	div, @function 
div: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov -4(%ebp) , %eax 
    mov 1(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-8(%ebp) 

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	resta
    .type	resta, @function 
resta: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov -4(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-8(%ebp) 

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	sum
    .type	sum, @function 
sum: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov -4(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-8(%ebp) 

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	mult
    .type	mult, @function 
mult: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov -4(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-8(%ebp) 

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    mov $1.234,-4(%ebp)

    movl	-20(%ebp), %eax 
    negl	%eax 
    movl	%eax, -24(%ebp) 

    mov -24(%ebp),-8(%ebp)

    movl	-28(%ebp), %eax 
    negl	%eax 
    movl	%eax, -32(%ebp) 

    mov -32(%ebp),-12(%ebp)


    call sum


    call div


    call mult

    movl	-8(%ebp), %eax 
    negl	%eax 
    movl	%eax, -48(%ebp) 


    call resta


    call sum

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/logicTest.ctds ... -------------------
parseo iniciado
Error: Method pruebaLogica must return int

parseo exitoso
tamaño lista de codigo tercetos: 16
lista: 
{null, boolean, bool, Result: 0}
{LABEL, null, null, Result: BeginMethod pruebaLogica}

{METHODDECL, Metodo{ name=pruebaLogica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=boolean, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=bool, type=boolean, expr=null, size=0}}
{OR(||), VarLocation{name=factorLabel2, type=boolean, expr=false, size=0}, VarLocation{name=bool, type=boolean, expr=false, size=0}, Result: VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}}
{NON(!), VarLocation{name=factorLabel5, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=NONLabel6, type=boolean, expr=!true, size=0}}
{AND(&&), VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}, size=0}, VarLocation{name=NONLabel6, type=boolean, expr=!true, size=0}, Result: VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}}
{NON(!), VarLocation{name=factorLabel9, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel10, type=boolean, expr=!false, size=0}}
{AND(&&), VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}, size=0}, VarLocation{name=NONLabel10, type=boolean, expr=!false, size=0}, Result: VarLocation{name=CONJUNCIONLabel11, type=boolean, expr=VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}&&!false, size=0}}
{LABEL, null, null, Result: EndMethod pruebaLogica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [true]}
{METHODCALL, pruebaLogica, 1, Result: RESULTLabel14}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruebaLogica, args=[true]}]}, null, Result: EXTERNINVKLabel16}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, boolean, bool, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod pruebaLogica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruebaLogica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=boolean, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=bool, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=factorLabel2, type=boolean, expr=false, size=0}, VarLocation{name=bool, type=boolean, expr=false, size=0}, Result: VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel5, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=NONLabel6, type=boolean, expr=!true, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}, size=0}, VarLocation{name=NONLabel6, type=boolean, expr=!true, size=0}, Result: VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel9, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel10, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}, size=0}, VarLocation{name=NONLabel10, type=boolean, expr=!false, size=0}, Result: VarLocation{name=CONJUNCIONLabel11, type=boolean, expr=VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}&&!false, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruebaLogica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [true]}
index: 0 tamaño: 1
finalizado.

procesando : . . . {METHODCALL, pruebaLogica, 1, Result: RESULTLabel14}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruebaLogica, args=[true]}]}, null, Result: EXTERNINVKLabel16}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.


    .comm bool,4


    .text
    .globl	pruebaLogica
    .type	pruebaLogica, @function 
pruebaLogica: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $true,-4(%ebp)

    cmp	$0, -8(%ebp)
    jne .L0
    cmp	$0, -4(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -12(%ebp)
.L2:

    cmp $0, -20(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -24(%ebp) 

    cmp	$0, -16(%ebp)
    je .L3
    cmp	$0, -24(%ebp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -28(%ebp)
.L5:

    cmp $0, -36(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -40(%ebp) 

    cmp	$0, -32(%ebp)
    je .L6
    cmp	$0, -40(%ebp)
    je .L6
    mov	$1, %eax
    jmp .L7
.L6:
    movl	$0, %eax
    jmp .L8
.L7:
    movl	%eax, -44(%ebp)
.L8:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $true , (%esp)
    call pruebaLogica

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/program.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 20
lista: 
{LABEL, null, null, Result: BeginMethod inc}

{METHODDECL, Metodo{ name=inc, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
{PLUS(+), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
{RETURN, null, null, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
{LABEL, null, null, Result: EndMethod inc}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{EXTERNINVK, ExternInvkExpr{id="get_int", type=int, parameters=[]}, null, Result: EXTERNINVKLabel4}
{PARAM, null, null, Result: [ExternInvkExpr{id="get_int", type=int, parameters=[]}]}
{METHODCALL, inc, 1, Result: RESULTLabel6}
{ASSIGN(=), VarLocation{name=factorLabel7, type=int, expr=MethodCallExpr{name=inc, args=[ExternInvkExpr{id="get_int", type=int, parameters=[]}]}, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{CEQ(==), VarLocation{name=y, type=int, expr=0, size=0}, VarLocation{name=factorLabel8, type=int, expr=1, size=0}, Result: VarLocation{name=CEQLabel9, type=boolean, expr=0==1, size=0}}
{CMP, VarLocation{name=CEQLabel9, type=boolean, expr=0==1, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel10}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="y==1\n"}]}, null, Result: EXTERNINVKLabel12}
{JMP, null, null, Result: endIfLabel11}
{LABEL, null, null, Result: elseCondLabel10}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="y==%d\n"}, 0]}, null, Result: EXTERNINVKLabel13}
{LABEL, null, null, Result: endIfLabel11}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod inc}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=inc, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod inc}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="get_int", type=int, parameters=[]}, null, Result: EXTERNINVKLabel4}
finalizado.

procesando : . . . {PARAM, null, null, Result: [ExternInvkExpr{id="get_int", type=int, parameters=[]}]}
index: 0 tamaño: 1
{PARAM} FALTA CASO class ir.ast.ExternInvkExpr
finalizado.

procesando : . . . {METHODCALL, inc, 1, Result: RESULTLabel6}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel7, type=int, expr=MethodCallExpr{name=inc, args=[ExternInvkExpr{id="get_int", type=int, parameters=[]}]}, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=y, type=int, expr=0, size=0}, VarLocation{name=factorLabel8, type=int, expr=1, size=0}, Result: VarLocation{name=CEQLabel9, type=boolean, expr=0==1, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel9, type=boolean, expr=0==1, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel10}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="y==1\n"}]}, null, Result: EXTERNINVKLabel12}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel11}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel10}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="y==%d\n"}, 0]}, null, Result: EXTERNINVKLabel13}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel11}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	inc
    .type	inc, @function 
inc: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov -4(%ebp) , %eax 
    mov -8(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-12(%ebp) 

    mov -12(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    call get_int


    call inc

    mov $MethodCallExpr{name=inc, args=[ExternInvkExpr{id="get_int", type=int, parameters=[]}]},-4(%ebp)

    movl	-4(%ebp), %eax
    cmpl	-16(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -20(%ebp)

    mov $ 1, %eax
    cmp -20(%ebp), %eax

    jne elseCondLabel10

    call printf

    jmp endIfLabel11

.elseCondLabel10:

    call printf

.endIfLabel11:

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_arreglos2.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 36
lista: 
{null, int, A, Result: 5}
{null, float, B, Result: 56}
{null, boolean, C, Result: 10}
{null, boolean, y, Result: 0}
{LABEL, null, null, Result: BeginMethod pruArreglos}

{METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=float, expr=8.87, size=0}, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
{ASSIGN(=), 4, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{PLUS(+), VarLocation{name=factorLabel5, type=float, expr=2.6, size=0}, VarLocation{name=y, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel6, type=float, expr=2.6+0.0, size=0}}
{ASSIGN(=), 2.6+0.0, null, Result: VarLocation{name=B, type=float[], expr=55, size=56}}
{LE(<), VarLocation{name=factorLabel8, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel9, type=boolean, expr=0<0, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel11, type=boolean, expr=VarLocation{name=factorLabel10, type=boolean, expr=VarLocation{name=LELabel9, type=boolean, expr=0<0, size=0}, size=0}, size=0}, null, Result: VarLocation{name=C, type=boolean[], expr=0, size=10}}
{GEQ(>=), VarLocation{name=factorLabel13, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GEQLabel14, type=boolean, expr=0>=0, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel15, type=boolean, expr=VarLocation{name=GEQLabel14, type=boolean, expr=0>=0, size=0}, size=0}, null, Result: VarLocation{name=C, type=boolean[], expr=1, size=10}}
{ARRAYACCESS, A, VarLocation{name=factorLabel16, type=int, expr=0, size=0}, Result: ArrayAccessLabel17}
{RETURN, null, null, Result: VarLocation{name=factorLabel18, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
{LABEL, null, null, Result: EndMethod pruArreglos}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel19, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=y, type=boolean, expr=null, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel22, type=int, expr=6, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel23, type=int, expr=-6, size=0}}
{MINUS(-), VarLocation{name=factorLabel21, type=int, expr=58, size=0}, VarLocation{name=factorLabel24, type=int, expr=VarLocation{name=UNARYMINUSLabel23, type=int, expr=-6, size=0}, size=0}, Result: VarLocation{name=MINUSLabel25, type=int, expr=58-VarLocation{name=UNARYMINUSLabel23, type=int, expr=-6, size=0}, size=0}}
{ASSIGN(=), 58-VarLocation{name=UNARYMINUSLabel23, type=int, expr=-6, size=0}, null, Result: VarLocation{name=A, type=int[], expr=1, size=5}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel27, type=float, expr=2.6, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel28, type=float, expr=-2.6, size=0}}
{ASSIGN(=), -2.6, null, Result: VarLocation{name=B, type=float[], expr=0, size=56}}
{LE(<), VarLocation{name=factorLabel30, type=int, expr=4, size=0}, VarLocation{name=factorLabel31, type=int, expr=6, size=0}, Result: VarLocation{name=LELabel32, type=boolean, expr=4<6, size=0}}
{NON(!), VarLocation{name=factorLabel34, type=boolean, expr=VarLocation{name=factorLabel33, type=boolean, expr=VarLocation{name=LELabel32, type=boolean, expr=4<6, size=0}, size=0}, size=0}, null, Result: VarLocation{name=NONLabel35, type=boolean, expr=!VarLocation{name=factorLabel33, type=boolean, expr=VarLocation{name=LELabel32, type=boolean, expr=4<6, size=0}, size=0}, size=0}}
{ASSIGN(=), VarLocation{name=NONLabel35, type=boolean, expr=!VarLocation{name=factorLabel33, type=boolean, expr=VarLocation{name=LELabel32, type=boolean, expr=4<6, size=0}, size=0}, size=0}, null, Result: VarLocation{name=C, type=boolean[], expr=2, size=10}}
{PLUS(+), VarLocation{name=factorLabel39, type=int, expr=3, size=0}, VarLocation{name=factorLabel40, type=int, expr=3, size=0}, Result: VarLocation{name=PLUSLabel41, type=int, expr=3+3, size=0}}
{MINUS(-), VarLocation{name=factorLabel38, type=int, expr=7, size=0}, VarLocation{name=factorLabel42, type=int, expr=VarLocation{name=PLUSLabel41, type=int, expr=3+3, size=0}, size=0}, Result: VarLocation{name=MINUSLabel43, type=int, expr=7-VarLocation{name=PLUSLabel41, type=int, expr=3+3, size=0}, size=0}}
{ARRAYACCESS, A, VarLocation{name=MINUSLabel43, type=int, expr=7-VarLocation{name=PLUSLabel41, type=int, expr=3+3, size=0}, size=0}, Result: ArrayAccessLabel44}
{GEQ(>=), VarLocation{name=factorLabel37, type=int, expr=5, size=0}, VarLocation{name=factorLabel45, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}, Result: VarLocation{name=GEQLabel46, type=boolean, expr=5>=ArrayLiteral{id=A, size=5}, size=0}}
{OR(||), VarLocation{name=factorLabel47, type=boolean, expr=VarLocation{name=GEQLabel46, type=boolean, expr=5>=ArrayLiteral{id=A, size=5}, size=0}, size=0}, VarLocation{name=factorLabel48, type=boolean, expr=true, size=0}, Result: VarLocation{name=DISYUNCIONLabel49, type=boolean, expr=VarLocation{name=GEQLabel46, type=boolean, expr=5>=ArrayLiteral{id=A, size=5}, size=0}||true, size=0}}
{ASSIGN(=), VarLocation{name=DISYUNCIONLabel49, type=boolean, expr=VarLocation{name=GEQLabel46, type=boolean, expr=5>=ArrayLiteral{id=A, size=5}, size=0}||true, size=0}, null, Result: VarLocation{name=C, type=boolean[], expr=3, size=10}}
{RETURN, null, null, Result: VarLocation{name=factorLabel50, type=int, expr=1, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, int, A, Result: 5}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, float, B, Result: 56}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, boolean, C, Result: 10}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, boolean, y, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod pruArreglos}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=float, expr=8.87, size=0}, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 4, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel5, type=float, expr=2.6, size=0}, VarLocation{name=y, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel6, type=float, expr=2.6+0.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 2.6+0.0, null, Result: VarLocation{name=B, type=float[], expr=55, size=56}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=factorLabel8, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel9, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel11, type=boolean, expr=VarLocation{name=factorLabel10, type=boolean, expr=VarLocation{name=LELabel9, type=boolean, expr=0<0, size=0}, size=0}, size=0}, null, Result: VarLocation{name=C, type=boolean[], expr=0, size=10}}
finalizado.

procesando : . . . {GEQ(>=), VarLocation{name=factorLabel13, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GEQLabel14, type=boolean, expr=0>=0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel15, type=boolean, expr=VarLocation{name=GEQLabel14, type=boolean, expr=0>=0, size=0}, size=0}, null, Result: VarLocation{name=C, type=boolean[], expr=1, size=10}}
finalizado.

procesando : . . . {ARRAYACCESS, A, VarLocation{name=factorLabel16, type=int, expr=0, size=0}, Result: ArrayAccessLabel17}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel18, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruArreglos}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel19, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=y, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel22, type=int, expr=6, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel23, type=int, expr=-6, size=0}}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel21, type=int, expr=58, size=0}, VarLocation{name=factorLabel24, type=int, expr=VarLocation{name=UNARYMINUSLabel23, type=int, expr=-6, size=0}, size=0}, Result: VarLocation{name=MINUSLabel25, type=int, expr=58-VarLocation{name=UNARYMINUSLabel23, type=int, expr=-6, size=0}, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 58-VarLocation{name=UNARYMINUSLabel23, type=int, expr=-6, size=0}, null, Result: VarLocation{name=A, type=int[], expr=1, size=5}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel27, type=float, expr=2.6, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel28, type=float, expr=-2.6, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), -2.6, null, Result: VarLocation{name=B, type=float[], expr=0, size=56}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=factorLabel30, type=int, expr=4, size=0}, VarLocation{name=factorLabel31, type=int, expr=6, size=0}, Result: VarLocation{name=LELabel32, type=boolean, expr=4<6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel34, type=boolean, expr=VarLocation{name=factorLabel33, type=boolean, expr=VarLocation{name=LELabel32, type=boolean, expr=4<6, size=0}, size=0}, size=0}, null, Result: VarLocation{name=NONLabel35, type=boolean, expr=!VarLocation{name=factorLabel33, type=boolean, expr=VarLocation{name=LELabel32, type=boolean, expr=4<6, size=0}, size=0}, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=NONLabel35, type=boolean, expr=!VarLocation{name=factorLabel33, type=boolean, expr=VarLocation{name=LELabel32, type=boolean, expr=4<6, size=0}, size=0}, size=0}, null, Result: VarLocation{name=C, type=boolean[], expr=2, size=10}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel39, type=int, expr=3, size=0}, VarLocation{name=factorLabel40, type=int, expr=3, size=0}, Result: VarLocation{name=PLUSLabel41, type=int, expr=3+3, size=0}}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel38, type=int, expr=7, size=0}, VarLocation{name=factorLabel42, type=int, expr=VarLocation{name=PLUSLabel41, type=int, expr=3+3, size=0}, size=0}, Result: VarLocation{name=MINUSLabel43, type=int, expr=7-VarLocation{name=PLUSLabel41, type=int, expr=3+3, size=0}, size=0}}
finalizado.

procesando : . . . {ARRAYACCESS, A, VarLocation{name=MINUSLabel43, type=int, expr=7-VarLocation{name=PLUSLabel41, type=int, expr=3+3, size=0}, size=0}, Result: ArrayAccessLabel44}
finalizado.

procesando : . . . {GEQ(>=), VarLocation{name=factorLabel37, type=int, expr=5, size=0}, VarLocation{name=factorLabel45, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}, Result: VarLocation{name=GEQLabel46, type=boolean, expr=5>=ArrayLiteral{id=A, size=5}, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=factorLabel47, type=boolean, expr=VarLocation{name=GEQLabel46, type=boolean, expr=5>=ArrayLiteral{id=A, size=5}, size=0}, size=0}, VarLocation{name=factorLabel48, type=boolean, expr=true, size=0}, Result: VarLocation{name=DISYUNCIONLabel49, type=boolean, expr=VarLocation{name=GEQLabel46, type=boolean, expr=5>=ArrayLiteral{id=A, size=5}, size=0}||true, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=DISYUNCIONLabel49, type=boolean, expr=VarLocation{name=GEQLabel46, type=boolean, expr=5>=ArrayLiteral{id=A, size=5}, size=0}||true, size=0}, null, Result: VarLocation{name=C, type=boolean[], expr=3, size=10}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel50, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.





    .comm y,4


    .text
    .globl	pruArreglos
    .type	pruArreglos, @function 
pruArreglos: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov $8.87,-4(%ebp)

    mov 4 (%ebp), %eax

    mov -24(%ebp) , %eax 
    mov -4(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-28(%ebp) 

    mov 2.6+0.0 (%ebp), %eax

    movl	-36(%ebp), %eax
    cmpl	1(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -40(%ebp)

    mov $VarLocation{name=factorLabel10, type=boolean, expr=VarLocation{name=LELabel9, type=boolean, expr=0<0, size=0}, size=0},-336(%ebp)

    movl	-56(%ebp), %eax
    cmpl	1(%ebp), %eax
    setge %al
    movzbl %al, %eax
    movl	%eax, -60(%ebp)

    mov $VarLocation{name=GEQLabel14, type=boolean, expr=0>=0, size=0},-336(%ebp)

ARRAYACCESS

    mov $ArrayLiteral{id=A, size=5}, %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    mov $true,-300(%ebp)

    movl	-16(%ebp), %eax 
    negl	%eax 
    movl	%eax, -20(%ebp) 

    mov -12(%ebp) , %eax 
    mov -24(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-28(%ebp) 

    mov 58-VarLocation{name=UNARYMINUSLabel23, type=int, expr=-6, size=0} (%ebp), %eax

    movl	-36(%ebp), %eax 
    negl	%eax 
    movl	%eax, -40(%ebp) 

    mov -2.6 (%ebp), %eax

    movl	-48(%ebp), %eax
    cmpl	-52(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -56(%ebp)

    cmp $0, -64(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -68(%ebp) 

    mov -68(%ebp),-336(%ebp)

    mov -84(%ebp) , %eax 
    mov -88(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-92(%ebp) 

    mov -80(%ebp) , %eax 
    mov -96(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-100(%ebp) 

ARRAYACCESS

    movl	-76(%ebp), %eax
    cmpl	-104(%ebp), %eax
    setge %al
    movzbl %al, %eax
    movl	%eax, -108(%ebp)

    cmp	$0, -112(%ebp)
    jne .L0
    cmp	$0, -116(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -120(%ebp)
.L2:

    mov -120(%ebp),-336(%ebp)

    mov $1, %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_arreglos.ctds ... -------------------
parseo iniciado
Error: Method pruArreglos must return int

parseo exitoso
tamaño lista de codigo tercetos: 73
lista: 
{null, int, A, Result: 589}
{null, float, B, Result: 56}
{null, boolean, C, Result: 5}
{LABEL, null, null, Result: BeginMethod pruArreglos}

{METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel3}
{MINUS(-), VarLocation{name=factorLabel6, type=int, expr=1, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel7, type=int, expr=1-0, size=0}}
{ASSIGN(=), 1-0, null, Result: VarLocation{name=res, type=float[], expr=0, size=8}}
{JMP, null, null, Result: endIfLabel4}
{LABEL, null, null, Result: elseCondLabel3}
{LABEL, null, null, Result: endIfLabel4}
{CEQ(==), VarLocation{name=factorLabel8, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel9, type=boolean, expr=0==0, size=0}}
{CMP, VarLocation{name=CEQLabel9, type=boolean, expr=0==0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel10}
{MINUS(-), VarLocation{name=factorLabel12, type=int, expr=1, size=0}, VarLocation{name=factorLabel13, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel14, type=int, expr=1-1, size=0}}
{MULTIPLY(*), VarLocation{name=factorLabel15, type=int, expr=0, size=0}, VarLocation{name=factorLabel16, type=int, expr=5, size=0}, Result: VarLocation{name=MULTIPLYLabel17, type=int, expr=0*5, size=0}}
{ASSIGN(=), 0*5, null, Result: VarLocation{name=res, type=float[], expr=VarLocation{name=MINUSLabel14, type=int, expr=1-1, size=0}, size=8}}
{JMP, null, null, Result: endIfLabel11}
{LABEL, null, null, Result: elseCondLabel10}
{MINUS(-), VarLocation{name=factorLabel18, type=int, expr=0, size=0}, VarLocation{name=factorLabel19, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel20, type=int, expr=0-0, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=res, type=float[], expr=VarLocation{name=MINUSLabel20, type=int, expr=0-0, size=0}, size=8}}
{LABEL, null, null, Result: endIfLabel11}
{ASSIGN(=), VarLocation{name=factorLabel21, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel22, type=int, expr=589, size=0}, Result: VarLocation{name=LELabel23, type=boolean, expr=0<589, size=0}}
{LABEL, null, null, Result: BeginWhileLabel25}
{CMP, VarLocation{name=factorLabel24, type=boolean, expr=VarLocation{name=LELabel23, type=boolean, expr=0<589, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel26}
{MULTIPLY(*), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel27, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel28, type=int, expr=0*2, size=0}}
{ASSIGN(=), 0*2, null, Result: VarLocation{name=A, type=int[], expr=0, size=589}}
{ASSIGN(=), VarLocation{name=factorLabel29, type=int, expr=1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel25}
{LABEL, null, null, Result: EndWhileLabel26}
{ASSIGN(=), VarLocation{name=factorLabel30, type=int, expr=8, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{GEQ(>=), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel31, type=int, expr=0, size=0}, Result: VarLocation{name=GEQLabel32, type=boolean, expr=0>=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel33}
{CMP, VarLocation{name=GEQLabel32, type=boolean, expr=0>=0, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel34}
{MULTIPLY(*), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel35, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel36, type=int, expr=0*2, size=0}}
{PLUS(+), VarLocation{name=MULTIPLYLabel36, type=int, expr=0*2, size=0}, VarLocation{name=factorLabel37, type=int, expr=8, size=0}, Result: VarLocation{name=PLUSLabel38, type=int, expr=0*2+8, size=0}}
{ARRAYACCESS, A, VarLocation{name=PLUSLabel38, type=int, expr=0*2+8, size=0}, Result: ArrayAccessLabel39}
{PLUS(+), VarLocation{name=factorLabel40, type=int[], expr=ArrayLiteral{id=A, size=589}, size=0}, VarLocation{name=factorLabel41, type=int, expr=3, size=0}, Result: VarLocation{name=PLUSLabel42, type=int, expr=ArrayLiteral{id=A, size=589}+3, size=0}}
{ASSIGN(=), ArrayLiteral{id=A, size=589}+3, null, Result: VarLocation{name=B, type=float[], expr=0, size=56}}
{ASSIGN(=), VarLocation{name=factorLabel43, type=int, expr=1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel33}
{LABEL, null, null, Result: EndWhileLabel34}
{ASSIGN(=), VarLocation{name=factorLabel44, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=factorLabel45, type=int, expr=5, size=0}, VarLocation{name=factorLabel46, type=int, expr=9, size=0}, Result: VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}}
{MINUS(-), VarLocation{name=factorLabel48, type=int, expr=VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}, size=0}, VarLocation{name=factorLabel49, type=int, expr=40, size=0}, Result: VarLocation{name=MINUSLabel50, type=int, expr=VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}-40, size=0}}
{LEQ(<=), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=MINUSLabel50, type=int, expr=VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}-40, size=0}, Result: VarLocation{name=LEQLabel51, type=boolean, expr=0<=VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}-40, size=0}}
{LABEL, null, null, Result: BeginWhileLabel52}
{CMP, VarLocation{name=LEQLabel51, type=boolean, expr=0<=VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}-40, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel53}
{MULTIPLY(*), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel54, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel55, type=int, expr=0*2, size=0}}
{PLUS(+), VarLocation{name=MULTIPLYLabel55, type=int, expr=0*2, size=0}, VarLocation{name=factorLabel56, type=int, expr=8, size=0}, Result: VarLocation{name=PLUSLabel57, type=int, expr=0*2+8, size=0}}
{ARRAYACCESS, A, VarLocation{name=PLUSLabel57, type=int, expr=0*2+8, size=0}, Result: ArrayAccessLabel58}
{ARRAYACCESS, B, VarLocation{name=i, type=int, expr=0, size=0}, Result: ArrayAccessLabel60}
{GE(>), VarLocation{name=factorLabel59, type=int[], expr=ArrayLiteral{id=A, size=589}, size=0}, VarLocation{name=factorLabel61, type=float[], expr=ArrayLiteral{id=B, size=56}, size=0}, Result: VarLocation{name=GELabel62, type=boolean, expr=ArrayLiteral{id=A, size=589}>ArrayLiteral{id=B, size=56}, size=0}}
{ASSIGN(=), VarLocation{name=GELabel62, type=boolean, expr=ArrayLiteral{id=A, size=589}>ArrayLiteral{id=B, size=56}, size=0}, null, Result: VarLocation{name=C, type=boolean[], expr=0, size=5}}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel63, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel64, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel64, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel52}
{LABEL, null, null, Result: EndWhileLabel53}
{ARRAYACCESS, res, VarLocation{name=factorLabel65, type=int, expr=0, size=0}, Result: ArrayAccessLabel66}
{LABEL, null, null, Result: EndMethod pruArreglos}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruArreglos, 2, Result: RESULTLabel70}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel72}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: EXTERNINVKLabel73}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, int, A, Result: 589}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, float, B, Result: 56}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, boolean, C, Result: 5}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod pruArreglos}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel6, type=int, expr=1, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel7, type=int, expr=1-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 1-0, null, Result: VarLocation{name=res, type=float[], expr=0, size=8}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel8, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel9, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel9, type=boolean, expr=0==0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel10}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel12, type=int, expr=1, size=0}, VarLocation{name=factorLabel13, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel14, type=int, expr=1-1, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel15, type=int, expr=0, size=0}, VarLocation{name=factorLabel16, type=int, expr=5, size=0}, Result: VarLocation{name=MULTIPLYLabel17, type=int, expr=0*5, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0*5, null, Result: VarLocation{name=res, type=float[], expr=VarLocation{name=MINUSLabel14, type=int, expr=1-1, size=0}, size=8}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel11}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel10}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel18, type=int, expr=0, size=0}, VarLocation{name=factorLabel19, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel20, type=int, expr=0-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=res, type=float[], expr=VarLocation{name=MINUSLabel20, type=int, expr=0-0, size=0}, size=8}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel11}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel21, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel22, type=int, expr=589, size=0}, Result: VarLocation{name=LELabel23, type=boolean, expr=0<589, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel25}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel24, type=boolean, expr=VarLocation{name=LELabel23, type=boolean, expr=0<589, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel26}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel27, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel28, type=int, expr=0*2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0*2, null, Result: VarLocation{name=A, type=int[], expr=0, size=589}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel29, type=int, expr=1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel25}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel26}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel30, type=int, expr=8, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {GEQ(>=), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel31, type=int, expr=0, size=0}, Result: VarLocation{name=GEQLabel32, type=boolean, expr=0>=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel33}
finalizado.

procesando : . . . {CMP, VarLocation{name=GEQLabel32, type=boolean, expr=0>=0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel34}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel35, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel36, type=int, expr=0*2, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=MULTIPLYLabel36, type=int, expr=0*2, size=0}, VarLocation{name=factorLabel37, type=int, expr=8, size=0}, Result: VarLocation{name=PLUSLabel38, type=int, expr=0*2+8, size=0}}
finalizado.

procesando : . . . {ARRAYACCESS, A, VarLocation{name=PLUSLabel38, type=int, expr=0*2+8, size=0}, Result: ArrayAccessLabel39}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel40, type=int[], expr=ArrayLiteral{id=A, size=589}, size=0}, VarLocation{name=factorLabel41, type=int, expr=3, size=0}, Result: VarLocation{name=PLUSLabel42, type=int, expr=ArrayLiteral{id=A, size=589}+3, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), ArrayLiteral{id=A, size=589}+3, null, Result: VarLocation{name=B, type=float[], expr=0, size=56}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel43, type=int, expr=1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel33}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel34}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel44, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel45, type=int, expr=5, size=0}, VarLocation{name=factorLabel46, type=int, expr=9, size=0}, Result: VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel48, type=int, expr=VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}, size=0}, VarLocation{name=factorLabel49, type=int, expr=40, size=0}, Result: VarLocation{name=MINUSLabel50, type=int, expr=VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}-40, size=0}}
finalizado.

procesando : . . . {LEQ(<=), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=MINUSLabel50, type=int, expr=VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}-40, size=0}, Result: VarLocation{name=LEQLabel51, type=boolean, expr=0<=VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}-40, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel52}
finalizado.

procesando : . . . {CMP, VarLocation{name=LEQLabel51, type=boolean, expr=0<=VarLocation{name=MULTIPLYLabel47, type=int, expr=5*9, size=0}-40, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel53}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel54, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel55, type=int, expr=0*2, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=MULTIPLYLabel55, type=int, expr=0*2, size=0}, VarLocation{name=factorLabel56, type=int, expr=8, size=0}, Result: VarLocation{name=PLUSLabel57, type=int, expr=0*2+8, size=0}}
finalizado.

procesando : . . . {ARRAYACCESS, A, VarLocation{name=PLUSLabel57, type=int, expr=0*2+8, size=0}, Result: ArrayAccessLabel58}
finalizado.

procesando : . . . {ARRAYACCESS, B, VarLocation{name=i, type=int, expr=0, size=0}, Result: ArrayAccessLabel60}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel59, type=int[], expr=ArrayLiteral{id=A, size=589}, size=0}, VarLocation{name=factorLabel61, type=float[], expr=ArrayLiteral{id=B, size=56}, size=0}, Result: VarLocation{name=GELabel62, type=boolean, expr=ArrayLiteral{id=A, size=589}>ArrayLiteral{id=B, size=56}, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=GELabel62, type=boolean, expr=ArrayLiteral{id=A, size=589}>ArrayLiteral{id=B, size=56}, size=0}, null, Result: VarLocation{name=C, type=boolean[], expr=0, size=5}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel63, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel64, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel64, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel52}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel53}
finalizado.

procesando : . . . {ARRAYACCESS, res, VarLocation{name=factorLabel65, type=int, expr=0, size=0}, Result: ArrayAccessLabel66}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruArreglos}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruArreglos, 2, Result: RESULTLabel70}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel72}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: EXTERNINVKLabel73}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.






    .text
    .globl	pruArreglos
    .type	pruArreglos, @function 
pruArreglos: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-44(%ebp), %eax
    cmpl	1(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -48(%ebp)

    mov $ 1, %eax
    cmp -48(%ebp), %eax

    jne elseCondLabel3

    mov -56(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-60(%ebp) 

    mov 1-0 (%ebp), %eax

    jmp endIfLabel4

.elseCondLabel3:

.endIfLabel4:

    movl	-64(%ebp), %eax
    cmpl	1(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -68(%ebp)

    mov $ 1, %eax
    cmp -68(%ebp), %eax

    jne elseCondLabel10

    mov -72(%ebp) , %eax 
    mov -76(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-80(%ebp) 

    mov -84(%ebp) , %eax 
    mov -88(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-92(%ebp) 

    mov 0*5 (%ebp), %eax

    jmp endIfLabel11

.elseCondLabel10:

    mov -96(%ebp) , %eax 
    mov -100(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-104(%ebp) 

    mov 0 (%ebp), %eax

.endIfLabel11:

    mov $0,-40(%ebp)

    movl	-40(%ebp), %eax
    cmpl	-112(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -116(%ebp)

.BeginWhileLabel25:

    mov $ 1, %eax
    cmp -120(%ebp), %eax

    jne EndWhileLabel26

    mov -40(%ebp) , %eax 
    mov -124(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-128(%ebp) 

    mov 0*2 (%ebp), %eax

    mov $1,-40(%ebp)

    jmp BeginWhileLabel25

.EndWhileLabel26:

    mov $8,-40(%ebp)

    movl	-40(%ebp), %eax
    cmpl	-140(%ebp), %eax
    setge %al
    movzbl %al, %eax
    movl	%eax, -144(%ebp)

.BeginWhileLabel33:

    mov $ 1, %eax
    cmp -144(%ebp), %eax

    jne EndWhileLabel34

    mov -40(%ebp) , %eax 
    mov -148(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-152(%ebp) 

    mov -152(%ebp) , %eax 
    mov -156(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-160(%ebp) 

ARRAYACCESS

    mov -164(%ebp) , %eax 
    mov -168(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-172(%ebp) 

    mov ArrayLiteral{id=A, size=589}+3 (%ebp), %eax

    mov $1,-40(%ebp)

    jmp BeginWhileLabel33

.EndWhileLabel34:

    mov $0,-40(%ebp)

    mov -184(%ebp) , %eax 
    mov -188(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-192(%ebp) 

    mov -196(%ebp) , %eax 
    mov -200(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-204(%ebp) 

    movl	-40(%ebp), %eax
    cmpl	-204(%ebp), %eax
    setle %al
    movzbl %al, %eax
    movl	%eax, -208(%ebp)

.BeginWhileLabel52:

    mov $ 1, %eax
    cmp -208(%ebp), %eax

    jne EndWhileLabel53

    mov -40(%ebp) , %eax 
    mov -212(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-216(%ebp) 

    mov -216(%ebp) , %eax 
    mov -220(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-224(%ebp) 

ARRAYACCESS

ARRAYACCESS

    movl	-228(%ebp), %eax
    cmpl	-232(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -236(%ebp)

    mov -236(%ebp),-2632(%ebp)

    mov -40(%ebp) , %eax 
    mov -240(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-244(%ebp) 

    mov -244(%ebp),-40(%ebp)

    jmp BeginWhileLabel52

.EndWhileLabel53:

ARRAYACCESS

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $8 , 12(%esp)
    movl $4 , 8(%esp)

    call pruArreglos

    call printf

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_Asignaciones.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 9
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [3]}
{METHODCALL, pruAritmetica, 1, Result: RESULTLabel2}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[3]}]}, null, Result: EXTERNINVKLabel4}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [3]}
index: 0 tamaño: 1

Result = 3
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 1, Result: RESULTLabel2}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[3]}]}, null, Result: EXTERNINVKLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $3 , 8(%esp)

    call pruAritmetica

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/testAssing.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 22
lista: 
{LABEL, null, null, Result: BeginMethod aritmTest}

{METHODDECL, Metodo{ name=aritmTest, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=1, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=2, size=0}, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{PLUS(+), VarLocation{name=factorLabel3, type=int, expr=1, size=0}, VarLocation{name=a, type=int, expr=0, size=0}, Result: VarLocation{name=PLUSLabel4, type=int, expr=1+0, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel4, type=int, expr=1+0, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{PLUS(+), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel5, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel6, type=int, expr=0+2, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel6, type=int, expr=0+2, size=0}, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{DIVIDE(/), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=0, size=0}, Result: VarLocation{name=DIVIDELabel8, type=int, expr=0/0, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel9, type=int, expr=VarLocation{name=DIVIDELabel8, type=int, expr=0/0, size=0}, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{MOD(%), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel10, type=int, expr=3, size=0}, Result: VarLocation{name=MODLabel11, type=int, expr=0%3, size=0}}
{ASSIGN(=), VarLocation{name=MODLabel11, type=int, expr=0%3, size=0}, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel12, type=int, expr=1, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel13, type=int, expr=2, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel14, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod aritmTest}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [5]}
{METHODCALL, aritmTest, 1, Result: RESULTLabel16}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=aritmTest, args=[5]}]}, null, Result: EXTERNINVKLabel18}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod aritmTest}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=aritmTest, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=1, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=2, size=0}, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel3, type=int, expr=1, size=0}, VarLocation{name=a, type=int, expr=0, size=0}, Result: VarLocation{name=PLUSLabel4, type=int, expr=1+0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel4, type=int, expr=1+0, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel5, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel6, type=int, expr=0+2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel6, type=int, expr=0+2, size=0}, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=0, size=0}, Result: VarLocation{name=DIVIDELabel8, type=int, expr=0/0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel9, type=int, expr=VarLocation{name=DIVIDELabel8, type=int, expr=0/0, size=0}, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MOD(%), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel10, type=int, expr=3, size=0}, Result: VarLocation{name=MODLabel11, type=int, expr=0%3, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MODLabel11, type=int, expr=0%3, size=0}, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel12, type=int, expr=1, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel13, type=int, expr=2, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel14, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod aritmTest}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [5]}
index: 0 tamaño: 1

Result = 5
finalizado.

procesando : . . . {METHODCALL, aritmTest, 1, Result: RESULTLabel16}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=aritmTest, args=[5]}]}, null, Result: EXTERNINVKLabel18}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	aritmTest
    .type	aritmTest, @function 
aritmTest: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $1,-4(%ebp)

    mov $2,-8(%ebp)

    mov -20(%ebp) , %eax 
    mov -4(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-24(%ebp) 

    mov -24(%ebp),-4(%ebp)

    mov -4(%ebp) , %eax 
    mov -28(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-32(%ebp) 

    mov -32(%ebp),-8(%ebp)

    mov -4(%ebp) , %eax 
    mov -36(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-40(%ebp) 

    mov $VarLocation{name=DIVIDELabel8, type=int, expr=0/0, size=0},-4(%ebp)

    movl	-48(%ebp), %eax 
    cltd
    idivl -4(%ebp)
    movl	%edx, -52(%ebp)

    mov -52(%ebp),0(%ebp)

    mov $1,-4(%ebp)

    mov $2,-4(%ebp)

    mov $0, %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $5 , 8(%esp)

    call aritmTest

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_bloques02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 29
lista: 
{LABEL, null, null, Result: BeginMethod breaks}

{METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=10, size=0}, Result: VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}}
{LABEL, null, null, Result: BeginWhileLabel5}
{CMP, VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel6}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel9, type=float, expr=2.3, size=0}, null, Result: VarLocation{name=j, type=float, expr=null, size=0}}
{LE(<), VarLocation{name=factorLabel10, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel12, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel12, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel13}
{JMP, null, null, Result: EndWhileLabel6}
{JMP, null, null, Result: endIfLabel14}
{LABEL, null, null, Result: elseCondLabel13}
{JMP, null, null, Result: BeginWhileLabel5}
{LABEL, null, null, Result: endIfLabel14}
{JMP, null, null, Result: BeginWhileLabel5}
{LABEL, null, null, Result: EndWhileLabel6}
{RETURN, null, null, Result: VarLocation{name=i, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod breaks}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [1]}
{METHODCALL, breaks, 1, Result: RESULTLabel16}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel18}
{RETURN, null, null, Result: VarLocation{name=factorLabel19, type=int, expr=1, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod breaks}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=10, size=0}, Result: VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel9, type=float, expr=2.3, size=0}, null, Result: VarLocation{name=j, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=factorLabel10, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel12, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel12, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel13}
finalizado.

procesando : . . . {JMP, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel13}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel14}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=i, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod breaks}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [1]}
index: 0 tamaño: 1

Result = 1
finalizado.

procesando : . . . {METHODCALL, breaks, 1, Result: RESULTLabel16}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel18}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel19, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	breaks
    .type	breaks, @function 
breaks: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $0,-4(%ebp)

    movl	-4(%ebp), %eax
    cmpl	-12(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -16(%ebp)

.BeginWhileLabel5:

    mov $ 1, %eax
    cmp -20(%ebp), %eax

    jne EndWhileLabel6

    mov -4(%ebp) , %eax 
    mov -28(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-32(%ebp) 

    mov -32(%ebp),-4(%ebp)

    mov $2.3,-24(%ebp)

    movl	-40(%ebp), %eax
    cmpl	-44(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -48(%ebp)

    mov $ 1, %eax
    cmp -48(%ebp), %eax

    jne elseCondLabel13

    jmp EndWhileLabel6

    jmp endIfLabel14

.elseCondLabel13:

    jmp BeginWhileLabel5

.endIfLabel14:

    jmp BeginWhileLabel5

.EndWhileLabel6:

    mov -4(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $1 , 8(%esp)

    call breaks

    call printf

    mov $1, %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_bloques.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 28
lista: 
{LABEL, null, null, Result: BeginMethod breaks}

{METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=10, size=0}, Result: VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}}
{LABEL, null, null, Result: BeginWhileLabel5}
{CMP, VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel6}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), VarLocation{name=factorLabel9, type=int, expr=0, size=0}, VarLocation{name=factorLabel10, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel11, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel11, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel12}
{JMP, null, null, Result: EndWhileLabel6}
{JMP, null, null, Result: endIfLabel13}
{LABEL, null, null, Result: elseCondLabel12}
{JMP, null, null, Result: BeginWhileLabel5}
{LABEL, null, null, Result: endIfLabel13}
{JMP, null, null, Result: BeginWhileLabel5}
{LABEL, null, null, Result: EndWhileLabel6}
{RETURN, null, null, Result: VarLocation{name=i, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod breaks}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [1]}
{METHODCALL, breaks, 1, Result: RESULTLabel15}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel17}
{RETURN, null, null, Result: VarLocation{name=factorLabel18, type=int, expr=1, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod breaks}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=10, size=0}, Result: VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=factorLabel9, type=int, expr=0, size=0}, VarLocation{name=factorLabel10, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel11, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel11, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel12}
finalizado.

procesando : . . . {JMP, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel13}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel12}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel13}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=i, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod breaks}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [1]}
index: 0 tamaño: 1

Result = 1
finalizado.

procesando : . . . {METHODCALL, breaks, 1, Result: RESULTLabel15}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel17}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel18, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	breaks
    .type	breaks, @function 
breaks: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $0,-4(%ebp)

    movl	-4(%ebp), %eax
    cmpl	-12(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -16(%ebp)

.BeginWhileLabel5:

    mov $ 1, %eax
    cmp -20(%ebp), %eax

    jne EndWhileLabel6

    mov -4(%ebp) , %eax 
    mov -24(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-28(%ebp) 

    mov -28(%ebp),-4(%ebp)

    movl	-32(%ebp), %eax
    cmpl	-36(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -40(%ebp)

    mov $ 1, %eax
    cmp -40(%ebp), %eax

    jne elseCondLabel12

    jmp EndWhileLabel6

    jmp endIfLabel13

.elseCondLabel12:

    jmp BeginWhileLabel5

.endIfLabel13:

    jmp BeginWhileLabel5

.EndWhileLabel6:

    mov -4(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $1 , 8(%esp)

    call breaks

    call printf

    mov $1, %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_booleanos.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 31
lista: 
{LABEL, null, null, Result: BeginMethod neg}

{METHODDECL, Metodo{ name=neg, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{NON(!), VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel2, type=boolean, expr=!false, size=0}}
{RETURN, null, null, Result: VarLocation{name=NONLabel2, type=boolean, expr=!false, size=0}}
{LABEL, null, null, Result: EndMethod neg}
{LABEL, null, null, Result: BeginMethod and}

{METHODDECL, Metodo{ name=and, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=a, value=null, size=0, offset=0}, Simbolo{type=boolean, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{AND(&&), VarLocation{name=factorLabel3, type=boolean, expr=false, size=0}, VarLocation{name=b, type=boolean, expr=false, size=0}, Result: VarLocation{name=CONJUNCIONLabel4, type=boolean, expr=false&&false, size=0}}
{RETURN, null, null, Result: VarLocation{name=CONJUNCIONLabel4, type=boolean, expr=false&&false, size=0}}
{LABEL, null, null, Result: EndMethod and}
{LABEL, null, null, Result: BeginMethod or}

{METHODDECL, Metodo{ name=or, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=a, value=null, size=0, offset=0}, Simbolo{type=boolean, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{OR(||), VarLocation{name=factorLabel5, type=boolean, expr=false, size=0}, VarLocation{name=b, type=boolean, expr=false, size=0}, Result: VarLocation{name=DISYUNCIONLabel6, type=boolean, expr=false||false, size=0}}
{RETURN, null, null, Result: VarLocation{name=DISYUNCIONLabel6, type=boolean, expr=false||false, size=0}}
{LABEL, null, null, Result: EndMethod or}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel7, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel8, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
{PARAM, null, null, Result: [false]}
{METHODCALL, neg, 1, Result: RESULTLabel9}
{ASSIGN(=), VarLocation{name=factorLabel10, type=boolean, expr=MethodCallExpr{name=neg, args=[false]}, size=0}, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
{PARAM, null, null, Result: [false, false]}
{METHODCALL, and, 2, Result: RESULTLabel11}
{PARAM, null, null, Result: [false]}
{METHODCALL, neg, 1, Result: RESULTLabel13}
{PARAM, null, null, Result: [MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]}
{METHODCALL, or, 2, Result: RESULTLabel15}
{ASSIGN(=), VarLocation{name=factorLabel16, type=boolean, expr=MethodCallExpr{name=or, args=[MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]}, size=0}, null, Result: VarLocation{name=c, type=boolean, expr=null, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=boolean, parameters=[false]}, null, Result: EXTERNINVKLabel17}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod neg}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=neg, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel2, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=NONLabel2, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod neg}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod and}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=and, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=a, value=null, size=0, offset=0}, Simbolo{type=boolean, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel3, type=boolean, expr=false, size=0}, VarLocation{name=b, type=boolean, expr=false, size=0}, Result: VarLocation{name=CONJUNCIONLabel4, type=boolean, expr=false&&false, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=CONJUNCIONLabel4, type=boolean, expr=false&&false, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod and}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod or}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=or, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=a, value=null, size=0, offset=0}, Simbolo{type=boolean, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {OR(||), VarLocation{name=factorLabel5, type=boolean, expr=false, size=0}, VarLocation{name=b, type=boolean, expr=false, size=0}, Result: VarLocation{name=DISYUNCIONLabel6, type=boolean, expr=false||false, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=DISYUNCIONLabel6, type=boolean, expr=false||false, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod or}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel7, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel8, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [false]}
index: 0 tamaño: 1
finalizado.

procesando : . . . {METHODCALL, neg, 1, Result: RESULTLabel9}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel10, type=boolean, expr=MethodCallExpr{name=neg, args=[false]}, size=0}, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [false, false]}
index: 1 tamaño: 2
index: 0 tamaño: 2
finalizado.

procesando : . . . {METHODCALL, and, 2, Result: RESULTLabel11}
finalizado.

procesando : . . . {PARAM, null, null, Result: [false]}
index: 0 tamaño: 1
finalizado.

procesando : . . . {METHODCALL, neg, 1, Result: RESULTLabel13}
finalizado.

procesando : . . . {PARAM, null, null, Result: [MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]}
index: 1 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, or, 2, Result: RESULTLabel15}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel16, type=boolean, expr=MethodCallExpr{name=or, args=[MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]}, size=0}, null, Result: VarLocation{name=c, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=boolean, parameters=[false]}, null, Result: EXTERNINVKLabel17}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	neg
    .type	neg, @function 
neg: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    cmp $0, -4(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -8(%ebp) 

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	and
    .type	and, @function 
and: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    cmp	$0, -4(%ebp)
    je .L0
    cmp	$0, 1(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -8(%ebp)
.L2:

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	or
    .type	or, @function 
or: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    cmp	$0, -4(%ebp)
    jne .L3
    cmp	$0, 1(%ebp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -8(%ebp)
.L5:

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    mov $true,-4(%ebp)

    mov $false,-8(%ebp)

    movl $false , (%esp)
    call neg

    mov $MethodCallExpr{name=neg, args=[false]},-8(%ebp)

    movl $false , 0(%esp)    movl $false , (%esp)
    call and

    movl $false , (%esp)
    call neg


    call or

    mov $MethodCallExpr{name=or, args=[MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]},-12(%ebp)

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_break.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 28
lista: 
{LABEL, null, null, Result: BeginMethod breaks}

{METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=10, size=0}, Result: VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}}
{LABEL, null, null, Result: BeginWhileLabel5}
{CMP, VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel6}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), VarLocation{name=factorLabel9, type=int, expr=0, size=0}, VarLocation{name=factorLabel10, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel11, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel11, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel12}
{JMP, null, null, Result: EndWhileLabel6}
{JMP, null, null, Result: endIfLabel13}
{LABEL, null, null, Result: elseCondLabel12}
{JMP, null, null, Result: BeginWhileLabel5}
{LABEL, null, null, Result: endIfLabel13}
{JMP, null, null, Result: BeginWhileLabel5}
{LABEL, null, null, Result: EndWhileLabel6}
{RETURN, null, null, Result: VarLocation{name=i, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod breaks}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [1]}
{METHODCALL, breaks, 1, Result: RESULTLabel15}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel17}
{RETURN, null, null, Result: VarLocation{name=factorLabel18, type=int, expr=1, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod breaks}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=10, size=0}, Result: VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=LELabel3, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=factorLabel9, type=int, expr=0, size=0}, VarLocation{name=factorLabel10, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel11, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel11, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel12}
finalizado.

procesando : . . . {JMP, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel13}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel12}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel13}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=i, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod breaks}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [1]}
index: 0 tamaño: 1

Result = 1
finalizado.

procesando : . . . {METHODCALL, breaks, 1, Result: RESULTLabel15}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel17}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel18, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	breaks
    .type	breaks, @function 
breaks: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $0,-4(%ebp)

    movl	-4(%ebp), %eax
    cmpl	-12(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -16(%ebp)

.BeginWhileLabel5:

    mov $ 1, %eax
    cmp -20(%ebp), %eax

    jne EndWhileLabel6

    mov -4(%ebp) , %eax 
    mov -24(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-28(%ebp) 

    mov -28(%ebp),-4(%ebp)

    movl	-32(%ebp), %eax
    cmpl	-36(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -40(%ebp)

    mov $ 1, %eax
    cmp -40(%ebp), %eax

    jne elseCondLabel12

    jmp EndWhileLabel6

    jmp endIfLabel13

.elseCondLabel12:

    jmp BeginWhileLabel5

.endIfLabel13:

    jmp BeginWhileLabel5

.EndWhileLabel6:

    mov -4(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $1 , 8(%esp)

    call breaks

    call printf

    mov $1, %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_comentarios2.ctds ... -------------------
parseo iniciado
Error: Method pruAritmetica must return int

parseo exitoso
tamaño lista de codigo tercetos: 17
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel3}
{ASSIGN(=), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel4}
{LABEL, null, null, Result: elseCondLabel3}
{ASSIGN(=), VarLocation{name=c, type=int, expr=0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel4}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel8}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel10}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=c, type=int, expr=0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel8}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-8(%ebp), %eax
    cmpl	1(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -12(%ebp)

    mov $ 1, %eax
    cmp -12(%ebp), %eax

    jne elseCondLabel3

    mov $0,-4(%ebp)

    jmp endIfLabel4

.elseCondLabel3:

    mov 1(%ebp),-4(%ebp)

.endIfLabel4:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $8 , 12(%esp)
    movl $4 , 8(%esp)

    call pruAritmetica

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_comentarios.ctds ... -------------------
parseo iniciado
Error: Method pruAritmetica must return int

parseo exitoso
tamaño lista de codigo tercetos: 18
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel3}
{PLUS(+), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, VarLocation{name=factorLabel6, type=int, expr=5, size=0}, Result: VarLocation{name=PLUSLabel7, type=int, expr=0+5, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel7, type=int, expr=0+5, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel4}
{LABEL, null, null, Result: elseCondLabel3}
{ASSIGN(=), VarLocation{name=c, type=int, expr=0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel4}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel10}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel12}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, VarLocation{name=factorLabel6, type=int, expr=5, size=0}, Result: VarLocation{name=PLUSLabel7, type=int, expr=0+5, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel7, type=int, expr=0+5, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=c, type=int, expr=0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel10}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel12}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-8(%ebp), %eax
    cmpl	1(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -12(%ebp)

    mov $ 1, %eax
    cmp -12(%ebp), %eax

    jne elseCondLabel3

    mov -16(%ebp) , %eax 
    mov -20(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-24(%ebp) 

    mov -24(%ebp),-4(%ebp)

    jmp endIfLabel4

.elseCondLabel3:

    mov 1(%ebp),-4(%ebp)

.endIfLabel4:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $8 , 12(%esp)
    movl $4 , 8(%esp)

    call pruAritmetica

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_condiciones.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 89
lista: 
{LABEL, null, null, Result: BeginMethod dados}

{METHODDECL, Metodo{ name=dados, return_not_void=true, typeReturn=float, parameters [Simbolo{type=int, name=d1, value=null, size=0, offset=0}, Simbolo{type=int, name=d2, value=null, size=0, offset=0}, Simbolo{type=int, name=d3, value=null, size=0, offset=0}]}, null, Result: null}
{CEQ(==), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel5, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel6, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel9, type=boolean, expr=!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=NONLabel5, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel9, type=boolean, expr=!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel10, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel13, type=boolean, expr=VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel14, type=boolean, expr=!VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel10, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel14, type=boolean, expr=!VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel15, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel15, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel16}
{RETURN, null, null, Result: VarLocation{name=factorLabel18, type=float, expr=1.00, size=0}}
{JMP, null, null, Result: endIfLabel17}
{LABEL, null, null, Result: elseCondLabel16}
{LABEL, null, null, Result: endIfLabel17}
{CEQ(==), VarLocation{name=factorLabel19, type=int, expr=0, size=0}, VarLocation{name=factorLabel20, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}}
{CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel23, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel25, type=boolean, expr=VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel26, type=boolean, expr=!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=factorLabel22, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel26, type=boolean, expr=!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel27, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel28, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel30, type=boolean, expr=VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel31, type=boolean, expr=!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel27, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel31, type=boolean, expr=!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=factorLabel34, type=int, expr=0, size=0}, VarLocation{name=factorLabel35, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel37, type=boolean, expr=VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel38, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel39, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=NONLabel38, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel41, type=boolean, expr=VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel42, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel43, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel45, type=boolean, expr=VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel46, type=boolean, expr=!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel42, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel46, type=boolean, expr=!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}}
{OR(||), VarLocation{name=factorLabel33, type=boolean, expr=VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}, size=0}, VarLocation{name=factorLabel48, type=boolean, expr=VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel49, type=boolean, expr=VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
{CEQ(==), VarLocation{name=factorLabel50, type=int, expr=0, size=0}, VarLocation{name=factorLabel51, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel53, type=boolean, expr=VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel54, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel55, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel57, type=boolean, expr=VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel58, type=boolean, expr=!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=NONLabel54, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel58, type=boolean, expr=!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel59, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel60, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel59, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel62, type=boolean, expr=VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel63, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}, size=0}}
{OR(||), VarLocation{name=DISYUNCIONLabel49, type=boolean, expr=VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}, size=0}, VarLocation{name=factorLabel64, type=boolean, expr=VarLocation{name=CONJUNCIONLabel63, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel65, type=boolean, expr=VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel63, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
{CMP, VarLocation{name=DISYUNCIONLabel65, type=boolean, expr=VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel63, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel66}
{RETURN, null, null, Result: VarLocation{name=factorLabel68, type=float, expr=4.00, size=0}}
{JMP, null, null, Result: endIfLabel67}
{LABEL, null, null, Result: elseCondLabel66}
{LABEL, null, null, Result: endIfLabel67}
{CEQ(==), VarLocation{name=factorLabel69, type=int, expr=0, size=0}, VarLocation{name=factorLabel70, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}}
{CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel73, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=factorLabel72, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel75, type=boolean, expr=VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel76, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel77, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel79, type=boolean, expr=VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel80, type=boolean, expr=!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel76, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel80, type=boolean, expr=!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=factorLabel83, type=int, expr=0, size=0}, VarLocation{name=factorLabel84, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}}
{CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel87, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel89, type=boolean, expr=VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel90, type=boolean, expr=!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=factorLabel86, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel90, type=boolean, expr=!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel92, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel94, type=boolean, expr=VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}}
{OR(||), VarLocation{name=factorLabel82, type=boolean, expr=VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}, size=0}, VarLocation{name=factorLabel96, type=boolean, expr=VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel97, type=boolean, expr=VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
{CEQ(==), VarLocation{name=factorLabel98, type=int, expr=0, size=0}, VarLocation{name=factorLabel99, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=factorLabel101, type=boolean, expr=VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel102, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel103, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=NONLabel102, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel105, type=boolean, expr=VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel106, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel107, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel106, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel109, type=boolean, expr=VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel110, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}, size=0}}
{OR(||), VarLocation{name=DISYUNCIONLabel97, type=boolean, expr=VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}, size=0}, VarLocation{name=factorLabel111, type=boolean, expr=VarLocation{name=CONJUNCIONLabel110, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel112, type=boolean, expr=VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel110, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
{CMP, VarLocation{name=DISYUNCIONLabel112, type=boolean, expr=VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel110, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel113}
{RETURN, null, null, Result: VarLocation{name=factorLabel115, type=float, expr=8.50, size=0}}
{JMP, null, null, Result: endIfLabel114}
{LABEL, null, null, Result: elseCondLabel113}
{LABEL, null, null, Result: endIfLabel114}
{CEQ(==), VarLocation{name=factorLabel116, type=int, expr=0, size=0}, VarLocation{name=factorLabel117, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}}
{CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel120, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=factorLabel119, type=boolean, expr=VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel122, type=boolean, expr=VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel123, type=boolean, expr=VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel124, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel125, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel123, type=boolean, expr=VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel126, type=boolean, expr=VarLocation{name=CEQLabel125, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel127, type=boolean, expr=VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel125, type=boolean, expr=0==6, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel127, type=boolean, expr=VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel125, type=boolean, expr=0==6, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel128}
{RETURN, null, null, Result: VarLocation{name=factorLabel130, type=float, expr=10.00, size=0}}
{JMP, null, null, Result: endIfLabel129}
{LABEL, null, null, Result: elseCondLabel128}
{LABEL, null, null, Result: endIfLabel129}
{LABEL, null, null, Result: EndMethod dados}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [1, 6, 9]}
{METHODCALL, dados, 3, Result: RESULTLabel134}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=dados, args=[1, 6, 9]}]}, null, Result: EXTERNINVKLabel136}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod dados}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=dados, return_not_void=true, typeReturn=float, parameters [Simbolo{type=int, name=d1, value=null, size=0, offset=0}, Simbolo{type=int, name=d2, value=null, size=0, offset=0}, Simbolo{type=int, name=d3, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel5, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel6, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel9, type=boolean, expr=!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=NONLabel5, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel9, type=boolean, expr=!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel10, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel13, type=boolean, expr=VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel14, type=boolean, expr=!VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel10, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel14, type=boolean, expr=!VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel15, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel15, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel7, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel12, type=boolean, expr=0==6, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel16}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel18, type=float, expr=1.00, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel17}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel16}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel17}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel19, type=int, expr=0, size=0}, VarLocation{name=factorLabel20, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel23, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel25, type=boolean, expr=VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel26, type=boolean, expr=!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel22, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel26, type=boolean, expr=!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel27, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel28, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel30, type=boolean, expr=VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel31, type=boolean, expr=!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel27, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel31, type=boolean, expr=!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel34, type=int, expr=0, size=0}, VarLocation{name=factorLabel35, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel37, type=boolean, expr=VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel38, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel39, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=NONLabel38, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel41, type=boolean, expr=VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel42, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel43, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel45, type=boolean, expr=VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel46, type=boolean, expr=!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel42, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel46, type=boolean, expr=!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=factorLabel33, type=boolean, expr=VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}, size=0}, VarLocation{name=factorLabel48, type=boolean, expr=VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel49, type=boolean, expr=VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel50, type=int, expr=0, size=0}, VarLocation{name=factorLabel51, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel53, type=boolean, expr=VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel54, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel55, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel57, type=boolean, expr=VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel58, type=boolean, expr=!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=NONLabel54, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel58, type=boolean, expr=!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel59, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel60, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel59, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel62, type=boolean, expr=VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel63, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=DISYUNCIONLabel49, type=boolean, expr=VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}, size=0}, VarLocation{name=factorLabel64, type=boolean, expr=VarLocation{name=CONJUNCIONLabel63, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel65, type=boolean, expr=VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel63, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=DISYUNCIONLabel65, type=boolean, expr=VarLocation{name=CONJUNCIONLabel32, type=boolean, expr=VarLocation{name=CEQLabel21, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel24, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel29, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel36, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel44, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel63, type=boolean, expr=!VarLocation{name=CEQLabel52, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel56, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel61, type=boolean, expr=0==6, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel66}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel68, type=float, expr=4.00, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel67}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel66}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel67}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel69, type=int, expr=0, size=0}, VarLocation{name=factorLabel70, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel73, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel72, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel75, type=boolean, expr=VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel76, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel77, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel79, type=boolean, expr=VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel80, type=boolean, expr=!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel76, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel80, type=boolean, expr=!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel83, type=int, expr=0, size=0}, VarLocation{name=factorLabel84, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel87, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel89, type=boolean, expr=VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel90, type=boolean, expr=!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel86, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=NONLabel90, type=boolean, expr=!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel92, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel94, type=boolean, expr=VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=factorLabel82, type=boolean, expr=VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}, size=0}, VarLocation{name=factorLabel96, type=boolean, expr=VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel97, type=boolean, expr=VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel98, type=int, expr=0, size=0}, VarLocation{name=factorLabel99, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel101, type=boolean, expr=VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}, size=0}, null, Result: VarLocation{name=NONLabel102, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel103, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=NONLabel102, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel105, type=boolean, expr=VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel106, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel107, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel106, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel109, type=boolean, expr=VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel110, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=DISYUNCIONLabel97, type=boolean, expr=VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}, size=0}, VarLocation{name=factorLabel111, type=boolean, expr=VarLocation{name=CONJUNCIONLabel110, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel112, type=boolean, expr=VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel110, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=DISYUNCIONLabel112, type=boolean, expr=VarLocation{name=CONJUNCIONLabel81, type=boolean, expr=VarLocation{name=CEQLabel71, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel74, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel78, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel95, type=boolean, expr=VarLocation{name=CEQLabel85, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel93, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel110, type=boolean, expr=!VarLocation{name=CEQLabel100, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel104, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel108, type=boolean, expr=0==6, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel113}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel115, type=float, expr=8.50, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel114}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel113}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel114}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel116, type=int, expr=0, size=0}, VarLocation{name=factorLabel117, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d2, type=int, expr=0, size=0}, VarLocation{name=factorLabel120, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel119, type=boolean, expr=VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel122, type=boolean, expr=VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel123, type=boolean, expr=VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=d3, type=int, expr=0, size=0}, VarLocation{name=factorLabel124, type=int, expr=6, size=0}, Result: VarLocation{name=CEQLabel125, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel123, type=boolean, expr=VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=factorLabel126, type=boolean, expr=VarLocation{name=CEQLabel125, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel127, type=boolean, expr=VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel125, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel127, type=boolean, expr=VarLocation{name=CEQLabel118, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel121, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel125, type=boolean, expr=0==6, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel128}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel130, type=float, expr=10.00, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel129}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel128}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel129}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod dados}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [1, 6, 9]}
index: 2 tamaño: 3

Result = 9
index: 1 tamaño: 3

Result = 6
index: 0 tamaño: 3

Result = 1
finalizado.

procesando : . . . {METHODCALL, dados, 3, Result: RESULTLabel134}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=dados, args=[1, 6, 9]}]}, null, Result: EXTERNINVKLabel136}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	dados
    .type	dados, @function 
dados: 
    enter   $(12), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-4(%ebp), %eax
    cmpl	-8(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -12(%ebp)

    cmp $0, -16(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -20(%ebp) 

    movl	1(%ebp), %eax
    cmpl	-24(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -28(%ebp)

    cmp $0, -32(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -36(%ebp) 

    cmp	$0, -20(%ebp)
    je .L0
    cmp	$0, -36(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -40(%ebp)
.L2:

    movl	2(%ebp), %eax
    cmpl	-44(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -48(%ebp)

    cmp $0, -52(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -56(%ebp) 

    cmp	$0, -40(%ebp)
    je .L3
    cmp	$0, -56(%ebp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -60(%ebp)
.L5:

    mov $ 1, %eax
    cmp -60(%ebp), %eax

    jne elseCondLabel16

    mov $1.00, %eax

    jmp endIfLabel17

.elseCondLabel16:

.endIfLabel17:

    movl	-68(%ebp), %eax
    cmpl	-72(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -76(%ebp)

    movl	1(%ebp), %eax
    cmpl	-84(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -88(%ebp)

    cmp $0, -92(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -96(%ebp) 

    cmp	$0, -80(%ebp)
    je .L6
    cmp	$0, -96(%ebp)
    je .L6
    mov	$1, %eax
    jmp .L7
.L6:
    movl	$0, %eax
    jmp .L8
.L7:
    movl	%eax, -100(%ebp)
.L8:

    movl	2(%ebp), %eax
    cmpl	-104(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -108(%ebp)

    cmp $0, -112(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -116(%ebp) 

    cmp	$0, -100(%ebp)
    je .L9
    cmp	$0, -116(%ebp)
    je .L9
    mov	$1, %eax
    jmp .L10
.L9:
    movl	$0, %eax
    jmp .L11
.L10:
    movl	%eax, -120(%ebp)
.L11:

    movl	-128(%ebp), %eax
    cmpl	-132(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -136(%ebp)

    cmp $0, -140(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -144(%ebp) 

    movl	1(%ebp), %eax
    cmpl	-148(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -152(%ebp)

    cmp	$0, -144(%ebp)
    je .L12
    cmp	$0, -156(%ebp)
    je .L12
    mov	$1, %eax
    jmp .L13
.L12:
    movl	$0, %eax
    jmp .L14
.L13:
    movl	%eax, -160(%ebp)
.L14:

    movl	2(%ebp), %eax
    cmpl	-164(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -168(%ebp)

    cmp $0, -172(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -176(%ebp) 

    cmp	$0, -160(%ebp)
    je .L15
    cmp	$0, -176(%ebp)
    je .L15
    mov	$1, %eax
    jmp .L16
.L15:
    movl	$0, %eax
    jmp .L17
.L16:
    movl	%eax, -180(%ebp)
.L17:

    cmp	$0, -124(%ebp)
    jne .L18
    cmp	$0, -184(%ebp)
    je .L18
    mov	$1, %eax
    jmp .L19
.L18:
    movl	$0, %eax
    jmp .L20
.L19:
    movl	%eax, -188(%ebp)
.L20:

    movl	-192(%ebp), %eax
    cmpl	-196(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -200(%ebp)

    cmp $0, -204(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -208(%ebp) 

    movl	1(%ebp), %eax
    cmpl	-212(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -216(%ebp)

    cmp $0, -220(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -224(%ebp) 

    cmp	$0, -208(%ebp)
    je .L21
    cmp	$0, -224(%ebp)
    je .L21
    mov	$1, %eax
    jmp .L22
.L21:
    movl	$0, %eax
    jmp .L23
.L22:
    movl	%eax, -228(%ebp)
.L23:

    movl	2(%ebp), %eax
    cmpl	-232(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -236(%ebp)

    cmp	$0, -228(%ebp)
    je .L24
    cmp	$0, -240(%ebp)
    je .L24
    mov	$1, %eax
    jmp .L25
.L24:
    movl	$0, %eax
    jmp .L26
.L25:
    movl	%eax, -244(%ebp)
.L26:

    cmp	$0, -188(%ebp)
    jne .L27
    cmp	$0, -248(%ebp)
    je .L27
    mov	$1, %eax
    jmp .L28
.L27:
    movl	$0, %eax
    jmp .L29
.L28:
    movl	%eax, -252(%ebp)
.L29:

    mov $ 1, %eax
    cmp -252(%ebp), %eax

    jne elseCondLabel66

    mov $4.00, %eax

    jmp endIfLabel67

.elseCondLabel66:

.endIfLabel67:

    movl	-260(%ebp), %eax
    cmpl	-264(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -268(%ebp)

    movl	1(%ebp), %eax
    cmpl	-276(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -280(%ebp)

    cmp	$0, -272(%ebp)
    je .L30
    cmp	$0, -284(%ebp)
    je .L30
    mov	$1, %eax
    jmp .L31
.L30:
    movl	$0, %eax
    jmp .L32
.L31:
    movl	%eax, -288(%ebp)
.L32:

    movl	2(%ebp), %eax
    cmpl	-292(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -296(%ebp)

    cmp $0, -300(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -304(%ebp) 

    cmp	$0, -288(%ebp)
    je .L33
    cmp	$0, -304(%ebp)
    je .L33
    mov	$1, %eax
    jmp .L34
.L33:
    movl	$0, %eax
    jmp .L35
.L34:
    movl	%eax, -308(%ebp)
.L35:

    movl	-316(%ebp), %eax
    cmpl	-320(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -324(%ebp)

    movl	1(%ebp), %eax
    cmpl	-332(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -336(%ebp)

    cmp $0, -340(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -344(%ebp) 

    cmp	$0, -328(%ebp)
    je .L36
    cmp	$0, -344(%ebp)
    je .L36
    mov	$1, %eax
    jmp .L37
.L36:
    movl	$0, %eax
    jmp .L38
.L37:
    movl	%eax, -348(%ebp)
.L38:

    movl	2(%ebp), %eax
    cmpl	-352(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -356(%ebp)

    cmp	$0, -348(%ebp)
    je .L39
    cmp	$0, -360(%ebp)
    je .L39
    mov	$1, %eax
    jmp .L40
.L39:
    movl	$0, %eax
    jmp .L41
.L40:
    movl	%eax, -364(%ebp)
.L41:

    cmp	$0, -312(%ebp)
    jne .L42
    cmp	$0, -368(%ebp)
    je .L42
    mov	$1, %eax
    jmp .L43
.L42:
    movl	$0, %eax
    jmp .L44
.L43:
    movl	%eax, -372(%ebp)
.L44:

    movl	-376(%ebp), %eax
    cmpl	-380(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -384(%ebp)

    cmp $0, -388(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -392(%ebp) 

    movl	1(%ebp), %eax
    cmpl	-396(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -400(%ebp)

    cmp	$0, -392(%ebp)
    je .L45
    cmp	$0, -404(%ebp)
    je .L45
    mov	$1, %eax
    jmp .L46
.L45:
    movl	$0, %eax
    jmp .L47
.L46:
    movl	%eax, -408(%ebp)
.L47:

    movl	2(%ebp), %eax
    cmpl	-412(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -416(%ebp)

    cmp	$0, -408(%ebp)
    je .L48
    cmp	$0, -420(%ebp)
    je .L48
    mov	$1, %eax
    jmp .L49
.L48:
    movl	$0, %eax
    jmp .L50
.L49:
    movl	%eax, -424(%ebp)
.L50:

    cmp	$0, -372(%ebp)
    jne .L51
    cmp	$0, -428(%ebp)
    je .L51
    mov	$1, %eax
    jmp .L52
.L51:
    movl	$0, %eax
    jmp .L53
.L52:
    movl	%eax, -432(%ebp)
.L53:

    mov $ 1, %eax
    cmp -432(%ebp), %eax

    jne elseCondLabel113

    mov $8.50, %eax

    jmp endIfLabel114

.elseCondLabel113:

.endIfLabel114:

    movl	-440(%ebp), %eax
    cmpl	-444(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -448(%ebp)

    movl	1(%ebp), %eax
    cmpl	-456(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -460(%ebp)

    cmp	$0, -452(%ebp)
    je .L54
    cmp	$0, -464(%ebp)
    je .L54
    mov	$1, %eax
    jmp .L55
.L54:
    movl	$0, %eax
    jmp .L56
.L55:
    movl	%eax, -468(%ebp)
.L56:

    movl	2(%ebp), %eax
    cmpl	-472(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -476(%ebp)

    cmp	$0, -468(%ebp)
    je .L57
    cmp	$0, -480(%ebp)
    je .L57
    mov	$1, %eax
    jmp .L58
.L57:
    movl	$0, %eax
    jmp .L59
.L58:
    movl	%eax, -484(%ebp)
.L59:

    mov $ 1, %eax
    cmp -484(%ebp), %eax

    jne elseCondLabel128

    mov $10.00, %eax

    jmp endIfLabel129

.elseCondLabel128:

.endIfLabel129:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $9 , 16(%esp)
    movl $6 , 12(%esp)
    movl $1 , 8(%esp)

    call dados

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_continuebreak.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 44
lista: 
{LABEL, null, null, Result: BeginMethod pruContinue}

{METHODDECL, Metodo{ name=pruContinue, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=int, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{UNARYMINUS(-expr), VarLocation{name=factorLabel1, type=int, expr=1, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel2, type=int, expr=-1, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel2, type=int, expr=-1, size=0}, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel3, type=int, expr=23, size=0}, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel4, type=int, expr=23, size=0}, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
{GEQ(>=), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel5, type=int, expr=0, size=0}, Result: VarLocation{name=GEQLabel6, type=boolean, expr=0.0>=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel8}
{CMP, VarLocation{name=factorLabel7, type=boolean, expr=VarLocation{name=GEQLabel6, type=boolean, expr=0.0>=0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel9}
{MINUS(-), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel10, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel11, type=float, expr=0.0-1, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel11, type=float, expr=0.0-1, size=0}, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
{LE(<), VarLocation{name=factorLabel12, type=float, expr=0.0, size=0}, VarLocation{name=b, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel13, type=boolean, expr=0.0<0, size=0}}
{CMP, VarLocation{name=LELabel13, type=boolean, expr=0.0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel14}
{NEQ(!=), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel16, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel17, type=boolean, expr=0.0!=0, size=0}}
{CMP, VarLocation{name=NEQLabel17, type=boolean, expr=0.0!=0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel18}
{MULTIPLY(*), VarLocation{name=total, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel20, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel21, type=float, expr=0.0*0.0, size=0}}
{MULTIPLY(*), VarLocation{name=MULTIPLYLabel21, type=float, expr=0.0*0.0, size=0}, VarLocation{name=b, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel22, type=float, expr=0.0*0.0*0, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel22, type=float, expr=0.0*0.0*0, size=0}, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel19}
{LABEL, null, null, Result: elseCondLabel18}
{LABEL, null, null, Result: endIfLabel19}
{JMP, null, null, Result: BeginWhileLabel8}
{JMP, null, null, Result: endIfLabel15}
{LABEL, null, null, Result: elseCondLabel14}
{UNARYMINUS(-expr), VarLocation{name=factorLabel23, type=float, expr=1000.2343, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel24, type=float, expr=-1000.2343, size=0}}
{PLUS(+), VarLocation{name=UNARYMINUSLabel24, type=float, expr=-1000.2343, size=0}, VarLocation{name=factorLabel25, type=int, expr=6752, size=0}, Result: VarLocation{name=PLUSLabel26, type=float, expr=-1000.2343+6752, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel26, type=float, expr=-1000.2343+6752, size=0}, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{JMP, null, null, Result: EndWhileLabel9}
{LABEL, null, null, Result: endIfLabel15}
{JMP, null, null, Result: BeginWhileLabel8}
{LABEL, null, null, Result: EndWhileLabel9}
{UNARYMINUS(-expr), VarLocation{name=factorLabel27, type=int, expr=2, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel28, type=int, expr=-2, size=0}}
{MULTIPLY(*), VarLocation{name=UNARYMINUSLabel28, type=int, expr=-2, size=0}, VarLocation{name=total, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel29, type=float, expr=-2*0.0, size=0}}
{RETURN, null, null, Result: VarLocation{name=MULTIPLYLabel29, type=float, expr=-2*0.0, size=0}}
{LABEL, null, null, Result: EndMethod pruContinue}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [3.0, 2]}
{METHODCALL, pruContinue, 2, Result: RESULTLabel32}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=pruContinue, args=[3.0, 2]}]}, null, Result: EXTERNINVKLabel34}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruContinue}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruContinue, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=int, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel1, type=int, expr=1, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel2, type=int, expr=-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel2, type=int, expr=-1, size=0}, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel3, type=int, expr=23, size=0}, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel4, type=int, expr=23, size=0}, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {GEQ(>=), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel5, type=int, expr=0, size=0}, Result: VarLocation{name=GEQLabel6, type=boolean, expr=0.0>=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel8}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel7, type=boolean, expr=VarLocation{name=GEQLabel6, type=boolean, expr=0.0>=0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel9}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel10, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel11, type=float, expr=0.0-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel11, type=float, expr=0.0-1, size=0}, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=factorLabel12, type=float, expr=0.0, size=0}, VarLocation{name=b, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel13, type=boolean, expr=0.0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel13, type=boolean, expr=0.0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel14}
finalizado.

procesando : . . . {NEQ(!=), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel16, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel17, type=boolean, expr=0.0!=0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=NEQLabel17, type=boolean, expr=0.0!=0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel18}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=total, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel20, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel21, type=float, expr=0.0*0.0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=MULTIPLYLabel21, type=float, expr=0.0*0.0, size=0}, VarLocation{name=b, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel22, type=float, expr=0.0*0.0*0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel22, type=float, expr=0.0*0.0*0, size=0}, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel19}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel18}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel19}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel8}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel15}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel14}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel23, type=float, expr=1000.2343, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel24, type=float, expr=-1000.2343, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=UNARYMINUSLabel24, type=float, expr=-1000.2343, size=0}, VarLocation{name=factorLabel25, type=int, expr=6752, size=0}, Result: VarLocation{name=PLUSLabel26, type=float, expr=-1000.2343+6752, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel26, type=float, expr=-1000.2343+6752, size=0}, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: EndWhileLabel9}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel15}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel8}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel9}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel27, type=int, expr=2, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel28, type=int, expr=-2, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=UNARYMINUSLabel28, type=int, expr=-2, size=0}, VarLocation{name=total, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel29, type=float, expr=-2*0.0, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=MULTIPLYLabel29, type=float, expr=-2*0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruContinue}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [3.0, 2]}
index: 1 tamaño: 2

Result = 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, pruContinue, 2, Result: RESULTLabel32}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=pruContinue, args=[3.0, 2]}]}, null, Result: EXTERNINVKLabel34}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	pruContinue
    .type	pruContinue, @function 
pruContinue: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-16(%ebp), %eax 
    negl	%eax 
    movl	%eax, -20(%ebp) 

    mov -20(%ebp),-12(%ebp)

    mov $23,-8(%ebp)

    mov $23,-4(%ebp)

    movl	-4(%ebp), %eax
    cmpl	-32(%ebp), %eax
    setge %al
    movzbl %al, %eax
    movl	%eax, -36(%ebp)

.BeginWhileLabel8:

    mov $ 1, %eax
    cmp -40(%ebp), %eax

    jne EndWhileLabel9

    mov -4(%ebp) , %eax 
    mov -44(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-48(%ebp) 

    mov -48(%ebp),-4(%ebp)

    movl	-52(%ebp), %eax
    cmpl	1(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -56(%ebp)

    mov $ 1, %eax
    cmp -56(%ebp), %eax

    jne elseCondLabel14

    movl	-4(%ebp), %eax
    cmpl	-60(%ebp), %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -64(%ebp)

    mov $ 1, %eax
    cmp -64(%ebp), %eax

    jne elseCondLabel18

    mov -12(%ebp) , %eax 
    mov -68(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-72(%ebp) 

    mov -72(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-76(%ebp) 

    mov -76(%ebp),-12(%ebp)

    jmp endIfLabel19

.elseCondLabel18:

.endIfLabel19:

    jmp BeginWhileLabel8

    jmp endIfLabel15

.elseCondLabel14:

    movl	-80(%ebp), %eax 
    negl	%eax 
    movl	%eax, -84(%ebp) 

    mov -84(%ebp) , %eax 
    mov -88(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-92(%ebp) 

    mov -92(%ebp),-12(%ebp)

    jmp EndWhileLabel9

.endIfLabel15:

    jmp BeginWhileLabel8

.EndWhileLabel9:

    movl	-96(%ebp), %eax 
    negl	%eax 
    movl	%eax, -100(%ebp) 

    mov -100(%ebp) , %eax 
    mov -12(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-104(%ebp) 

    mov -104(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $2 , 12(%esp)

    call pruContinue

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_expresiones01.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 44
lista: 
{LABEL, null, null, Result: BeginMethod prueba}

{METHODDECL, Metodo{ name=prueba, return_not_void=true, typeReturn=float, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=50, size=0}, null, Result: VarLocation{name=g, type=int, expr=null, size=0}}
{GE(>), VarLocation{name=g, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel4}
{ASSIGN(=), VarLocation{name=factorLabel6, type=int, expr=4, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{CEQ(==), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=4, size=0}, Result: VarLocation{name=CEQLabel8, type=boolean, expr=0==4, size=0}}
{CMP, VarLocation{name=CEQLabel8, type=boolean, expr=0==4, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel9}
{LE(<), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=4, size=0}, Result: VarLocation{name=LELabel12, type=boolean, expr=0<4, size=0}}
{LABEL, null, null, Result: BeginWhileLabel14}
{CMP, VarLocation{name=factorLabel13, type=boolean, expr=VarLocation{name=LELabel12, type=boolean, expr=0<4, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel15}
{GE(>), VarLocation{name=g, type=int, expr=0, size=0}, VarLocation{name=factorLabel16, type=int, expr=4, size=0}, Result: VarLocation{name=GELabel17, type=boolean, expr=0>4, size=0}}
{LABEL, null, null, Result: BeginWhileLabel19}
{CMP, VarLocation{name=factorLabel18, type=boolean, expr=VarLocation{name=GELabel17, type=boolean, expr=0>4, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel20}
{MINUS(-), VarLocation{name=g, type=int, expr=0, size=0}, VarLocation{name=factorLabel21, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel22, type=int, expr=0-1, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel22, type=int, expr=0-1, size=0}, null, Result: VarLocation{name=g, type=int, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel23, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel24, type=int, expr=0*2, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel24, type=int, expr=0*2, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel19}
{LABEL, null, null, Result: EndWhileLabel20}
{PLUS(+), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel25, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel26, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel26, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{DIVIDE(/), VarLocation{name=c, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel27, type=int, expr=2, size=0}, Result: VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=c, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel27, type=int, expr=2, size=0}, size=0}}
{ASSIGN(=), VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=c, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel27, type=int, expr=2, size=0}, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel14}
{LABEL, null, null, Result: EndWhileLabel15}
{JMP, null, null, Result: endIfLabel10}
{LABEL, null, null, Result: elseCondLabel9}
{LABEL, null, null, Result: endIfLabel10}
{JMP, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: elseCondLabel4}
{LABEL, null, null, Result: endIfLabel5}
{RETURN, null, null, Result: VarLocation{name=c, type=float, expr=0.0, size=0}}
{LABEL, null, null, Result: EndMethod prueba}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [6]}
{METHODCALL, prueba, 1, Result: RESULTLabel30}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=prueba, args=[6]}]}, null, Result: EXTERNINVKLabel32}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod prueba}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=prueba, return_not_void=true, typeReturn=float, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=50, size=0}, null, Result: VarLocation{name=g, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=g, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel6, type=int, expr=4, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=4, size=0}, Result: VarLocation{name=CEQLabel8, type=boolean, expr=0==4, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel8, type=boolean, expr=0==4, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel9}
finalizado.

procesando : . . . {LE(<), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=4, size=0}, Result: VarLocation{name=LELabel12, type=boolean, expr=0<4, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel14}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel13, type=boolean, expr=VarLocation{name=LELabel12, type=boolean, expr=0<4, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel15}
finalizado.

procesando : . . . {GE(>), VarLocation{name=g, type=int, expr=0, size=0}, VarLocation{name=factorLabel16, type=int, expr=4, size=0}, Result: VarLocation{name=GELabel17, type=boolean, expr=0>4, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel19}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel18, type=boolean, expr=VarLocation{name=GELabel17, type=boolean, expr=0>4, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel20}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=g, type=int, expr=0, size=0}, VarLocation{name=factorLabel21, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel22, type=int, expr=0-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel22, type=int, expr=0-1, size=0}, null, Result: VarLocation{name=g, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel23, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel24, type=int, expr=0*2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel24, type=int, expr=0*2, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel19}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel20}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel25, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel26, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel26, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=c, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel27, type=int, expr=2, size=0}, Result: VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=c, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel27, type=int, expr=2, size=0}, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=c, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel27, type=int, expr=2, size=0}, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel15}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel9}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel10}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=c, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod prueba}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6]}
index: 0 tamaño: 1

Result = 6
finalizado.

procesando : . . . {METHODCALL, prueba, 1, Result: RESULTLabel30}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=prueba, args=[6]}]}, null, Result: EXTERNINVKLabel32}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	prueba
    .type	prueba, @function 
prueba: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $50,-12(%ebp)

    movl	-12(%ebp), %eax
    cmpl	-20(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -24(%ebp)

    mov $ 1, %eax
    cmp -24(%ebp), %eax

    jne elseCondLabel4

    mov $4,-4(%ebp)

    movl	-4(%ebp), %eax
    cmpl	-32(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -36(%ebp)

    mov $ 1, %eax
    cmp -36(%ebp), %eax

    jne elseCondLabel9

    movl	-4(%ebp), %eax
    cmpl	-40(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -44(%ebp)

.BeginWhileLabel14:

    mov $ 1, %eax
    cmp -48(%ebp), %eax

    jne EndWhileLabel15

    movl	-12(%ebp), %eax
    cmpl	-52(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -56(%ebp)

.BeginWhileLabel19:

    mov $ 1, %eax
    cmp -60(%ebp), %eax

    jne EndWhileLabel20

    mov -12(%ebp) , %eax 
    mov -64(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-68(%ebp) 

    mov -68(%ebp),-12(%ebp)

    mov -4(%ebp) , %eax 
    mov -72(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-76(%ebp) 

    mov -76(%ebp),-8(%ebp)

    jmp BeginWhileLabel19

.EndWhileLabel20:

    mov -4(%ebp) , %eax 
    mov -80(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-84(%ebp) 

    mov -84(%ebp),-4(%ebp)

    mov -8(%ebp) , %eax 
    mov -88(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-92(%ebp) 

    mov -92(%ebp),-8(%ebp)

    jmp BeginWhileLabel14

.EndWhileLabel15:

    jmp endIfLabel10

.elseCondLabel9:

.endIfLabel10:

    jmp endIfLabel5

.elseCondLabel4:

.endIfLabel5:

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $6 , 8(%esp)

    call prueba

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_expresiones02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 27
lista: 
{LABEL, null, null, Result: BeginMethod prueba}

{METHODDECL, Metodo{ name=prueba, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=p, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=4, size=0}, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=5, size=0}, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=b, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel3, type=int, expr=0*0, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel3, type=int, expr=0*0, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{PLUS(+), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel4, type=int, expr=0, size=0}, Result: VarLocation{name=PLUSLabel5, type=int, expr=0+0, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel5, type=int, expr=0+0, size=0}, null, Result: VarLocation{name=p, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel6, type=float, expr=3.14, size=0}, null, Result: VarLocation{name=pi, type=float, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=factorLabel7, type=int, expr=2, size=0}, VarLocation{name=pi, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel8, type=float, expr=2*0.0, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel8, type=float, expr=2*0.0, size=0}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{DIVIDE(/), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=f, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel9, type=float, expr=VarLocation{name=a, type=int, expr=0, size=0}/VarLocation{name=f, type=float, expr=0.0, size=0}, size=0}}
{GE(>), VarLocation{name=factorLabel10, type=float, expr=VarLocation{name=DIVIDELabel9, type=float, expr=VarLocation{name=a, type=int, expr=0, size=0}/VarLocation{name=f, type=float, expr=0.0, size=0}, size=0}, size=0}, VarLocation{name=factorLabel11, type=int, expr=5, size=0}, Result: VarLocation{name=GELabel12, type=boolean, expr=VarLocation{name=DIVIDELabel9, type=float, expr=VarLocation{name=a, type=int, expr=0, size=0}/VarLocation{name=f, type=float, expr=0.0, size=0}, size=0}>5, size=0}}
{CMP, VarLocation{name=GELabel12, type=boolean, expr=VarLocation{name=DIVIDELabel9, type=float, expr=VarLocation{name=a, type=int, expr=0, size=0}/VarLocation{name=f, type=float, expr=0.0, size=0}, size=0}>5, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel13}
{RETURN, null, null, Result: VarLocation{name=factorLabel15, type=int, expr=1, size=0}}
{JMP, null, null, Result: endIfLabel14}
{LABEL, null, null, Result: elseCondLabel13}
{RETURN, null, null, Result: VarLocation{name=factorLabel16, type=int, expr=0, size=0}}
{LABEL, null, null, Result: endIfLabel14}
{LABEL, null, null, Result: EndMethod prueba}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [6]}
{METHODCALL, prueba, 1, Result: RESULTLabel18}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=prueba, args=[6]}]}, null, Result: EXTERNINVKLabel20}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod prueba}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=prueba, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=p, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=4, size=0}, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=5, size=0}, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=b, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel3, type=int, expr=0*0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel3, type=int, expr=0*0, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel4, type=int, expr=0, size=0}, Result: VarLocation{name=PLUSLabel5, type=int, expr=0+0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel5, type=int, expr=0+0, size=0}, null, Result: VarLocation{name=p, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel6, type=float, expr=3.14, size=0}, null, Result: VarLocation{name=pi, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel7, type=int, expr=2, size=0}, VarLocation{name=pi, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel8, type=float, expr=2*0.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel8, type=float, expr=2*0.0, size=0}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=f, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel9, type=float, expr=VarLocation{name=a, type=int, expr=0, size=0}/VarLocation{name=f, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel10, type=float, expr=VarLocation{name=DIVIDELabel9, type=float, expr=VarLocation{name=a, type=int, expr=0, size=0}/VarLocation{name=f, type=float, expr=0.0, size=0}, size=0}, size=0}, VarLocation{name=factorLabel11, type=int, expr=5, size=0}, Result: VarLocation{name=GELabel12, type=boolean, expr=VarLocation{name=DIVIDELabel9, type=float, expr=VarLocation{name=a, type=int, expr=0, size=0}/VarLocation{name=f, type=float, expr=0.0, size=0}, size=0}>5, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel12, type=boolean, expr=VarLocation{name=DIVIDELabel9, type=float, expr=VarLocation{name=a, type=int, expr=0, size=0}/VarLocation{name=f, type=float, expr=0.0, size=0}, size=0}>5, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel13}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel15, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel13}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel16, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod prueba}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6]}
index: 0 tamaño: 1

Result = 6
finalizado.

procesando : . . . {METHODCALL, prueba, 1, Result: RESULTLabel18}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=prueba, args=[6]}]}, null, Result: EXTERNINVKLabel20}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	prueba
    .type	prueba, @function 
prueba: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $4,-12(%ebp)

    mov $5,-16(%ebp)

    mov -12(%ebp) , %eax 
    mov -16(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-28(%ebp) 

    mov -28(%ebp),-4(%ebp)

    mov -4(%ebp) , %eax 
    mov -32(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-36(%ebp) 

    mov -36(%ebp),0(%ebp)

    mov $3.14,-40(%ebp)

    mov -48(%ebp) , %eax 
    mov -40(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-52(%ebp) 

    mov -52(%ebp),-8(%ebp)

    mov -4(%ebp) , %eax 
    mov -8(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-56(%ebp) 

    movl	-60(%ebp), %eax
    cmpl	-64(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -68(%ebp)

    mov $ 1, %eax
    cmp -68(%ebp), %eax

    jne elseCondLabel13

    mov $1, %eax

    jmp endIfLabel14

.elseCondLabel13:

    mov $0, %eax

.endIfLabel14:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $6 , 8(%esp)

    call prueba

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_float01.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 46
lista: 
{LABEL, null, null, Result: BeginMethod potencia}

{METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=int, name=n, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel3, type=float, expr=1.0, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{LE(<), VarLocation{name=n, type=int, expr=0, size=0}, VarLocation{name=factorLabel4, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel6}
{UNARYMINUS(-expr), VarLocation{name=n, type=int, expr=0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{NON(!), VarLocation{name=neg, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel9, type=boolean, expr=!false, size=0}}
{ASSIGN(=), VarLocation{name=NONLabel9, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel7}
{LABEL, null, null, Result: elseCondLabel6}
{LABEL, null, null, Result: endIfLabel7}
{LEQ(<=), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LEQLabel10, type=boolean, expr=0<=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel12}
{CMP, VarLocation{name=factorLabel11, type=boolean, expr=VarLocation{name=LEQLabel10, type=boolean, expr=0<=0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel13}
{MULTIPLY(*), VarLocation{name=prod, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel15, type=float, expr=0.0*0.0, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel15, type=float, expr=0.0*0.0, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel16, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel17, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel17, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel12}
{LABEL, null, null, Result: EndWhileLabel13}
{NON(!), VarLocation{name=neg, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel18, type=boolean, expr=!false, size=0}}
{NON(!), VarLocation{name=factorLabel19, type=boolean, expr=VarLocation{name=NONLabel18, type=boolean, expr=!false, size=0}, size=0}, null, Result: VarLocation{name=NONLabel20, type=boolean, expr=!VarLocation{name=NONLabel18, type=boolean, expr=!false, size=0}, size=0}}
{CMP, VarLocation{name=NONLabel20, type=boolean, expr=!VarLocation{name=NONLabel18, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel21}
{DIVIDE(/), VarLocation{name=factorLabel23, type=float, expr=1.0, size=0}, VarLocation{name=prod, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel24, type=float, expr=VarLocation{name=factorLabel23, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=DIVIDELabel24, type=float, expr=VarLocation{name=factorLabel23, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
{JMP, null, null, Result: endIfLabel22}
{LABEL, null, null, Result: elseCondLabel21}
{RETURN, null, null, Result: VarLocation{name=prod, type=float, expr=0.0, size=0}}
{LABEL, null, null, Result: endIfLabel22}
{UNARYMINUS(-expr), VarLocation{name=factorLabel25, type=float, expr=100.1, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel26, type=float, expr=-100.1, size=0}}
{RETURN, null, null, Result: VarLocation{name=UNARYMINUSLabel26, type=float, expr=-100.1, size=0}}
{LABEL, null, null, Result: EndMethod potencia}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel27, type=float, expr=8.0, size=0}, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 2]}
{METHODCALL, potencia, 2, Result: RESULTLabel29}
{ASSIGN(=), VarLocation{name=factorLabel30, type=float, expr=MethodCallExpr{name=potencia, args=[0.0, 2]}, size=0}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, 0.0]}, null, Result: EXTERNINVKLabel31}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod potencia}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=int, name=n, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel3, type=float, expr=1.0, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=n, type=int, expr=0, size=0}, VarLocation{name=factorLabel4, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel6}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=n, type=int, expr=0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=neg, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel9, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=NONLabel9, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel7}
finalizado.

procesando : . . . {LEQ(<=), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LEQLabel10, type=boolean, expr=0<=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel12}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel11, type=boolean, expr=VarLocation{name=LEQLabel10, type=boolean, expr=0<=0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel13}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=prod, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel15, type=float, expr=0.0*0.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel15, type=float, expr=0.0*0.0, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel16, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel17, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel17, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel12}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel13}
finalizado.

procesando : . . . {NON(!), VarLocation{name=neg, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel18, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel19, type=boolean, expr=VarLocation{name=NONLabel18, type=boolean, expr=!false, size=0}, size=0}, null, Result: VarLocation{name=NONLabel20, type=boolean, expr=!VarLocation{name=NONLabel18, type=boolean, expr=!false, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=NONLabel20, type=boolean, expr=!VarLocation{name=NONLabel18, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel21}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel23, type=float, expr=1.0, size=0}, VarLocation{name=prod, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel24, type=float, expr=VarLocation{name=factorLabel23, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=DIVIDELabel24, type=float, expr=VarLocation{name=factorLabel23, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel22}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel21}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=prod, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel22}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel25, type=float, expr=100.1, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel26, type=float, expr=-100.1, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=UNARYMINUSLabel26, type=float, expr=-100.1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod potencia}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel27, type=float, expr=8.0, size=0}, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 2]}
index: 1 tamaño: 2

Result = 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, potencia, 2, Result: RESULTLabel29}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel30, type=float, expr=MethodCallExpr{name=potencia, args=[0.0, 2]}, size=0}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, 0.0]}, null, Result: EXTERNINVKLabel31}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	potencia
    .type	potencia, @function 
potencia: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov $false,-8(%ebp)

    mov $1,-4(%ebp)

    mov $1.0,-12(%ebp)

    movl	1(%ebp), %eax
    cmpl	-28(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -32(%ebp)

    mov $ 1, %eax
    cmp -32(%ebp), %eax

    jne elseCondLabel6

    movl	1(%ebp), %eax 
    negl	%eax 
    movl	%eax, -36(%ebp) 

    mov -36(%ebp),1(%ebp)

    cmp $0, -8(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -40(%ebp) 

    mov -40(%ebp),-8(%ebp)

    jmp endIfLabel7

.elseCondLabel6:

.endIfLabel7:

    movl	-4(%ebp), %eax
    cmpl	1(%ebp), %eax
    setle %al
    movzbl %al, %eax
    movl	%eax, -44(%ebp)

.BeginWhileLabel12:

    mov $ 1, %eax
    cmp -48(%ebp), %eax

    jne EndWhileLabel13

    mov -12(%ebp) , %eax 
    mov -52(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-56(%ebp) 

    mov -56(%ebp),-12(%ebp)

    mov -4(%ebp) , %eax 
    mov -60(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-64(%ebp) 

    mov -64(%ebp),-4(%ebp)

    jmp BeginWhileLabel12

.EndWhileLabel13:

    cmp $0, -8(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -68(%ebp) 

    cmp $0, -72(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -76(%ebp) 

    mov $ 1, %eax
    cmp -76(%ebp), %eax

    jne elseCondLabel21

    mov -80(%ebp) , %eax 
    mov -12(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-84(%ebp) 

    mov -84(%ebp), %eax

    jmp endIfLabel22

.elseCondLabel21:

    mov -12(%ebp), %eax

.endIfLabel22:

    movl	-88(%ebp), %eax 
    negl	%eax 
    movl	%eax, -92(%ebp) 

    mov -92(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    mov $8.0,-8(%ebp)

    movl $2 , 12(%esp)

    call potencia

    mov $MethodCallExpr{name=potencia, args=[0.0, 2]},-4(%ebp)

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_float02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 32
lista: 
{LABEL, null, null, Result: BeginMethod sumatoria}

{METHODDECL, Metodo{ name=sumatoria, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
{GE(>), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel3, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel4, type=boolean, expr=0.0>0, size=0}}
{GE(>), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel5, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel6, type=boolean, expr=0.0>0, size=0}}
{OR(||), VarLocation{name=GELabel4, type=boolean, expr=0.0>0, size=0}, VarLocation{name=GELabel6, type=boolean, expr=0.0>0, size=0}, Result: VarLocation{name=DISYUNCIONLabel7, type=boolean, expr=0.0>0||0.0>0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel9}
{CMP, VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel7, type=boolean, expr=0.0>0||0.0>0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel10}
{GE(>), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel11, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel12, type=boolean, expr=0.0>0, size=0}}
{CMP, VarLocation{name=GELabel12, type=boolean, expr=0.0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel13}
{PLUS(+), VarLocation{name=total, type=float, expr=0.0, size=0}, VarLocation{name=i, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel15, type=float, expr=0.0+0.0, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel15, type=float, expr=0.0+0.0, size=0}, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel14}
{LABEL, null, null, Result: elseCondLabel13}
{LABEL, null, null, Result: endIfLabel14}
{ASSIGN(=), VarLocation{name=factorLabel16, type=float, expr=1.0, size=0}, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel9}
{LABEL, null, null, Result: EndWhileLabel10}
{ASSIGN(=), VarLocation{name=total, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{RETURN, null, null, Result: VarLocation{name=res, type=float, expr=0.0, size=0}}
{LABEL, null, null, Result: EndMethod sumatoria}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel17, type=float, expr=8.0, size=0}, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0]}
{METHODCALL, sumatoria, 1, Result: RESULTLabel18}
{ASSIGN(=), VarLocation{name=factorLabel19, type=float, expr=MethodCallExpr{name=sumatoria, args=[0.0]}, size=0}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, 0.0]}, null, Result: EXTERNINVKLabel20}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod sumatoria}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=sumatoria, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel3, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel4, type=boolean, expr=0.0>0, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel5, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel6, type=boolean, expr=0.0>0, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=GELabel4, type=boolean, expr=0.0>0, size=0}, VarLocation{name=GELabel6, type=boolean, expr=0.0>0, size=0}, Result: VarLocation{name=DISYUNCIONLabel7, type=boolean, expr=0.0>0||0.0>0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel9}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel7, type=boolean, expr=0.0>0||0.0>0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel10}
finalizado.

procesando : . . . {GE(>), VarLocation{name=i, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel11, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel12, type=boolean, expr=0.0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel12, type=boolean, expr=0.0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel13}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=total, type=float, expr=0.0, size=0}, VarLocation{name=i, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel15, type=float, expr=0.0+0.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel15, type=float, expr=0.0+0.0, size=0}, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel13}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel14}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel16, type=float, expr=1.0, size=0}, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel9}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel10}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=total, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=res, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod sumatoria}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel17, type=float, expr=8.0, size=0}, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0]}
index: 0 tamaño: 1
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, sumatoria, 1, Result: RESULTLabel18}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel19, type=float, expr=MethodCallExpr{name=sumatoria, args=[0.0]}, size=0}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, 0.0]}, null, Result: EXTERNINVKLabel20}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	sumatoria
    .type	sumatoria, @function 
sumatoria: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $0.0,-4(%ebp)

    mov $0.0,-8(%ebp)

    movl	-8(%ebp), %eax
    cmpl	-24(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -28(%ebp)

    movl	-8(%ebp), %eax
    cmpl	-32(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -36(%ebp)

    cmp	$0, -28(%ebp)
    jne .L0
    cmp	$0, -36(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -40(%ebp)
.L2:

.BeginWhileLabel9:

    mov $ 1, %eax
    cmp -44(%ebp), %eax

    jne EndWhileLabel10

    movl	-8(%ebp), %eax
    cmpl	-48(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -52(%ebp)

    mov $ 1, %eax
    cmp -52(%ebp), %eax

    jne elseCondLabel13

    mov -4(%ebp) , %eax 
    mov -8(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-56(%ebp) 

    mov -56(%ebp),-4(%ebp)

    jmp endIfLabel14

.elseCondLabel13:

.endIfLabel14:

    mov $1.0,-8(%ebp)

    jmp BeginWhileLabel9

.EndWhileLabel10:

    mov -4(%ebp),-12(%ebp)

    mov -12(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    mov $8.0,-8(%ebp)


    call sumatoria

    mov $MethodCallExpr{name=sumatoria, args=[0.0]},-4(%ebp)

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_float03.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 151
lista: 
{null, float, w, Result: 0}
{null, float, m, Result: 0}
{null, float, res, Result: 0}
{LABEL, null, null, Result: BeginMethod potencia}

{METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=int, name=n, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel3, type=float, expr=1.0, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{LE(<), VarLocation{name=n, type=int, expr=0, size=0}, VarLocation{name=factorLabel4, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel6}
{UNARYMINUS(-expr), VarLocation{name=n, type=int, expr=0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel9, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel7}
{LABEL, null, null, Result: elseCondLabel6}
{LABEL, null, null, Result: endIfLabel7}
{LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel10, type=boolean, expr=0<0, size=0}}
{CEQ(==), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}}
{OR(||), VarLocation{name=LELabel10, type=boolean, expr=0<0, size=0}, VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}, Result: VarLocation{name=DISYUNCIONLabel12, type=boolean, expr=0<0||0==0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel14}
{CMP, VarLocation{name=factorLabel13, type=boolean, expr=VarLocation{name=DISYUNCIONLabel12, type=boolean, expr=0<0||0==0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel15}
{MULTIPLY(*), VarLocation{name=prod, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel16, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel17, type=float, expr=0.0*0.0, size=0}}
{MULTIPLY(*), VarLocation{name=MULTIPLYLabel17, type=float, expr=0.0*0.0, size=0}, VarLocation{name=factorLabel18, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel19, type=float, expr=0.0*0.0*2, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel19, type=float, expr=0.0*0.0*2, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel20, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel21, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel21, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel14}
{LABEL, null, null, Result: EndWhileLabel15}
{NON(!), VarLocation{name=neg, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}}
{NON(!), VarLocation{name=factorLabel23, type=boolean, expr=VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}, null, Result: VarLocation{name=NONLabel24, type=boolean, expr=!VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}}
{CMP, VarLocation{name=NONLabel24, type=boolean, expr=!VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel25}
{DIVIDE(/), VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}, VarLocation{name=prod, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
{JMP, null, null, Result: endIfLabel26}
{LABEL, null, null, Result: elseCondLabel25}
{RETURN, null, null, Result: VarLocation{name=prod, type=float, expr=0.0, size=0}}
{LABEL, null, null, Result: endIfLabel26}
{UNARYMINUS(-expr), VarLocation{name=factorLabel29, type=float, expr=100.1, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel30, type=float, expr=-100.1, size=0}}
{RETURN, null, null, Result: VarLocation{name=UNARYMINUSLabel30, type=float, expr=-100.1, size=0}}
{LABEL, null, null, Result: EndMethod potencia}
{LABEL, null, null, Result: BeginMethod multiples}

{METHODDECL, Metodo{ name=multiples, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=float, name=y, value=null, size=0, offset=0}]}, null, Result: null}
{UNARYMINUS(-expr), VarLocation{name=factorLabel31, type=float, expr=2.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel32, type=float, expr=-2.0, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel32, type=float, expr=-2.0, size=0}, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel33, type=int, expr=2, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel34, type=int, expr=-2, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel34, type=int, expr=-2, size=0}, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel35, type=float, expr=3.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel36, type=float, expr=-3.0, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel36, type=float, expr=-3.0, size=0}, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel37, type=float, expr=3.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel38, type=float, expr=-3.0, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel38, type=float, expr=-3.0, size=0}, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=a, type=float, expr=0.0, size=0}, VarLocation{name=z, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel39, type=float, expr=0.0*0.0, size=0}}
{MINUS(-), VarLocation{name=MULTIPLYLabel39, type=float, expr=0.0*0.0, size=0}, VarLocation{name=w, type=float, expr=0.0, size=0}, Result: VarLocation{name=MINUSLabel40, type=float, expr=0.0*0.0-0.0, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel40, type=float, expr=0.0*0.0-0.0, size=0}, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel41, type=int, expr=0, size=0}, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel42, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel43, type=int, expr=0, size=0}, null, Result: VarLocation{name=k, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel44, type=int, expr=5, size=0}, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{GE(>), VarLocation{name=factorLabel45, type=float, expr=0.0, size=0}, VarLocation{name=y, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel46, type=boolean, expr=0.0>0.0, size=0}}
{CMP, VarLocation{name=GELabel46, type=boolean, expr=0.0>0.0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel47}
{LE(<), VarLocation{name=m, type=float, expr=0.0, size=0}, VarLocation{name=a, type=float, expr=0.0, size=0}, Result: VarLocation{name=LELabel49, type=boolean, expr=0.0<0.0, size=0}}
{CMP, VarLocation{name=LELabel49, type=boolean, expr=0.0<0.0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel50}
{ASSIGN(=), VarLocation{name=factorLabel52, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel51}
{LABEL, null, null, Result: elseCondLabel50}
{ASSIGN(=), VarLocation{name=y, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel51}
{JMP, null, null, Result: endIfLabel48}
{LABEL, null, null, Result: elseCondLabel47}
{LEQ(<=), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LEQLabel53, type=boolean, expr=0<=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel55}
{CMP, VarLocation{name=factorLabel54, type=boolean, expr=VarLocation{name=LEQLabel53, type=boolean, expr=0<=0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel56}
{LEQ(<=), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LEQLabel57, type=boolean, expr=0<=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel58}
{CMP, VarLocation{name=LEQLabel57, type=boolean, expr=0<=0, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel59}
{LE(<), VarLocation{name=k, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel60, type=boolean, expr=0<0, size=0}}
{CEQ(==), VarLocation{name=k, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel61, type=boolean, expr=0==0, size=0}}
{OR(||), VarLocation{name=LELabel60, type=boolean, expr=0<0, size=0}, VarLocation{name=CEQLabel61, type=boolean, expr=0==0, size=0}, Result: VarLocation{name=DISYUNCIONLabel62, type=boolean, expr=0<0||0==0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel66}
{CMP, VarLocation{name=factorLabel65, type=boolean, expr=VarLocation{name=factorLabel64, type=boolean, expr=VarLocation{name=factorLabel63, type=boolean, expr=VarLocation{name=DISYUNCIONLabel62, type=boolean, expr=0<0||0==0, size=0}, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel67}
{CEQ(==), VarLocation{name=b, type=int, expr=0, size=0}, VarLocation{name=factorLabel68, type=int, expr=3, size=0}, Result: VarLocation{name=CEQLabel69, type=boolean, expr=0==3, size=0}}
{CMP, VarLocation{name=CEQLabel69, type=boolean, expr=0==3, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel70}
{PLUS(+), VarLocation{name=res, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel72, type=float, expr=2.0, size=0}, Result: VarLocation{name=PLUSLabel73, type=float, expr=0.0+2.0, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel73, type=float, expr=0.0+2.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel71}
{LABEL, null, null, Result: elseCondLabel70}
{DIVIDE(/), VarLocation{name=factorLabel74, type=float, expr=10.0, size=0}, VarLocation{name=factorLabel75, type=float, expr=2.0, size=0}, Result: VarLocation{name=DIVIDELabel76, type=float, expr=VarLocation{name=factorLabel74, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel75, type=float, expr=2.0, size=0}, size=0}}
{MINUS(-), VarLocation{name=res, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel77, type=float, expr=VarLocation{name=DIVIDELabel76, type=float, expr=VarLocation{name=factorLabel74, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel75, type=float, expr=2.0, size=0}, size=0}, size=0}, Result: VarLocation{name=MINUSLabel78, type=float, expr=0.0-VarLocation{name=DIVIDELabel76, type=float, expr=VarLocation{name=factorLabel74, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel75, type=float, expr=2.0, size=0}, size=0}, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel78, type=float, expr=0.0-VarLocation{name=DIVIDELabel76, type=float, expr=VarLocation{name=factorLabel74, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel75, type=float, expr=2.0, size=0}, size=0}, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel71}
{ASSIGN(=), VarLocation{name=factorLabel79, type=int, expr=1, size=0}, null, Result: VarLocation{name=k, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel66}
{LABEL, null, null, Result: EndWhileLabel67}
{LE(<), VarLocation{name=a, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel80, type=float, expr=0.0, size=0}, Result: VarLocation{name=LELabel81, type=boolean, expr=0.0<0.0, size=0}}
{LE(<), VarLocation{name=factorLabel82, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel83, type=float, expr=0.0, size=0}, Result: VarLocation{name=LELabel84, type=boolean, expr=0.0<0.0, size=0}}
{AND(&&), VarLocation{name=LELabel81, type=boolean, expr=0.0<0.0, size=0}, VarLocation{name=LELabel84, type=boolean, expr=0.0<0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel85, type=boolean, expr=0.0<0.0&&0.0<0.0, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel85, type=boolean, expr=0.0<0.0&&0.0<0.0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel86}
{MULTIPLY(*), VarLocation{name=factorLabel89, type=float, expr=4.0, size=0}, VarLocation{name=res, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel90, type=float, expr=4.0*0.0, size=0}}
{PLUS(+), VarLocation{name=factorLabel88, type=float, expr=35.0, size=0}, VarLocation{name=MULTIPLYLabel90, type=float, expr=4.0*0.0, size=0}, Result: VarLocation{name=PLUSLabel91, type=float, expr=35.0+4.0*0.0, size=0}}
{MINUS(-), VarLocation{name=PLUSLabel91, type=float, expr=35.0+4.0*0.0, size=0}, VarLocation{name=factorLabel92, type=float, expr=498.0, size=0}, Result: VarLocation{name=MINUSLabel93, type=float, expr=35.0+4.0*0.0-498.0, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel93, type=float, expr=35.0+4.0*0.0-498.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel87}
{LABEL, null, null, Result: elseCondLabel86}
{MINUS(-), VarLocation{name=factorLabel94, type=float, expr=3.2, size=0}, VarLocation{name=res, type=float, expr=0.0, size=0}, Result: VarLocation{name=MINUSLabel95, type=float, expr=3.2-0.0, size=0}}
{MINUS(-), VarLocation{name=MINUSLabel95, type=float, expr=3.2-0.0, size=0}, VarLocation{name=factorLabel96, type=float, expr=12345.356, size=0}, Result: VarLocation{name=MINUSLabel97, type=float, expr=3.2-0.0-12345.356, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel97, type=float, expr=3.2-0.0-12345.356, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel87}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel98, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel99, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel99, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel58}
{LABEL, null, null, Result: EndWhileLabel59}
{UNARYMINUS(-expr), VarLocation{name=factorLabel100, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel101, type=float, expr=-0.0, size=0}}
{MULTIPLY(*), VarLocation{name=res, type=float, expr=0.0, size=0}, VarLocation{name=UNARYMINUSLabel101, type=float, expr=-0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel102, type=float, expr=0.0*-0.0, size=0}}
{MULTIPLY(*), VarLocation{name=factorLabel103, type=float, expr=23.0, size=0}, VarLocation{name=y, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel104, type=float, expr=23.0*0.0, size=0}}
{PLUS(+), VarLocation{name=MULTIPLYLabel102, type=float, expr=0.0*-0.0, size=0}, VarLocation{name=MULTIPLYLabel104, type=float, expr=23.0*0.0, size=0}, Result: VarLocation{name=PLUSLabel105, type=float, expr=0.0*-0.0+23.0*0.0, size=0}}
{DIVIDE(/), VarLocation{name=factorLabel106, type=float, expr=2.0, size=0}, VarLocation{name=factorLabel107, type=float, expr=4.0, size=0}, Result: VarLocation{name=DIVIDELabel108, type=float, expr=VarLocation{name=factorLabel106, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel107, type=float, expr=4.0, size=0}, size=0}}
{PLUS(+), VarLocation{name=PLUSLabel105, type=float, expr=0.0*-0.0+23.0*0.0, size=0}, VarLocation{name=DIVIDELabel108, type=float, expr=VarLocation{name=factorLabel106, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel107, type=float, expr=4.0, size=0}, size=0}, Result: VarLocation{name=PLUSLabel109, type=float, expr=0.0*-0.0+23.0*0.0+VarLocation{name=factorLabel106, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel107, type=float, expr=4.0, size=0}, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel109, type=float, expr=0.0*-0.0+23.0*0.0+VarLocation{name=factorLabel106, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel107, type=float, expr=4.0, size=0}, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{PLUS(+), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=factorLabel110, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel111, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel111, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel55}
{LABEL, null, null, Result: EndWhileLabel56}
{LABEL, null, null, Result: endIfLabel48}
{UNARYMINUS(-expr), VarLocation{name=res, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel112, type=float, expr=-0.0, size=0}}
{RETURN, null, null, Result: VarLocation{name=UNARYMINUSLabel112, type=float, expr=-0.0, size=0}}
{LABEL, null, null, Result: EndMethod multiples}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel113, type=float, expr=80.0, size=0}, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel114, type=float, expr=15.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel115, type=float, expr=-15.0, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel115, type=float, expr=-15.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel116, type=float, expr=4.3, size=0}, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel117, type=float, expr=7.6, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel118, type=float, expr=-7.6, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel118, type=float, expr=-7.6, size=0}, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 2]}
{METHODCALL, potencia, 2, Result: RESULTLabel120}
{ASSIGN(=), VarLocation{name=factorLabel121, type=float, expr=MethodCallExpr{name=potencia, args=[0.0, 2]}, size=0}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{PLUS(+), VarLocation{name=f, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel122, type=float, expr=2.0, size=0}, Result: VarLocation{name=PLUSLabel123, type=float, expr=0.0+2.0, size=0}}
{PARAM, null, null, Result: [0.0, 0.0+2.0]}
{METHODCALL, multiples, 2, Result: RESULTLabel124}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, MethodCallExpr{name=multiples, args=[0.0, 0.0+2.0]}]}, null, Result: EXTERNINVKLabel126}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, float, w, Result: 0}
finalizado.

procesando : . . . {null, float, m, Result: 0}
finalizado.

procesando : . . . {null, float, res, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod potencia}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=int, name=n, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel3, type=float, expr=1.0, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=n, type=int, expr=0, size=0}, VarLocation{name=factorLabel4, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel6}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=n, type=int, expr=0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel9, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel7}
finalizado.

procesando : . . . {LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel10, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=LELabel10, type=boolean, expr=0<0, size=0}, VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}, Result: VarLocation{name=DISYUNCIONLabel12, type=boolean, expr=0<0||0==0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel14}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel13, type=boolean, expr=VarLocation{name=DISYUNCIONLabel12, type=boolean, expr=0<0||0==0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel15}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=prod, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel16, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel17, type=float, expr=0.0*0.0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=MULTIPLYLabel17, type=float, expr=0.0*0.0, size=0}, VarLocation{name=factorLabel18, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel19, type=float, expr=0.0*0.0*2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel19, type=float, expr=0.0*0.0*2, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel20, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel21, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel21, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel15}
finalizado.

procesando : . . . {NON(!), VarLocation{name=neg, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel23, type=boolean, expr=VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}, null, Result: VarLocation{name=NONLabel24, type=boolean, expr=!VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=NONLabel24, type=boolean, expr=!VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel25}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}, VarLocation{name=prod, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel26}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel25}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=prod, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel26}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel29, type=float, expr=100.1, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel30, type=float, expr=-100.1, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=UNARYMINUSLabel30, type=float, expr=-100.1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod potencia}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod multiples}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=multiples, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=float, name=y, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel31, type=float, expr=2.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel32, type=float, expr=-2.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel32, type=float, expr=-2.0, size=0}, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel33, type=int, expr=2, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel34, type=int, expr=-2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel34, type=int, expr=-2, size=0}, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel35, type=float, expr=3.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel36, type=float, expr=-3.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel36, type=float, expr=-3.0, size=0}, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel37, type=float, expr=3.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel38, type=float, expr=-3.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel38, type=float, expr=-3.0, size=0}, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=a, type=float, expr=0.0, size=0}, VarLocation{name=z, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel39, type=float, expr=0.0*0.0, size=0}}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=MULTIPLYLabel39, type=float, expr=0.0*0.0, size=0}, VarLocation{name=w, type=float, expr=0.0, size=0}, Result: VarLocation{name=MINUSLabel40, type=float, expr=0.0*0.0-0.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel40, type=float, expr=0.0*0.0-0.0, size=0}, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel41, type=int, expr=0, size=0}, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel42, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel43, type=int, expr=0, size=0}, null, Result: VarLocation{name=k, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel44, type=int, expr=5, size=0}, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel45, type=float, expr=0.0, size=0}, VarLocation{name=y, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel46, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel46, type=boolean, expr=0.0>0.0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel47}
finalizado.

procesando : . . . {LE(<), VarLocation{name=m, type=float, expr=0.0, size=0}, VarLocation{name=a, type=float, expr=0.0, size=0}, Result: VarLocation{name=LELabel49, type=boolean, expr=0.0<0.0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel49, type=boolean, expr=0.0<0.0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel50}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel52, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel51}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel50}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=y, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel51}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel48}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel47}
finalizado.

procesando : . . . {LEQ(<=), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LEQLabel53, type=boolean, expr=0<=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel55}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel54, type=boolean, expr=VarLocation{name=LEQLabel53, type=boolean, expr=0<=0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel56}
finalizado.

procesando : . . . {LEQ(<=), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LEQLabel57, type=boolean, expr=0<=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel58}
finalizado.

procesando : . . . {CMP, VarLocation{name=LEQLabel57, type=boolean, expr=0<=0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel59}
finalizado.

procesando : . . . {LE(<), VarLocation{name=k, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel60, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=k, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel61, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=LELabel60, type=boolean, expr=0<0, size=0}, VarLocation{name=CEQLabel61, type=boolean, expr=0==0, size=0}, Result: VarLocation{name=DISYUNCIONLabel62, type=boolean, expr=0<0||0==0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel66}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel65, type=boolean, expr=VarLocation{name=factorLabel64, type=boolean, expr=VarLocation{name=factorLabel63, type=boolean, expr=VarLocation{name=DISYUNCIONLabel62, type=boolean, expr=0<0||0==0, size=0}, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel67}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=b, type=int, expr=0, size=0}, VarLocation{name=factorLabel68, type=int, expr=3, size=0}, Result: VarLocation{name=CEQLabel69, type=boolean, expr=0==3, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel69, type=boolean, expr=0==3, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel70}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=res, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel72, type=float, expr=2.0, size=0}, Result: VarLocation{name=PLUSLabel73, type=float, expr=0.0+2.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel73, type=float, expr=0.0+2.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel71}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel70}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel74, type=float, expr=10.0, size=0}, VarLocation{name=factorLabel75, type=float, expr=2.0, size=0}, Result: VarLocation{name=DIVIDELabel76, type=float, expr=VarLocation{name=factorLabel74, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel75, type=float, expr=2.0, size=0}, size=0}}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=res, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel77, type=float, expr=VarLocation{name=DIVIDELabel76, type=float, expr=VarLocation{name=factorLabel74, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel75, type=float, expr=2.0, size=0}, size=0}, size=0}, Result: VarLocation{name=MINUSLabel78, type=float, expr=0.0-VarLocation{name=DIVIDELabel76, type=float, expr=VarLocation{name=factorLabel74, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel75, type=float, expr=2.0, size=0}, size=0}, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel78, type=float, expr=0.0-VarLocation{name=DIVIDELabel76, type=float, expr=VarLocation{name=factorLabel74, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel75, type=float, expr=2.0, size=0}, size=0}, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel71}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel79, type=int, expr=1, size=0}, null, Result: VarLocation{name=k, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel66}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel67}
finalizado.

procesando : . . . {LE(<), VarLocation{name=a, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel80, type=float, expr=0.0, size=0}, Result: VarLocation{name=LELabel81, type=boolean, expr=0.0<0.0, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=factorLabel82, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel83, type=float, expr=0.0, size=0}, Result: VarLocation{name=LELabel84, type=boolean, expr=0.0<0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=LELabel81, type=boolean, expr=0.0<0.0, size=0}, VarLocation{name=LELabel84, type=boolean, expr=0.0<0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel85, type=boolean, expr=0.0<0.0&&0.0<0.0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel85, type=boolean, expr=0.0<0.0&&0.0<0.0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel86}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel89, type=float, expr=4.0, size=0}, VarLocation{name=res, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel90, type=float, expr=4.0*0.0, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel88, type=float, expr=35.0, size=0}, VarLocation{name=MULTIPLYLabel90, type=float, expr=4.0*0.0, size=0}, Result: VarLocation{name=PLUSLabel91, type=float, expr=35.0+4.0*0.0, size=0}}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=PLUSLabel91, type=float, expr=35.0+4.0*0.0, size=0}, VarLocation{name=factorLabel92, type=float, expr=498.0, size=0}, Result: VarLocation{name=MINUSLabel93, type=float, expr=35.0+4.0*0.0-498.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel93, type=float, expr=35.0+4.0*0.0-498.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel87}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel86}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel94, type=float, expr=3.2, size=0}, VarLocation{name=res, type=float, expr=0.0, size=0}, Result: VarLocation{name=MINUSLabel95, type=float, expr=3.2-0.0, size=0}}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=MINUSLabel95, type=float, expr=3.2-0.0, size=0}, VarLocation{name=factorLabel96, type=float, expr=12345.356, size=0}, Result: VarLocation{name=MINUSLabel97, type=float, expr=3.2-0.0-12345.356, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel97, type=float, expr=3.2-0.0-12345.356, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel87}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel98, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel99, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel99, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel58}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel59}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel100, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel101, type=float, expr=-0.0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=res, type=float, expr=0.0, size=0}, VarLocation{name=UNARYMINUSLabel101, type=float, expr=-0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel102, type=float, expr=0.0*-0.0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel103, type=float, expr=23.0, size=0}, VarLocation{name=y, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel104, type=float, expr=23.0*0.0, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=MULTIPLYLabel102, type=float, expr=0.0*-0.0, size=0}, VarLocation{name=MULTIPLYLabel104, type=float, expr=23.0*0.0, size=0}, Result: VarLocation{name=PLUSLabel105, type=float, expr=0.0*-0.0+23.0*0.0, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel106, type=float, expr=2.0, size=0}, VarLocation{name=factorLabel107, type=float, expr=4.0, size=0}, Result: VarLocation{name=DIVIDELabel108, type=float, expr=VarLocation{name=factorLabel106, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel107, type=float, expr=4.0, size=0}, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=PLUSLabel105, type=float, expr=0.0*-0.0+23.0*0.0, size=0}, VarLocation{name=DIVIDELabel108, type=float, expr=VarLocation{name=factorLabel106, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel107, type=float, expr=4.0, size=0}, size=0}, Result: VarLocation{name=PLUSLabel109, type=float, expr=0.0*-0.0+23.0*0.0+VarLocation{name=factorLabel106, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel107, type=float, expr=4.0, size=0}, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel109, type=float, expr=0.0*-0.0+23.0*0.0+VarLocation{name=factorLabel106, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel107, type=float, expr=4.0, size=0}, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=factorLabel110, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel111, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel111, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel55}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel56}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel48}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=res, type=float, expr=0.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel112, type=float, expr=-0.0, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=UNARYMINUSLabel112, type=float, expr=-0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod multiples}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel113, type=float, expr=80.0, size=0}, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel114, type=float, expr=15.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel115, type=float, expr=-15.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel115, type=float, expr=-15.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel116, type=float, expr=4.3, size=0}, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel117, type=float, expr=7.6, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel118, type=float, expr=-7.6, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel118, type=float, expr=-7.6, size=0}, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 2]}
index: 1 tamaño: 2

Result = 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, potencia, 2, Result: RESULTLabel120}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel121, type=float, expr=MethodCallExpr{name=potencia, args=[0.0, 2]}, size=0}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=f, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel122, type=float, expr=2.0, size=0}, Result: VarLocation{name=PLUSLabel123, type=float, expr=0.0+2.0, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0+2.0]}
index: 1 tamaño: 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, multiples, 2, Result: RESULTLabel124}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, MethodCallExpr{name=multiples, args=[0.0, 0.0+2.0]}]}, null, Result: EXTERNINVKLabel126}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.


    .comm w,4

    .comm m,4

    .comm res,4


    .text
    .globl	potencia
    .type	potencia, @function 
potencia: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov $false,-8(%ebp)

    mov $1,-4(%ebp)

    mov $1.0,-12(%ebp)

    movl	1(%ebp), %eax
    cmpl	-28(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -32(%ebp)

    mov $ 1, %eax
    cmp -32(%ebp), %eax

    jne elseCondLabel6

    movl	1(%ebp), %eax 
    negl	%eax 
    movl	%eax, -36(%ebp) 

    mov -36(%ebp),1(%ebp)

    mov $true,-8(%ebp)

    jmp endIfLabel7

.elseCondLabel6:

.endIfLabel7:

    movl	-4(%ebp), %eax
    cmpl	1(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -44(%ebp)

    movl	-4(%ebp), %eax
    cmpl	1(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -48(%ebp)

    cmp	$0, -44(%ebp)
    jne .L0
    cmp	$0, -48(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -52(%ebp)
.L2:

.BeginWhileLabel14:

    mov $ 1, %eax
    cmp -56(%ebp), %eax

    jne EndWhileLabel15

    mov -12(%ebp) , %eax 
    mov -60(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-64(%ebp) 

    mov -64(%ebp) , %eax 
    mov -68(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-72(%ebp) 

    mov -72(%ebp),-12(%ebp)

    mov -4(%ebp) , %eax 
    mov -76(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-80(%ebp) 

    mov -80(%ebp),-4(%ebp)

    jmp BeginWhileLabel14

.EndWhileLabel15:

    cmp $0, -8(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -84(%ebp) 

    cmp $0, -88(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -92(%ebp) 

    mov $ 1, %eax
    cmp -92(%ebp), %eax

    jne elseCondLabel25

    mov -96(%ebp) , %eax 
    mov -12(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-100(%ebp) 

    mov -100(%ebp), %eax

    jmp endIfLabel26

.elseCondLabel25:

    mov -12(%ebp), %eax

.endIfLabel26:

    movl	-104(%ebp), %eax 
    negl	%eax 
    movl	%eax, -108(%ebp) 

    mov -108(%ebp), %eax

    leave
    ret



    .text
    .globl	multiples
    .type	multiples, @function 
multiples: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-44(%ebp), %eax 
    negl	%eax 
    movl	%eax, -48(%ebp) 

    mov -48(%ebp),-4(%ebp)

    movl	-52(%ebp), %eax 
    negl	%eax 
    movl	%eax, -56(%ebp) 

    mov -56(%ebp),-12(%ebp)

    movl	-60(%ebp), %eax 
    negl	%eax 
    movl	%eax, -64(%ebp) 

    mov -64(%ebp),-16(%ebp)

    movl	-68(%ebp), %eax 
    negl	%eax 
    movl	%eax, -72(%ebp) 

    mov -72(%ebp),-8(%ebp)

    mov -4(%ebp) , %eax 
    mov -8(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-76(%ebp) 

    mov -76(%ebp) , %eax 
    mov -16(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-80(%ebp) 

    mov -80(%ebp),-20(%ebp)

    mov $0,-28(%ebp)

    mov $0,-32(%ebp)

    mov $0,-36(%ebp)

    mov $5,-40(%ebp)

    movl	-100(%ebp), %eax
    cmpl	1(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -104(%ebp)

    mov $ 1, %eax
    cmp -104(%ebp), %eax

    jne elseCondLabel47

    movl	-20(%ebp), %eax
    cmpl	-4(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -108(%ebp)

    mov $ 1, %eax
    cmp -108(%ebp), %eax

    jne elseCondLabel50

    mov $0.0,-24(%ebp)

    jmp endIfLabel51

.elseCondLabel50:

    mov 1(%ebp),-24(%ebp)

.endIfLabel51:

    jmp endIfLabel48

.elseCondLabel47:

    movl	-28(%ebp), %eax
    cmpl	-40(%ebp), %eax
    setle %al
    movzbl %al, %eax
    movl	%eax, -116(%ebp)

.BeginWhileLabel55:

    mov $ 1, %eax
    cmp -120(%ebp), %eax

    jne EndWhileLabel56

    movl	-32(%ebp), %eax
    cmpl	-40(%ebp), %eax
    setle %al
    movzbl %al, %eax
    movl	%eax, -124(%ebp)

.BeginWhileLabel58:

    mov $ 1, %eax
    cmp -124(%ebp), %eax

    jne EndWhileLabel59

    movl	-36(%ebp), %eax
    cmpl	-40(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -128(%ebp)

    movl	-36(%ebp), %eax
    cmpl	-40(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -132(%ebp)

    cmp	$0, -128(%ebp)
    jne .L3
    cmp	$0, -132(%ebp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -136(%ebp)
.L5:

.BeginWhileLabel66:

    mov $ 1, %eax
    cmp -148(%ebp), %eax

    jne EndWhileLabel67

    movl	-12(%ebp), %eax
    cmpl	-152(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -156(%ebp)

    mov $ 1, %eax
    cmp -156(%ebp), %eax

    jne elseCondLabel70

    mov -24(%ebp) , %eax 
    mov -160(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-164(%ebp) 

    mov -164(%ebp),-24(%ebp)

    jmp endIfLabel71

.elseCondLabel70:

    mov -168(%ebp) , %eax 
    mov -172(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-176(%ebp) 

    mov -24(%ebp) , %eax 
    mov -180(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-184(%ebp) 

    mov -184(%ebp),-24(%ebp)

.endIfLabel71:

    mov $1,-36(%ebp)

    jmp BeginWhileLabel66

.EndWhileLabel67:

    movl	-4(%ebp), %eax
    cmpl	-192(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -196(%ebp)

    movl	-200(%ebp), %eax
    cmpl	-204(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -208(%ebp)

    cmp	$0, -196(%ebp)
    je .L6
    cmp	$0, -208(%ebp)
    je .L6
    mov	$1, %eax
    jmp .L7
.L6:
    movl	$0, %eax
    jmp .L8
.L7:
    movl	%eax, -212(%ebp)
.L8:

    mov $ 1, %eax
    cmp -212(%ebp), %eax

    jne elseCondLabel86

    mov -220(%ebp) , %eax 
    mov -24(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-224(%ebp) 

    mov -216(%ebp) , %eax 
    mov -224(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-228(%ebp) 

    mov -228(%ebp) , %eax 
    mov -232(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-236(%ebp) 

    mov -236(%ebp),-24(%ebp)

    jmp endIfLabel87

.elseCondLabel86:

    mov -240(%ebp) , %eax 
    mov -24(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-244(%ebp) 

    mov -244(%ebp) , %eax 
    mov -248(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-252(%ebp) 

    mov -252(%ebp),-24(%ebp)

.endIfLabel87:

    mov -32(%ebp) , %eax 
    mov -256(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-260(%ebp) 

    mov -260(%ebp),-32(%ebp)

    jmp BeginWhileLabel58

.EndWhileLabel59:

    movl	-264(%ebp), %eax 
    negl	%eax 
    movl	%eax, -268(%ebp) 

    mov -24(%ebp) , %eax 
    mov -268(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-272(%ebp) 

    mov -276(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-280(%ebp) 

    mov -272(%ebp) , %eax 
    mov -280(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-284(%ebp) 

    mov -288(%ebp) , %eax 
    mov -292(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-296(%ebp) 

    mov -284(%ebp) , %eax 
    mov -296(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-300(%ebp) 

    mov -300(%ebp),-24(%ebp)

    mov -28(%ebp) , %eax 
    mov -304(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-308(%ebp) 

    mov -308(%ebp),-28(%ebp)

    jmp BeginWhileLabel55

.EndWhileLabel56:

.endIfLabel48:

    movl	-24(%ebp), %eax 
    negl	%eax 
    movl	%eax, -312(%ebp) 

    mov -312(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    mov $80.0,-8(%ebp)

    movl	-16(%ebp), %eax 
    negl	%eax 
    movl	%eax, -20(%ebp) 

    mov -20(%ebp),-24(%ebp)

    mov $4.3,-16(%ebp)

    movl	-28(%ebp), %eax 
    negl	%eax 
    movl	%eax, -32(%ebp) 

    mov -32(%ebp),-20(%ebp)

    movl $2 , 12(%esp)

    call potencia

    mov $MethodCallExpr{name=potencia, args=[0.0, 2]},-4(%ebp)

    mov -4(%ebp) , %eax 
    mov -44(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-48(%ebp) 


    call multiples

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_float04.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 68
lista: 
{null, float, w, Result: 0}
{null, float, m, Result: 0}
{null, float, res, Result: 0}
{LABEL, null, null, Result: BeginMethod potencia}

{METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=int, name=n, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel3, type=float, expr=1.0, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{LE(<), VarLocation{name=n, type=int, expr=0, size=0}, VarLocation{name=factorLabel4, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel6}
{UNARYMINUS(-expr), VarLocation{name=n, type=int, expr=0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel9, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel7}
{LABEL, null, null, Result: elseCondLabel6}
{LABEL, null, null, Result: endIfLabel7}
{LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel10, type=boolean, expr=0<0, size=0}}
{CEQ(==), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}}
{OR(||), VarLocation{name=LELabel10, type=boolean, expr=0<0, size=0}, VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}, Result: VarLocation{name=DISYUNCIONLabel12, type=boolean, expr=0<0||0==0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel14}
{CMP, VarLocation{name=factorLabel13, type=boolean, expr=VarLocation{name=DISYUNCIONLabel12, type=boolean, expr=0<0||0==0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel15}
{MULTIPLY(*), VarLocation{name=prod, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel16, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel17, type=float, expr=0.0*0.0, size=0}}
{MULTIPLY(*), VarLocation{name=MULTIPLYLabel17, type=float, expr=0.0*0.0, size=0}, VarLocation{name=factorLabel18, type=float, expr=2.0, size=0}, Result: VarLocation{name=MULTIPLYLabel19, type=float, expr=0.0*0.0*2.0, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel19, type=float, expr=0.0*0.0*2.0, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel20, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel21, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel21, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel14}
{LABEL, null, null, Result: EndWhileLabel15}
{NON(!), VarLocation{name=neg, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}}
{NON(!), VarLocation{name=factorLabel23, type=boolean, expr=VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}, null, Result: VarLocation{name=NONLabel24, type=boolean, expr=!VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}}
{CMP, VarLocation{name=NONLabel24, type=boolean, expr=!VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel25}
{DIVIDE(/), VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}, VarLocation{name=prod, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
{JMP, null, null, Result: endIfLabel26}
{LABEL, null, null, Result: elseCondLabel25}
{RETURN, null, null, Result: VarLocation{name=prod, type=float, expr=0.0, size=0}}
{LABEL, null, null, Result: endIfLabel26}
{UNARYMINUS(-expr), VarLocation{name=factorLabel29, type=float, expr=100.1, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel30, type=float, expr=-100.1, size=0}}
{RETURN, null, null, Result: VarLocation{name=UNARYMINUSLabel30, type=float, expr=-100.1, size=0}}
{LABEL, null, null, Result: EndMethod potencia}
{LABEL, null, null, Result: BeginMethod multRepeat}

{METHODDECL, Metodo{ name=multRepeat, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=b, value=null, size=0, offset=0}, Simbolo{type=float, name=a, value=null, size=0, offset=0}]}, null, Result: null}
{MULTIPLY(*), VarLocation{name=a, type=float, expr=0.0, size=0}, VarLocation{name=a, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel31, type=float, expr=0.0*0.0, size=0}}
{MULTIPLY(*), VarLocation{name=MULTIPLYLabel31, type=float, expr=0.0*0.0, size=0}, VarLocation{name=factorLabel32, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel33, type=float, expr=0.0*0.0*0.0, size=0}}
{MULTIPLY(*), VarLocation{name=MULTIPLYLabel33, type=float, expr=0.0*0.0*0.0, size=0}, VarLocation{name=factorLabel34, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel35, type=float, expr=0.0*0.0*0.0*0.0, size=0}}
{MULTIPLY(*), VarLocation{name=MULTIPLYLabel35, type=float, expr=0.0*0.0*0.0*0.0, size=0}, VarLocation{name=factorLabel36, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel37, type=float, expr=0.0*0.0*0.0*0.0*0.0, size=0}}
{MULTIPLY(*), VarLocation{name=MULTIPLYLabel37, type=float, expr=0.0*0.0*0.0*0.0*0.0, size=0}, VarLocation{name=a, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel38, type=float, expr=0.0*0.0*0.0*0.0*0.0*0.0, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel38, type=float, expr=0.0*0.0*0.0*0.0*0.0*0.0, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{RETURN, null, null, Result: VarLocation{name=c, type=float, expr=0.0, size=0}}
{LABEL, null, null, Result: EndMethod multRepeat}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{UNARYMINUS(-expr), VarLocation{name=factorLabel39, type=float, expr=15.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel40, type=float, expr=-15.0, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel40, type=float, expr=-15.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel41, type=float, expr=4.3, size=0}, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel42, type=float, expr=7.6, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel43, type=float, expr=-7.6, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel43, type=float, expr=-7.6, size=0}, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel44, type=float, expr=80.0, size=0}, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 2]}
{METHODCALL, potencia, 2, Result: RESULTLabel46}
{ASSIGN(=), VarLocation{name=factorLabel47, type=float, expr=MethodCallExpr{name=potencia, args=[0.0, 2]}, size=0}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 0.0]}
{METHODCALL, multRepeat, 2, Result: RESULTLabel48}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, MethodCallExpr{name=multRepeat, args=[0.0, 0.0]}]}, null, Result: EXTERNINVKLabel50}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, float, w, Result: 0}
finalizado.

procesando : . . . {null, float, m, Result: 0}
finalizado.

procesando : . . . {null, float, res, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod potencia}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=int, name=n, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel3, type=float, expr=1.0, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=n, type=int, expr=0, size=0}, VarLocation{name=factorLabel4, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel6}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=n, type=int, expr=0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel8, type=int, expr=-0, size=0}, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel9, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel7}
finalizado.

procesando : . . . {LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel10, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=LELabel10, type=boolean, expr=0<0, size=0}, VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}, Result: VarLocation{name=DISYUNCIONLabel12, type=boolean, expr=0<0||0==0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel14}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel13, type=boolean, expr=VarLocation{name=DISYUNCIONLabel12, type=boolean, expr=0<0||0==0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel15}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=prod, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel16, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel17, type=float, expr=0.0*0.0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=MULTIPLYLabel17, type=float, expr=0.0*0.0, size=0}, VarLocation{name=factorLabel18, type=float, expr=2.0, size=0}, Result: VarLocation{name=MULTIPLYLabel19, type=float, expr=0.0*0.0*2.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel19, type=float, expr=0.0*0.0*2.0, size=0}, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel20, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel21, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel21, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel15}
finalizado.

procesando : . . . {NON(!), VarLocation{name=neg, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel23, type=boolean, expr=VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}, null, Result: VarLocation{name=NONLabel24, type=boolean, expr=!VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=NONLabel24, type=boolean, expr=!VarLocation{name=NONLabel22, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel25}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}, VarLocation{name=prod, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=DIVIDELabel28, type=float, expr=VarLocation{name=factorLabel27, type=float, expr=1.0, size=0}/VarLocation{name=prod, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel26}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel25}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=prod, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel26}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel29, type=float, expr=100.1, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel30, type=float, expr=-100.1, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=UNARYMINUSLabel30, type=float, expr=-100.1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod potencia}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod multRepeat}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=multRepeat, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=b, value=null, size=0, offset=0}, Simbolo{type=float, name=a, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=a, type=float, expr=0.0, size=0}, VarLocation{name=a, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel31, type=float, expr=0.0*0.0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=MULTIPLYLabel31, type=float, expr=0.0*0.0, size=0}, VarLocation{name=factorLabel32, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel33, type=float, expr=0.0*0.0*0.0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=MULTIPLYLabel33, type=float, expr=0.0*0.0*0.0, size=0}, VarLocation{name=factorLabel34, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel35, type=float, expr=0.0*0.0*0.0*0.0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=MULTIPLYLabel35, type=float, expr=0.0*0.0*0.0*0.0, size=0}, VarLocation{name=factorLabel36, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel37, type=float, expr=0.0*0.0*0.0*0.0*0.0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=MULTIPLYLabel37, type=float, expr=0.0*0.0*0.0*0.0*0.0, size=0}, VarLocation{name=a, type=float, expr=0.0, size=0}, Result: VarLocation{name=MULTIPLYLabel38, type=float, expr=0.0*0.0*0.0*0.0*0.0*0.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel38, type=float, expr=0.0*0.0*0.0*0.0*0.0*0.0, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=c, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod multRepeat}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel39, type=float, expr=15.0, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel40, type=float, expr=-15.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel40, type=float, expr=-15.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel41, type=float, expr=4.3, size=0}, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel42, type=float, expr=7.6, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel43, type=float, expr=-7.6, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel43, type=float, expr=-7.6, size=0}, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel44, type=float, expr=80.0, size=0}, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 2]}
index: 1 tamaño: 2

Result = 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, potencia, 2, Result: RESULTLabel46}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel47, type=float, expr=MethodCallExpr{name=potencia, args=[0.0, 2]}, size=0}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, multRepeat, 2, Result: RESULTLabel48}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, MethodCallExpr{name=multRepeat, args=[0.0, 0.0]}]}, null, Result: EXTERNINVKLabel50}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.


    .comm w,4

    .comm m,4

    .comm res,4


    .text
    .globl	potencia
    .type	potencia, @function 
potencia: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov $false,-8(%ebp)

    mov $1,-4(%ebp)

    mov $1.0,-12(%ebp)

    movl	1(%ebp), %eax
    cmpl	-28(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -32(%ebp)

    mov $ 1, %eax
    cmp -32(%ebp), %eax

    jne elseCondLabel6

    movl	1(%ebp), %eax 
    negl	%eax 
    movl	%eax, -36(%ebp) 

    mov -36(%ebp),1(%ebp)

    mov $true,-8(%ebp)

    jmp endIfLabel7

.elseCondLabel6:

.endIfLabel7:

    movl	-4(%ebp), %eax
    cmpl	1(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -44(%ebp)

    movl	-4(%ebp), %eax
    cmpl	1(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -48(%ebp)

    cmp	$0, -44(%ebp)
    jne .L0
    cmp	$0, -48(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -52(%ebp)
.L2:

.BeginWhileLabel14:

    mov $ 1, %eax
    cmp -56(%ebp), %eax

    jne EndWhileLabel15

    mov -12(%ebp) , %eax 
    mov -60(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-64(%ebp) 

    mov -64(%ebp) , %eax 
    mov -68(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-72(%ebp) 

    mov -72(%ebp),-12(%ebp)

    mov -4(%ebp) , %eax 
    mov -76(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-80(%ebp) 

    mov -80(%ebp),-4(%ebp)

    jmp BeginWhileLabel14

.EndWhileLabel15:

    cmp $0, -8(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -84(%ebp) 

    cmp $0, -88(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -92(%ebp) 

    mov $ 1, %eax
    cmp -92(%ebp), %eax

    jne elseCondLabel25

    mov -96(%ebp) , %eax 
    mov -12(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-100(%ebp) 

    mov -100(%ebp), %eax

    jmp endIfLabel26

.elseCondLabel25:

    mov -12(%ebp), %eax

.endIfLabel26:

    movl	-104(%ebp), %eax 
    negl	%eax 
    movl	%eax, -108(%ebp) 

    mov -108(%ebp), %eax

    leave
    ret



    .text
    .globl	multRepeat
    .type	multRepeat, @function 
multRepeat: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov 1(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-8(%ebp) 

    mov -8(%ebp) , %eax 
    mov -12(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-16(%ebp) 

    mov -16(%ebp) , %eax 
    mov -20(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-24(%ebp) 

    mov -24(%ebp) , %eax 
    mov -28(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-32(%ebp) 

    mov -32(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-36(%ebp) 

    mov -36(%ebp),-4(%ebp)

    mov -4(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl	-12(%ebp), %eax 
    negl	%eax 
    movl	%eax, -16(%ebp) 

    mov -16(%ebp),-12(%ebp)

    mov $4.3,-4(%ebp)

    movl	-24(%ebp), %eax 
    negl	%eax 
    movl	%eax, -28(%ebp) 

    mov -28(%ebp),-8(%ebp)

    mov $80.0,-8(%ebp)

    movl $2 , 12(%esp)

    call potencia

    mov $MethodCallExpr{name=potencia, args=[0.0, 2]},-4(%ebp)


    call multRepeat

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_floats05.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 29
lista: 
{LABEL, null, null, Result: BeginMethod div}

{METHODDECL, Metodo{ name=div, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{DIVIDE(/), VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel2, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=b, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=DIVIDELabel2, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=b, type=float, expr=0.0, size=0}, size=0}}
{LABEL, null, null, Result: EndMethod div}
{LABEL, null, null, Result: BeginMethod resta}

{METHODDECL, Metodo{ name=resta, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{MINUS(-), VarLocation{name=factorLabel3, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=MINUSLabel4, type=float, expr=0.0-0.0, size=0}}
{RETURN, null, null, Result: VarLocation{name=MINUSLabel4, type=float, expr=0.0-0.0, size=0}}
{LABEL, null, null, Result: EndMethod resta}
{LABEL, null, null, Result: BeginMethod sum}

{METHODDECL, Metodo{ name=sum, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{PLUS(+), VarLocation{name=factorLabel5, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel6, type=float, expr=0.0+0.0, size=0}}
{RETURN, null, null, Result: VarLocation{name=PLUSLabel6, type=float, expr=0.0+0.0, size=0}}
{LABEL, null, null, Result: EndMethod sum}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel7, type=float, expr=6.982, size=0}, null, Result: VarLocation{name=x, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel8, type=float, expr=002.5, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel9, type=float, expr=-002.5, size=0}}
{ASSIGN(=), VarLocation{name=UNARYMINUSLabel9, type=float, expr=-002.5, size=0}, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel10, type=float, expr=3.5698, size=0}, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 0.0]}
{METHODCALL, resta, 2, Result: RESULTLabel11}
{PARAM, null, null, Result: [0.0, 0.0]}
{METHODCALL, div, 2, Result: RESULTLabel13}
{PARAM, null, null, Result: [MethodCallExpr{name=resta, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}
{METHODCALL, sum, 2, Result: RESULTLabel15}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="anidandofuncionesflotantes"}, MethodCallExpr{name=sum, args=[MethodCallExpr{name=resta, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}]}, null, Result: EXTERNINVKLabel17}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod div}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=div, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=DIVIDELabel2, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=b, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=DIVIDELabel2, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=b, type=float, expr=0.0, size=0}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod div}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod resta}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=resta, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel3, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=MINUSLabel4, type=float, expr=0.0-0.0, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=MINUSLabel4, type=float, expr=0.0-0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod resta}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod sum}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=sum, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0, offset=0}, Simbolo{type=float, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel5, type=float, expr=0.0, size=0}, VarLocation{name=b, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel6, type=float, expr=0.0+0.0, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=PLUSLabel6, type=float, expr=0.0+0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod sum}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel7, type=float, expr=6.982, size=0}, null, Result: VarLocation{name=x, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel8, type=float, expr=002.5, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel9, type=float, expr=-002.5, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=UNARYMINUSLabel9, type=float, expr=-002.5, size=0}, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel10, type=float, expr=3.5698, size=0}, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, resta, 2, Result: RESULTLabel11}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, div, 2, Result: RESULTLabel13}
finalizado.

procesando : . . . {PARAM, null, null, Result: [MethodCallExpr{name=resta, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}
index: 1 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, sum, 2, Result: RESULTLabel15}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="anidandofuncionesflotantes"}, MethodCallExpr{name=sum, args=[MethodCallExpr{name=resta, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}]}, null, Result: EXTERNINVKLabel17}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	div
    .type	div, @function 
div: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov -4(%ebp) , %eax 
    mov 1(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-8(%ebp) 

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	resta
    .type	resta, @function 
resta: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov -4(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-8(%ebp) 

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	sum
    .type	sum, @function 
sum: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov -4(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-8(%ebp) 

    mov -8(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    mov $6.982,-4(%ebp)

    movl	-20(%ebp), %eax 
    negl	%eax 
    movl	%eax, -24(%ebp) 

    mov -24(%ebp),-8(%ebp)

    mov $3.5698,-12(%ebp)


    call resta


    call div


    call sum

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_for01.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 25
lista: 
{null, int, A, Result: 5}
{null, float, B, Result: 56}
{null, boolean, C, Result: 10}
{LABEL, null, null, Result: BeginMethod pruArreglos}

{METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), 2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{ARRAYACCESS, A, VarLocation{name=factorLabel3, type=int, expr=1, size=0}, Result: ArrayAccessLabel4}
{RETURN, null, null, Result: VarLocation{name=factorLabel5, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
{MULTIPLY(*), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=10, size=0}, Result: VarLocation{name=MULTIPLYLabel8, type=int, expr=0*10, size=0}}
{LABEL, null, null, Result: BeginForLabel9}
{CMP, VarLocation{name=factorLabel6, type=int, expr=5, size=0}, VarLocation{name=MULTIPLYLabel8, type=int, expr=0*10, size=0}, Result: null}
{JNL, null, null, Result: EndForLabel10}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel12, type=int, expr=0+2, size=0}}
{ASSIGN(=), 0+2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{PLUS(+), VarLocation{name=factorLabel6, type=int, expr=5, size=0}, 1, Result: VarLocation{name=factorLabel6, type=int, expr=5, size=0}}
{JMP, null, null, Result: BeginForLabel9}
{LABEL, null, null, Result: EndForLabel10}
{LABEL, null, null, Result: EndMethod pruArreglos}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruArreglos, 2, Result: RESULTLabel15}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[StringLiteral{value="%d resultado : "}, MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel17}
{RETURN, null, null, Result: VarLocation{name=factorLabel18, type=int, expr=1, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, int, A, Result: 5}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, float, B, Result: 56}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, boolean, C, Result: 10}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod pruArreglos}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {ARRAYACCESS, A, VarLocation{name=factorLabel3, type=int, expr=1, size=0}, Result: ArrayAccessLabel4}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel5, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=10, size=0}, Result: VarLocation{name=MULTIPLYLabel8, type=int, expr=0*10, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginForLabel9}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel6, type=int, expr=5, size=0}, VarLocation{name=MULTIPLYLabel8, type=int, expr=0*10, size=0}, Result: null}
finalizado.

procesando : . . . {JNL, null, null, Result: EndForLabel10}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel12, type=int, expr=0+2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel6, type=int, expr=5, size=0}, 1, Result: VarLocation{name=factorLabel6, type=int, expr=5, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginForLabel9}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndForLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruArreglos}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruArreglos, 2, Result: RESULTLabel15}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[StringLiteral{value="%d resultado : "}, MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel17}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel18, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.






    .text
    .globl	pruArreglos
    .type	pruArreglos, @function 
pruArreglos: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov 2 (%ebp), %eax

ARRAYACCESS

    mov $ArrayLiteral{id=A, size=5}, %eax

    mov -4(%ebp) , %eax 
    mov -28(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-32(%ebp) 

.BeginForLabel9:

    mov -32(%ebp), %eax
    cmp -24(%ebp), %eax

    jnl EndForLabel10

    mov -4(%ebp) , %eax 
    mov -36(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-40(%ebp) 

    mov 0+2 (%ebp), %eax

    mov -24(%ebp) , %eax 
    mov $1, %edx 
    add %eax, %edx 
    mov %edx,-24(%ebp) 

    jmp BeginForLabel9

.EndForLabel10:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $8 , 12(%esp)
    movl $4 , 8(%esp)

    call pruArreglos

    call printf

    mov $1, %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_for02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 24
lista: 
{null, int, A, Result: 5}
{null, float, B, Result: 56}
{null, boolean, C, Result: 10}
{LABEL, null, null, Result: BeginMethod pruArreglos}

{METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), 2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{ARRAYACCESS, A, VarLocation{name=factorLabel3, type=int, expr=1, size=0}, Result: ArrayAccessLabel4}
{RETURN, null, null, Result: VarLocation{name=factorLabel5, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
{LABEL, null, null, Result: BeginForLabel8}
{CMP, VarLocation{name=factorLabel6, type=int, expr=5, size=0}, VarLocation{name=factorLabel7, type=int, expr=10, size=0}, Result: null}
{JNL, null, null, Result: EndForLabel9}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel10, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel11, type=int, expr=0+2, size=0}}
{ASSIGN(=), 0+2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{PLUS(+), VarLocation{name=factorLabel6, type=int, expr=5, size=0}, 1, Result: VarLocation{name=factorLabel6, type=int, expr=5, size=0}}
{JMP, null, null, Result: BeginForLabel8}
{LABEL, null, null, Result: EndForLabel9}
{LABEL, null, null, Result: EndMethod pruArreglos}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruArreglos, 2, Result: RESULTLabel14}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[StringLiteral{value="%d resultado : "}, MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel16}
{RETURN, null, null, Result: VarLocation{name=factorLabel17, type=int, expr=1, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, int, A, Result: 5}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, float, B, Result: 56}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, boolean, C, Result: 10}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod pruArreglos}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {ARRAYACCESS, A, VarLocation{name=factorLabel3, type=int, expr=1, size=0}, Result: ArrayAccessLabel4}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel5, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginForLabel8}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel6, type=int, expr=5, size=0}, VarLocation{name=factorLabel7, type=int, expr=10, size=0}, Result: null}
finalizado.

procesando : . . . {JNL, null, null, Result: EndForLabel9}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel10, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel11, type=int, expr=0+2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel6, type=int, expr=5, size=0}, 1, Result: VarLocation{name=factorLabel6, type=int, expr=5, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginForLabel8}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndForLabel9}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruArreglos}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruArreglos, 2, Result: RESULTLabel14}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[StringLiteral{value="%d resultado : "}, MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel16}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel17, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.






    .text
    .globl	pruArreglos
    .type	pruArreglos, @function 
pruArreglos: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov 2 (%ebp), %eax

ARRAYACCESS

    mov $ArrayLiteral{id=A, size=5}, %eax

.BeginForLabel8:

    mov -28(%ebp), %eax
    cmp -24(%ebp), %eax

    jnl EndForLabel9

    mov -4(%ebp) , %eax 
    mov -32(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-36(%ebp) 

    mov 0+2 (%ebp), %eax

    mov -24(%ebp) , %eax 
    mov $1, %edx 
    add %eax, %edx 
    mov %edx,-24(%ebp) 

    jmp BeginForLabel8

.EndForLabel9:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $8 , 12(%esp)
    movl $4 , 8(%esp)

    call pruArreglos

    call printf

    mov $1, %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_for03.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 25
lista: 
{null, int, A, Result: 5}
{null, float, B, Result: 56}
{null, boolean, C, Result: 10}
{LABEL, null, null, Result: BeginMethod pruArreglos}

{METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), 2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{ARRAYACCESS, A, VarLocation{name=factorLabel3, type=int, expr=1, size=0}, Result: ArrayAccessLabel4}
{RETURN, null, null, Result: VarLocation{name=factorLabel5, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel7, type=int, expr=10, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel8, type=int, expr=-10, size=0}}
{LABEL, null, null, Result: BeginForLabel9}
{CMP, VarLocation{name=factorLabel6, type=int, expr=5, size=0}, VarLocation{name=UNARYMINUSLabel8, type=int, expr=-10, size=0}, Result: null}
{JNL, null, null, Result: EndForLabel10}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel12, type=int, expr=0+2, size=0}}
{ASSIGN(=), 0+2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{PLUS(+), VarLocation{name=factorLabel6, type=int, expr=5, size=0}, 1, Result: VarLocation{name=factorLabel6, type=int, expr=5, size=0}}
{JMP, null, null, Result: BeginForLabel9}
{LABEL, null, null, Result: EndForLabel10}
{LABEL, null, null, Result: EndMethod pruArreglos}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruArreglos, 2, Result: RESULTLabel15}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[StringLiteral{value="%d resultado : "}, MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel17}
{RETURN, null, null, Result: VarLocation{name=factorLabel18, type=int, expr=1, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, int, A, Result: 5}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, float, B, Result: 56}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, boolean, C, Result: 10}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod pruArreglos}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {ARRAYACCESS, A, VarLocation{name=factorLabel3, type=int, expr=1, size=0}, Result: ArrayAccessLabel4}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel5, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel7, type=int, expr=10, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel8, type=int, expr=-10, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginForLabel9}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel6, type=int, expr=5, size=0}, VarLocation{name=UNARYMINUSLabel8, type=int, expr=-10, size=0}, Result: null}
finalizado.

procesando : . . . {JNL, null, null, Result: EndForLabel10}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel12, type=int, expr=0+2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel6, type=int, expr=5, size=0}, 1, Result: VarLocation{name=factorLabel6, type=int, expr=5, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginForLabel9}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndForLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruArreglos}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruArreglos, 2, Result: RESULTLabel15}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[StringLiteral{value="%d resultado : "}, MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel17}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel18, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.






    .text
    .globl	pruArreglos
    .type	pruArreglos, @function 
pruArreglos: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov 2 (%ebp), %eax

ARRAYACCESS

    mov $ArrayLiteral{id=A, size=5}, %eax

    movl	-28(%ebp), %eax 
    negl	%eax 
    movl	%eax, -32(%ebp) 

.BeginForLabel9:

    mov -32(%ebp), %eax
    cmp -24(%ebp), %eax

    jnl EndForLabel10

    mov -4(%ebp) , %eax 
    mov -36(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-40(%ebp) 

    mov 0+2 (%ebp), %eax

    mov -24(%ebp) , %eax 
    mov $1, %edx 
    add %eax, %edx 
    mov %edx,-24(%ebp) 

    jmp BeginForLabel9

.EndForLabel10:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $8 , 12(%esp)
    movl $4 , 8(%esp)

    call pruArreglos

    call printf

    mov $1, %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_for04.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 27
lista: 
{null, int, A, Result: 5}
{null, float, B, Result: 56}
{null, boolean, C, Result: 10}
{LABEL, null, null, Result: BeginMethod pruArreglos}

{METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), 2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{ARRAYACCESS, A, VarLocation{name=factorLabel3, type=int, expr=1, size=0}, Result: ArrayAccessLabel4}
{RETURN, null, null, Result: VarLocation{name=factorLabel5, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
{UNARYMINUS(-expr), VarLocation{name=factorLabel7, type=int, expr=10, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel8, type=int, expr=-10, size=0}}
{MULTIPLY(*), VarLocation{name=factorLabel9, type=int, expr=11, size=0}, VarLocation{name=factorLabel10, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel11, type=int, expr=11*2, size=0}}
{PLUS(+), VarLocation{name=UNARYMINUSLabel8, type=int, expr=-10, size=0}, VarLocation{name=MULTIPLYLabel11, type=int, expr=11*2, size=0}, Result: VarLocation{name=PLUSLabel12, type=int, expr=-10+11*2, size=0}}
{LABEL, null, null, Result: BeginForLabel14}
{CMP, VarLocation{name=factorLabel6, type=int, expr=0, size=0}, VarLocation{name=factorLabel13, type=int, expr=VarLocation{name=PLUSLabel12, type=int, expr=-10+11*2, size=0}, size=0}, Result: null}
{JNL, null, null, Result: EndForLabel15}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel16, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel17, type=int, expr=0+2, size=0}}
{ASSIGN(=), 0+2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{PLUS(+), VarLocation{name=factorLabel6, type=int, expr=0, size=0}, 1, Result: VarLocation{name=factorLabel6, type=int, expr=0, size=0}}
{JMP, null, null, Result: BeginForLabel14}
{LABEL, null, null, Result: EndForLabel15}
{LABEL, null, null, Result: EndMethod pruArreglos}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruArreglos, 2, Result: RESULTLabel20}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[StringLiteral{value="%d resultado : "}, MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel22}
{RETURN, null, null, Result: VarLocation{name=factorLabel23, type=int, expr=1, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, int, A, Result: 5}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, float, B, Result: 56}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, boolean, C, Result: 10}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod pruArreglos}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {ARRAYACCESS, A, VarLocation{name=factorLabel3, type=int, expr=1, size=0}, Result: ArrayAccessLabel4}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel5, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), VarLocation{name=factorLabel7, type=int, expr=10, size=0}, null, Result: VarLocation{name=UNARYMINUSLabel8, type=int, expr=-10, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel9, type=int, expr=11, size=0}, VarLocation{name=factorLabel10, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel11, type=int, expr=11*2, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=UNARYMINUSLabel8, type=int, expr=-10, size=0}, VarLocation{name=MULTIPLYLabel11, type=int, expr=11*2, size=0}, Result: VarLocation{name=PLUSLabel12, type=int, expr=-10+11*2, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginForLabel14}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel6, type=int, expr=0, size=0}, VarLocation{name=factorLabel13, type=int, expr=VarLocation{name=PLUSLabel12, type=int, expr=-10+11*2, size=0}, size=0}, Result: null}
finalizado.

procesando : . . . {JNL, null, null, Result: EndForLabel15}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel16, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel17, type=int, expr=0+2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel6, type=int, expr=0, size=0}, 1, Result: VarLocation{name=factorLabel6, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginForLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndForLabel15}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruArreglos}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruArreglos, 2, Result: RESULTLabel20}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[StringLiteral{value="%d resultado : "}, MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel22}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel23, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.






    .text
    .globl	pruArreglos
    .type	pruArreglos, @function 
pruArreglos: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov 2 (%ebp), %eax

ARRAYACCESS

    mov $ArrayLiteral{id=A, size=5}, %eax

    movl	-28(%ebp), %eax 
    negl	%eax 
    movl	%eax, -32(%ebp) 

    mov -36(%ebp) , %eax 
    mov -40(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-44(%ebp) 

    mov -32(%ebp) , %eax 
    mov -44(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-48(%ebp) 

.BeginForLabel14:

    mov -52(%ebp), %eax
    cmp -24(%ebp), %eax

    jnl EndForLabel15

    mov -4(%ebp) , %eax 
    mov -56(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-60(%ebp) 

    mov 0+2 (%ebp), %eax

    mov -24(%ebp) , %eax 
    mov $1, %edx 
    add %eax, %edx 
    mov %edx,-24(%ebp) 

    jmp BeginForLabel14

.EndForLabel15:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $8 , 12(%esp)
    movl $4 , 8(%esp)

    call pruArreglos

    call printf

    mov $1, %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_for05.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 31
lista: 
{null, int, A, Result: 5}
{null, float, B, Result: 56}
{null, boolean, C, Result: 10}
{LABEL, null, null, Result: BeginMethod par}

{METHODDECL, Metodo{ name=par, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{RETURN, null, null, Result: VarLocation{name=factorLabel1, type=int, expr=15, size=0}}
{LABEL, null, null, Result: EndMethod par}
{LABEL, null, null, Result: BeginMethod pruArreglos}

{METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), 2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{ARRAYACCESS, A, VarLocation{name=factorLabel4, type=int, expr=1, size=0}, Result: ArrayAccessLabel5}
{RETURN, null, null, Result: VarLocation{name=factorLabel6, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
{METHODCALL, par, 0, Result: RESULTLabel7}
{METHODCALL, par, 0, Result: RESULTLabel9}
{PLUS(+), VarLocation{name=factorLabel10, type=int, expr=MethodCallExpr{name=par, args=[]}, size=0}, VarLocation{name=factorLabel11, type=int, expr=5, size=0}, Result: VarLocation{name=PLUSLabel12, type=int, expr=MethodCallExpr{name=par, args=[]}+5, size=0}}
{LABEL, null, null, Result: BeginForLabel13}
{CMP, VarLocation{name=factorLabel8, type=int, expr=MethodCallExpr{name=par, args=[]}, size=0}, VarLocation{name=PLUSLabel12, type=int, expr=MethodCallExpr{name=par, args=[]}+5, size=0}, Result: null}
{JNL, null, null, Result: EndForLabel14}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel15, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel16, type=int, expr=0+2, size=0}}
{ASSIGN(=), 0+2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
{PLUS(+), VarLocation{name=factorLabel8, type=int, expr=MethodCallExpr{name=par, args=[]}, size=0}, 1, Result: VarLocation{name=factorLabel8, type=int, expr=MethodCallExpr{name=par, args=[]}, size=0}}
{JMP, null, null, Result: BeginForLabel13}
{LABEL, null, null, Result: EndForLabel14}
{LABEL, null, null, Result: EndMethod pruArreglos}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruArreglos, 2, Result: RESULTLabel19}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[StringLiteral{value="%d resultado : "}, MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel21}
{RETURN, null, null, Result: VarLocation{name=factorLabel22, type=int, expr=1, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, int, A, Result: 5}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, float, B, Result: 56}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {null, boolean, C, Result: 10}
{GLOBAL} FALTA CASO class java.lang.String
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod par}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=par, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel1, type=int, expr=15, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod par}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod pruArreglos}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruArreglos, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {ARRAYACCESS, A, VarLocation{name=factorLabel4, type=int, expr=1, size=0}, Result: ArrayAccessLabel5}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel6, type=int[], expr=ArrayLiteral{id=A, size=5}, size=0}}
finalizado.

procesando : . . . {METHODCALL, par, 0, Result: RESULTLabel7}
finalizado.

procesando : . . . {METHODCALL, par, 0, Result: RESULTLabel9}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel10, type=int, expr=MethodCallExpr{name=par, args=[]}, size=0}, VarLocation{name=factorLabel11, type=int, expr=5, size=0}, Result: VarLocation{name=PLUSLabel12, type=int, expr=MethodCallExpr{name=par, args=[]}+5, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginForLabel13}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel8, type=int, expr=MethodCallExpr{name=par, args=[]}, size=0}, VarLocation{name=PLUSLabel12, type=int, expr=MethodCallExpr{name=par, args=[]}+5, size=0}, Result: null}
finalizado.

procesando : . . . {JNL, null, null, Result: EndForLabel14}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel15, type=int, expr=2, size=0}, Result: VarLocation{name=PLUSLabel16, type=int, expr=0+2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+2, null, Result: VarLocation{name=A, type=int[], expr=0, size=5}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel8, type=int, expr=MethodCallExpr{name=par, args=[]}, size=0}, 1, Result: VarLocation{name=factorLabel8, type=int, expr=MethodCallExpr{name=par, args=[]}, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginForLabel13}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndForLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruArreglos}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruArreglos, 2, Result: RESULTLabel19}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[StringLiteral{value="%d resultado : "}, MethodCallExpr{name=pruArreglos, args=[4, 8]}]}, null, Result: EXTERNINVKLabel21}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel22, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.






    .text
    .globl	par
    .type	par, @function 
par: 
    push	%ebp
    mov %esp, %ebp

    mov $15, %eax

    leave
    ret



    .text
    .globl	pruArreglos
    .type	pruArreglos, @function 
pruArreglos: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov 2 (%ebp), %eax

ARRAYACCESS

    mov $ArrayLiteral{id=A, size=5}, %eax

    call par

    call par

    mov -28(%ebp) , %eax 
    mov -32(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-36(%ebp) 

.BeginForLabel13:

    mov -36(%ebp), %eax
    cmp -24(%ebp), %eax

    jnl EndForLabel14

    mov -4(%ebp) , %eax 
    mov -40(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-44(%ebp) 

    mov 0+2 (%ebp), %eax

    mov -24(%ebp) , %eax 
    mov $1, %edx 
    add %eax, %edx 
    mov %edx,-24(%ebp) 

    jmp BeginForLabel13

.EndForLabel14:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $8 , 12(%esp)
    movl $4 , 8(%esp)

    call pruArreglos

    call printf

    mov $1, %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_if_anidados.ctds ... -------------------
parseo iniciado
Error: Method pruAritmetica must return int

parseo exitoso
tamaño lista de codigo tercetos: 34
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{NEQ(!=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel2, type=boolean, expr=0!=0, size=0}}
{CMP, VarLocation{name=NEQLabel2, type=boolean, expr=0!=0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel3}
{GE(>), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel6, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel6, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel7}
{MINUS(-), VarLocation{name=factorLabel9, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel10, type=int, expr=0-0, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel10, type=int, expr=0-0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel8}
{LABEL, null, null, Result: elseCondLabel7}
{MINUS(-), VarLocation{name=c, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel12, type=int, expr=0-0, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel12, type=int, expr=0-0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel8}
{JMP, null, null, Result: endIfLabel4}
{LABEL, null, null, Result: elseCondLabel3}
{MULTIPLY(*), VarLocation{name=factorLabel13, type=int, expr=0, size=0}, VarLocation{name=factorLabel14, type=int, expr=5, size=0}, Result: VarLocation{name=MULTIPLYLabel15, type=int, expr=0*5, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel15, type=int, expr=0*5, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel4}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel18}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel20}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: EXTERNINVKLabel21}
{PARAM, null, null, Result: [4, 4]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel24}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 4]}]}, null, Result: EXTERNINVKLabel26}
{PARAM, null, null, Result: [8, 5]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel29}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[8, 5]}]}, null, Result: EXTERNINVKLabel31}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {NEQ(!=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel2, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=NEQLabel2, type=boolean, expr=0!=0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel6, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel6, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel7}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel9, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel10, type=int, expr=0-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel10, type=int, expr=0-0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel8}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel7}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=c, type=int, expr=0, size=0}, VarLocation{name=factorLabel11, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel12, type=int, expr=0-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel12, type=int, expr=0-0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel8}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel13, type=int, expr=0, size=0}, VarLocation{name=factorLabel14, type=int, expr=5, size=0}, Result: VarLocation{name=MULTIPLYLabel15, type=int, expr=0*5, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel15, type=int, expr=0*5, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel18}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel20}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: EXTERNINVKLabel21}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 4]}
index: 1 tamaño: 2

Result = 4
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel24}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 4]}]}, null, Result: EXTERNINVKLabel26}
finalizado.

procesando : . . . {PARAM, null, null, Result: [8, 5]}
index: 1 tamaño: 2

Result = 5
index: 0 tamaño: 2

Result = 8
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel29}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[8, 5]}]}, null, Result: EXTERNINVKLabel31}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-8(%ebp), %eax
    cmpl	1(%ebp), %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -12(%ebp)

    mov $ 1, %eax
    cmp -12(%ebp), %eax

    jne elseCondLabel3

    movl	-16(%ebp), %eax
    cmpl	1(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -20(%ebp)

    mov $ 1, %eax
    cmp -20(%ebp), %eax

    jne elseCondLabel7

    mov -24(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-28(%ebp) 

    mov -28(%ebp),-4(%ebp)

    jmp endIfLabel8

.elseCondLabel7:

    mov 1(%ebp) , %eax 
    mov -32(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-36(%ebp) 

    mov -36(%ebp),-4(%ebp)

.endIfLabel8:

    jmp endIfLabel4

.elseCondLabel3:

    mov -40(%ebp) , %eax 
    mov -44(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-48(%ebp) 

    mov -48(%ebp),-4(%ebp)

.endIfLabel4:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $8 , 12(%esp)
    movl $4 , 8(%esp)

    call pruAritmetica

    call printf

    call printf

    movl $4 , 12(%esp)
    movl $4 , 8(%esp)

    call pruAritmetica

    call printf

    movl $5 , 12(%esp)
    movl $8 , 8(%esp)

    call pruAritmetica

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_if.ctds ... -------------------
parseo iniciado
Error: Method pruAritmetica must return int

parseo exitoso
tamaño lista de codigo tercetos: 34
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel3}
{MINUS(-), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel6, type=int, expr=0-0, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel6, type=int, expr=0-0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel4}
{LABEL, null, null, Result: elseCondLabel3}
{LABEL, null, null, Result: endIfLabel4}
{CEQ(==), VarLocation{name=factorLabel7, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel8, type=boolean, expr=0==0, size=0}}
{CMP, VarLocation{name=CEQLabel8, type=boolean, expr=0==0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel9}
{MULTIPLY(*), VarLocation{name=factorLabel11, type=int, expr=0, size=0}, VarLocation{name=factorLabel12, type=int, expr=5, size=0}, Result: VarLocation{name=MULTIPLYLabel13, type=int, expr=0*5, size=0}}
{ASSIGN(=), VarLocation{name=MULTIPLYLabel13, type=int, expr=0*5, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel10}
{LABEL, null, null, Result: elseCondLabel9}
{MINUS(-), VarLocation{name=c, type=int, expr=0, size=0}, VarLocation{name=factorLabel14, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel15, type=int, expr=0-0, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel15, type=int, expr=0-0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel10}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel18}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel20}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: EXTERNINVKLabel21}
{PARAM, null, null, Result: [4, 4]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel24}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 4]}]}, null, Result: EXTERNINVKLabel26}
{PARAM, null, null, Result: [8, 5]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel29}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[8, 5]}]}, null, Result: EXTERNINVKLabel31}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel6, type=int, expr=0-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel6, type=int, expr=0-0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel7, type=int, expr=0, size=0}, VarLocation{name=c, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel8, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel8, type=boolean, expr=0==0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel9}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel11, type=int, expr=0, size=0}, VarLocation{name=factorLabel12, type=int, expr=5, size=0}, Result: VarLocation{name=MULTIPLYLabel13, type=int, expr=0*5, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MULTIPLYLabel13, type=int, expr=0*5, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel9}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=c, type=int, expr=0, size=0}, VarLocation{name=factorLabel14, type=int, expr=0, size=0}, Result: VarLocation{name=MINUSLabel15, type=int, expr=0-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel15, type=int, expr=0-0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel18}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel20}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: EXTERNINVKLabel21}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 4]}
index: 1 tamaño: 2

Result = 4
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel24}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 4]}]}, null, Result: EXTERNINVKLabel26}
finalizado.

procesando : . . . {PARAM, null, null, Result: [8, 5]}
index: 1 tamaño: 2

Result = 5
index: 0 tamaño: 2

Result = 8
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel29}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[8, 5]}]}, null, Result: EXTERNINVKLabel31}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-8(%ebp), %eax
    cmpl	1(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -12(%ebp)

    mov $ 1, %eax
    cmp -12(%ebp), %eax

    jne elseCondLabel3

    mov -16(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-20(%ebp) 

    mov -20(%ebp),-4(%ebp)

    jmp endIfLabel4

.elseCondLabel3:

.endIfLabel4:

    movl	-24(%ebp), %eax
    cmpl	1(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -28(%ebp)

    mov $ 1, %eax
    cmp -28(%ebp), %eax

    jne elseCondLabel9

    mov -32(%ebp) , %eax 
    mov -36(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-40(%ebp) 

    mov -40(%ebp),-4(%ebp)

    jmp endIfLabel10

.elseCondLabel9:

    mov 1(%ebp) , %eax 
    mov -44(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-48(%ebp) 

    mov -48(%ebp),-4(%ebp)

.endIfLabel10:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $8 , 12(%esp)
    movl $4 , 8(%esp)

    call pruAritmetica

    call printf

    call printf

    movl $4 , 12(%esp)
    movl $4 , 8(%esp)

    call pruAritmetica

    call printf

    movl $5 , 12(%esp)
    movl $8 , 8(%esp)

    call pruAritmetica

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_logicos01.ctds ... -------------------
parseo iniciado
Error: Method pruebaLogica must return int

parseo exitoso
tamaño lista de codigo tercetos: 15
lista: 
{LABEL, null, null, Result: BeginMethod pruebaLogica}

{METHODDECL, Metodo{ name=pruebaLogica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=boolean, name=i, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
{OR(||), VarLocation{name=factorLabel2, type=boolean, expr=false, size=0}, VarLocation{name=a, type=boolean, expr=false, size=0}, Result: VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}}
{NON(!), VarLocation{name=factorLabel5, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=NONLabel6, type=boolean, expr=!true, size=0}}
{AND(&&), VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}, size=0}, VarLocation{name=NONLabel6, type=boolean, expr=!true, size=0}, Result: VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}}
{NON(!), VarLocation{name=factorLabel9, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel10, type=boolean, expr=!false, size=0}}
{AND(&&), VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}, size=0}, VarLocation{name=NONLabel10, type=boolean, expr=!false, size=0}, Result: VarLocation{name=CONJUNCIONLabel11, type=boolean, expr=VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}&&!false, size=0}}
{LABEL, null, null, Result: EndMethod pruebaLogica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [false]}
{METHODCALL, pruebaLogica, 1, Result: RESULTLabel14}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruebaLogica, args=[false]}]}, null, Result: EXTERNINVKLabel16}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruebaLogica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruebaLogica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=boolean, name=i, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=factorLabel2, type=boolean, expr=false, size=0}, VarLocation{name=a, type=boolean, expr=false, size=0}, Result: VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel5, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=NONLabel6, type=boolean, expr=!true, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}, size=0}, VarLocation{name=NONLabel6, type=boolean, expr=!true, size=0}, Result: VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=factorLabel9, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel10, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}, size=0}, VarLocation{name=NONLabel10, type=boolean, expr=!false, size=0}, Result: VarLocation{name=CONJUNCIONLabel11, type=boolean, expr=VarLocation{name=CONJUNCIONLabel7, type=boolean, expr=VarLocation{name=DISYUNCIONLabel3, type=boolean, expr=false||false, size=0}&&!true, size=0}&&!false, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruebaLogica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [false]}
index: 0 tamaño: 1
finalizado.

procesando : . . . {METHODCALL, pruebaLogica, 1, Result: RESULTLabel14}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruebaLogica, args=[false]}]}, null, Result: EXTERNINVKLabel16}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	pruebaLogica
    .type	pruebaLogica, @function 
pruebaLogica: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $true,-4(%ebp)

    cmp	$0, -12(%ebp)
    jne .L0
    cmp	$0, -4(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -16(%ebp)
.L2:

    cmp $0, -24(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -28(%ebp) 

    cmp	$0, -20(%ebp)
    je .L3
    cmp	$0, -28(%ebp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -32(%ebp)
.L5:

    cmp $0, -40(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -44(%ebp) 

    cmp	$0, -36(%ebp)
    je .L6
    cmp	$0, -44(%ebp)
    je .L6
    mov	$1, %eax
    jmp .L7
.L6:
    movl	$0, %eax
    jmp .L8
.L7:
    movl	%eax, -48(%ebp)
.L8:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $false , (%esp)
    call pruebaLogica

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_logicos02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 54
lista: 
{LABEL, null, null, Result: BeginMethod promedio}

{METHODDECL, Metodo{ name=promedio, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=nota1, value=null, size=0, offset=0}, Simbolo{type=float, name=nota2, value=null, size=0, offset=0}, Simbolo{type=float, name=nota3, value=null, size=0, offset=0}]}, null, Result: null}
{GE(>), VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}, VarLocation{name=nota3, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0.0>0.0, size=0}}
{GE(>), VarLocation{name=nota2, type=float, expr=0.0, size=0}, VarLocation{name=nota3, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel4, type=boolean, expr=0.0>0.0, size=0}}
{AND(&&), VarLocation{name=factorLabel3, type=boolean, expr=VarLocation{name=GELabel2, type=boolean, expr=0.0>0.0, size=0}, size=0}, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=GELabel4, type=boolean, expr=0.0>0.0, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=VarLocation{name=GELabel2, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel4, type=boolean, expr=0.0>0.0, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=VarLocation{name=GELabel2, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel4, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel7}
{PLUS(+), VarLocation{name=factorLabel9, type=float, expr=0.0, size=0}, VarLocation{name=nota2, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel10, type=float, expr=0.0+0.0, size=0}}
{DIVIDE(/), VarLocation{name=factorLabel11, type=float, expr=VarLocation{name=PLUSLabel10, type=float, expr=0.0+0.0, size=0}, size=0}, VarLocation{name=factorLabel12, type=float, expr=2.0, size=0}, Result: VarLocation{name=DIVIDELabel13, type=float, expr=VarLocation{name=factorLabel11, type=float, expr=VarLocation{name=PLUSLabel10, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel12, type=float, expr=2.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=DIVIDELabel13, type=float, expr=VarLocation{name=factorLabel11, type=float, expr=VarLocation{name=PLUSLabel10, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel12, type=float, expr=2.0, size=0}, size=0}}
{JMP, null, null, Result: endIfLabel8}
{LABEL, null, null, Result: elseCondLabel7}
{LABEL, null, null, Result: endIfLabel8}
{GE(>), VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, VarLocation{name=nota2, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel15, type=boolean, expr=0.0>0.0, size=0}}
{GE(>), VarLocation{name=nota3, type=float, expr=0.0, size=0}, VarLocation{name=nota2, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel17, type=boolean, expr=0.0>0.0, size=0}}
{AND(&&), VarLocation{name=factorLabel16, type=boolean, expr=VarLocation{name=GELabel15, type=boolean, expr=0.0>0.0, size=0}, size=0}, VarLocation{name=factorLabel18, type=boolean, expr=VarLocation{name=GELabel17, type=boolean, expr=0.0>0.0, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel19, type=boolean, expr=VarLocation{name=GELabel15, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel17, type=boolean, expr=0.0>0.0, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel19, type=boolean, expr=VarLocation{name=GELabel15, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel17, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel20}
{PLUS(+), VarLocation{name=factorLabel22, type=float, expr=0.0, size=0}, VarLocation{name=nota3, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel23, type=float, expr=0.0+0.0, size=0}}
{DIVIDE(/), VarLocation{name=factorLabel24, type=float, expr=VarLocation{name=PLUSLabel23, type=float, expr=0.0+0.0, size=0}, size=0}, VarLocation{name=factorLabel25, type=float, expr=2.0, size=0}, Result: VarLocation{name=DIVIDELabel26, type=float, expr=VarLocation{name=factorLabel24, type=float, expr=VarLocation{name=PLUSLabel23, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel25, type=float, expr=2.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=DIVIDELabel26, type=float, expr=VarLocation{name=factorLabel24, type=float, expr=VarLocation{name=PLUSLabel23, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel25, type=float, expr=2.0, size=0}, size=0}}
{JMP, null, null, Result: endIfLabel21}
{LABEL, null, null, Result: elseCondLabel20}
{LABEL, null, null, Result: endIfLabel21}
{GE(>), VarLocation{name=nota2, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel27, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel28, type=boolean, expr=0.0>0.0, size=0}}
{GE(>), VarLocation{name=nota3, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel30, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel31, type=boolean, expr=0.0>0.0, size=0}}
{AND(&&), VarLocation{name=factorLabel29, type=boolean, expr=VarLocation{name=GELabel28, type=boolean, expr=0.0>0.0, size=0}, size=0}, VarLocation{name=factorLabel32, type=boolean, expr=VarLocation{name=GELabel31, type=boolean, expr=0.0>0.0, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel33, type=boolean, expr=VarLocation{name=GELabel28, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel31, type=boolean, expr=0.0>0.0, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel33, type=boolean, expr=VarLocation{name=GELabel28, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel31, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel34}
{PLUS(+), VarLocation{name=nota3, type=float, expr=0.0, size=0}, VarLocation{name=nota2, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel36, type=float, expr=0.0+0.0, size=0}}
{DIVIDE(/), VarLocation{name=factorLabel37, type=float, expr=VarLocation{name=PLUSLabel36, type=float, expr=0.0+0.0, size=0}, size=0}, VarLocation{name=factorLabel38, type=float, expr=2.0, size=0}, Result: VarLocation{name=DIVIDELabel39, type=float, expr=VarLocation{name=factorLabel37, type=float, expr=VarLocation{name=PLUSLabel36, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel38, type=float, expr=2.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=DIVIDELabel39, type=float, expr=VarLocation{name=factorLabel37, type=float, expr=VarLocation{name=PLUSLabel36, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel38, type=float, expr=2.0, size=0}, size=0}}
{JMP, null, null, Result: endIfLabel35}
{LABEL, null, null, Result: elseCondLabel34}
{LABEL, null, null, Result: endIfLabel35}
{CEQ(==), VarLocation{name=factorLabel40, type=float, expr=0.0, size=0}, VarLocation{name=nota2, type=float, expr=0.0, size=0}, Result: VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}}
{CEQ(==), VarLocation{name=factorLabel43, type=float, expr=0.0, size=0}, VarLocation{name=nota3, type=float, expr=0.0, size=0}, Result: VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}}
{AND(&&), VarLocation{name=factorLabel42, type=boolean, expr=VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}, size=0}, VarLocation{name=factorLabel45, type=boolean, expr=VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel46, type=boolean, expr=VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}, size=0}}
{CEQ(==), VarLocation{name=nota2, type=float, expr=0.0, size=0}, VarLocation{name=nota3, type=float, expr=0.0, size=0}, Result: VarLocation{name=CEQLabel47, type=boolean, expr=0.0==0.0, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel46, type=boolean, expr=VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}, size=0}, VarLocation{name=factorLabel48, type=boolean, expr=VarLocation{name=CEQLabel47, type=boolean, expr=0.0==0.0, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel49, type=boolean, expr=VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel47, type=boolean, expr=0.0==0.0, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel49, type=boolean, expr=VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel47, type=boolean, expr=0.0==0.0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel50}
{RETURN, null, null, Result: VarLocation{name=factorLabel52, type=float, expr=0.0, size=0}}
{JMP, null, null, Result: endIfLabel51}
{LABEL, null, null, Result: elseCondLabel50}
{LABEL, null, null, Result: endIfLabel51}
{LABEL, null, null, Result: EndMethod promedio}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [3.3, 0.66, 10.0]}
{METHODCALL, promedio, 3, Result: RESULTLabel56}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=promedio, args=[3.3, 0.66, 10.0]}]}, null, Result: EXTERNINVKLabel58}
{RETURN, null, null, Result: VarLocation{name=factorLabel59, type=int, expr=1, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod promedio}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=promedio, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=nota1, value=null, size=0, offset=0}, Simbolo{type=float, name=nota2, value=null, size=0, offset=0}, Simbolo{type=float, name=nota3, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}, VarLocation{name=nota3, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=nota2, type=float, expr=0.0, size=0}, VarLocation{name=nota3, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel4, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel3, type=boolean, expr=VarLocation{name=GELabel2, type=boolean, expr=0.0>0.0, size=0}, size=0}, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=GELabel4, type=boolean, expr=0.0>0.0, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=VarLocation{name=GELabel2, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel4, type=boolean, expr=0.0>0.0, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=VarLocation{name=GELabel2, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel4, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel7}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel9, type=float, expr=0.0, size=0}, VarLocation{name=nota2, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel10, type=float, expr=0.0+0.0, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel11, type=float, expr=VarLocation{name=PLUSLabel10, type=float, expr=0.0+0.0, size=0}, size=0}, VarLocation{name=factorLabel12, type=float, expr=2.0, size=0}, Result: VarLocation{name=DIVIDELabel13, type=float, expr=VarLocation{name=factorLabel11, type=float, expr=VarLocation{name=PLUSLabel10, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel12, type=float, expr=2.0, size=0}, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=DIVIDELabel13, type=float, expr=VarLocation{name=factorLabel11, type=float, expr=VarLocation{name=PLUSLabel10, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel12, type=float, expr=2.0, size=0}, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel8}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel8}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, VarLocation{name=nota2, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel15, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=nota3, type=float, expr=0.0, size=0}, VarLocation{name=nota2, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel17, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel16, type=boolean, expr=VarLocation{name=GELabel15, type=boolean, expr=0.0>0.0, size=0}, size=0}, VarLocation{name=factorLabel18, type=boolean, expr=VarLocation{name=GELabel17, type=boolean, expr=0.0>0.0, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel19, type=boolean, expr=VarLocation{name=GELabel15, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel17, type=boolean, expr=0.0>0.0, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel19, type=boolean, expr=VarLocation{name=GELabel15, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel17, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel20}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel22, type=float, expr=0.0, size=0}, VarLocation{name=nota3, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel23, type=float, expr=0.0+0.0, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel24, type=float, expr=VarLocation{name=PLUSLabel23, type=float, expr=0.0+0.0, size=0}, size=0}, VarLocation{name=factorLabel25, type=float, expr=2.0, size=0}, Result: VarLocation{name=DIVIDELabel26, type=float, expr=VarLocation{name=factorLabel24, type=float, expr=VarLocation{name=PLUSLabel23, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel25, type=float, expr=2.0, size=0}, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=DIVIDELabel26, type=float, expr=VarLocation{name=factorLabel24, type=float, expr=VarLocation{name=PLUSLabel23, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel25, type=float, expr=2.0, size=0}, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel21}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel20}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel21}
finalizado.

procesando : . . . {GE(>), VarLocation{name=nota2, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel27, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel28, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=nota3, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel30, type=float, expr=0.0, size=0}, Result: VarLocation{name=GELabel31, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel29, type=boolean, expr=VarLocation{name=GELabel28, type=boolean, expr=0.0>0.0, size=0}, size=0}, VarLocation{name=factorLabel32, type=boolean, expr=VarLocation{name=GELabel31, type=boolean, expr=0.0>0.0, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel33, type=boolean, expr=VarLocation{name=GELabel28, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel31, type=boolean, expr=0.0>0.0, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel33, type=boolean, expr=VarLocation{name=GELabel28, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel31, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel34}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=nota3, type=float, expr=0.0, size=0}, VarLocation{name=nota2, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel36, type=float, expr=0.0+0.0, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel37, type=float, expr=VarLocation{name=PLUSLabel36, type=float, expr=0.0+0.0, size=0}, size=0}, VarLocation{name=factorLabel38, type=float, expr=2.0, size=0}, Result: VarLocation{name=DIVIDELabel39, type=float, expr=VarLocation{name=factorLabel37, type=float, expr=VarLocation{name=PLUSLabel36, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel38, type=float, expr=2.0, size=0}, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=DIVIDELabel39, type=float, expr=VarLocation{name=factorLabel37, type=float, expr=VarLocation{name=PLUSLabel36, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel38, type=float, expr=2.0, size=0}, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel35}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel34}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel35}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel40, type=float, expr=0.0, size=0}, VarLocation{name=nota2, type=float, expr=0.0, size=0}, Result: VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel43, type=float, expr=0.0, size=0}, VarLocation{name=nota3, type=float, expr=0.0, size=0}, Result: VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=factorLabel42, type=boolean, expr=VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}, size=0}, VarLocation{name=factorLabel45, type=boolean, expr=VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel46, type=boolean, expr=VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=nota2, type=float, expr=0.0, size=0}, VarLocation{name=nota3, type=float, expr=0.0, size=0}, Result: VarLocation{name=CEQLabel47, type=boolean, expr=0.0==0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel46, type=boolean, expr=VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}, size=0}, VarLocation{name=factorLabel48, type=boolean, expr=VarLocation{name=CEQLabel47, type=boolean, expr=0.0==0.0, size=0}, size=0}, Result: VarLocation{name=CONJUNCIONLabel49, type=boolean, expr=VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel47, type=boolean, expr=0.0==0.0, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel49, type=boolean, expr=VarLocation{name=CEQLabel41, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel44, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel47, type=boolean, expr=0.0==0.0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel50}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel52, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel51}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel50}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel51}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod promedio}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [3.3, 0.66, 10.0]}
index: 2 tamaño: 3
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 1 tamaño: 3
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 3
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, promedio, 3, Result: RESULTLabel56}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=promedio, args=[3.3, 0.66, 10.0]}]}, null, Result: EXTERNINVKLabel58}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel59, type=int, expr=1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	promedio
    .type	promedio, @function 
promedio: 
    enter   $(12), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-4(%ebp), %eax
    cmpl	2(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -8(%ebp)

    movl	1(%ebp), %eax
    cmpl	2(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -16(%ebp)

    cmp	$0, -12(%ebp)
    je .L0
    cmp	$0, -20(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -24(%ebp)
.L2:

    mov $ 1, %eax
    cmp -24(%ebp), %eax

    jne elseCondLabel7

    mov -28(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-32(%ebp) 

    mov -36(%ebp) , %eax 
    mov -40(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-44(%ebp) 

    mov -44(%ebp), %eax

    jmp endIfLabel8

.elseCondLabel7:

.endIfLabel8:

    movl	-48(%ebp), %eax
    cmpl	1(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -52(%ebp)

    movl	2(%ebp), %eax
    cmpl	1(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -60(%ebp)

    cmp	$0, -56(%ebp)
    je .L3
    cmp	$0, -64(%ebp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -68(%ebp)
.L5:

    mov $ 1, %eax
    cmp -68(%ebp), %eax

    jne elseCondLabel20

    mov -72(%ebp) , %eax 
    mov 2(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-76(%ebp) 

    mov -80(%ebp) , %eax 
    mov -84(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-88(%ebp) 

    mov -88(%ebp), %eax

    jmp endIfLabel21

.elseCondLabel20:

.endIfLabel21:

    movl	1(%ebp), %eax
    cmpl	-92(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -96(%ebp)

    movl	2(%ebp), %eax
    cmpl	-104(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -108(%ebp)

    cmp	$0, -100(%ebp)
    je .L6
    cmp	$0, -112(%ebp)
    je .L6
    mov	$1, %eax
    jmp .L7
.L6:
    movl	$0, %eax
    jmp .L8
.L7:
    movl	%eax, -116(%ebp)
.L8:

    mov $ 1, %eax
    cmp -116(%ebp), %eax

    jne elseCondLabel34

    mov 2(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-120(%ebp) 

    mov -124(%ebp) , %eax 
    mov -128(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-132(%ebp) 

    mov -132(%ebp), %eax

    jmp endIfLabel35

.elseCondLabel34:

.endIfLabel35:

    movl	-136(%ebp), %eax
    cmpl	1(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -140(%ebp)

    movl	-148(%ebp), %eax
    cmpl	2(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -152(%ebp)

    cmp	$0, -144(%ebp)
    je .L9
    cmp	$0, -156(%ebp)
    je .L9
    mov	$1, %eax
    jmp .L10
.L9:
    movl	$0, %eax
    jmp .L11
.L10:
    movl	%eax, -160(%ebp)
.L11:

    movl	1(%ebp), %eax
    cmpl	2(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -164(%ebp)

    cmp	$0, -160(%ebp)
    je .L12
    cmp	$0, -168(%ebp)
    je .L12
    mov	$1, %eax
    jmp .L13
.L12:
    movl	$0, %eax
    jmp .L14
.L13:
    movl	%eax, -172(%ebp)
.L14:

    mov $ 1, %eax
    cmp -172(%ebp), %eax

    jne elseCondLabel50

    mov $0.0, %eax

    jmp endIfLabel51

.elseCondLabel50:

.endIfLabel51:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp


    call promedio

    call printf

    mov $1, %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_mainSolo.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 11
lista: 
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
{NON(!), VarLocation{name=a, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel2, type=boolean, expr=!false, size=0}}
{ASSIGN(=), VarLocation{name=NONLabel2, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
{AND(&&), VarLocation{name=a, type=boolean, expr=false, size=0}, VarLocation{name=b, type=boolean, expr=false, size=0}, Result: VarLocation{name=CONJUNCIONLabel3, type=boolean, expr=false&&false, size=0}}
{NON(!), VarLocation{name=b, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel5, type=boolean, expr=!false, size=0}}
{OR(||), VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=CONJUNCIONLabel3, type=boolean, expr=false&&false, size=0}, size=0}, VarLocation{name=NONLabel5, type=boolean, expr=!false, size=0}, Result: VarLocation{name=DISYUNCIONLabel6, type=boolean, expr=VarLocation{name=CONJUNCIONLabel3, type=boolean, expr=false&&false, size=0}||!false, size=0}}
{ASSIGN(=), VarLocation{name=DISYUNCIONLabel6, type=boolean, expr=VarLocation{name=CONJUNCIONLabel3, type=boolean, expr=false&&false, size=0}||!false, size=0}, null, Result: VarLocation{name=c, type=boolean, expr=null, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=boolean, parameters=[false]}, null, Result: EXTERNINVKLabel7}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=boolean, expr=true, size=0}, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=a, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel2, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=NONLabel2, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=a, type=boolean, expr=false, size=0}, VarLocation{name=b, type=boolean, expr=false, size=0}, Result: VarLocation{name=CONJUNCIONLabel3, type=boolean, expr=false&&false, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=b, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=NONLabel5, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=CONJUNCIONLabel3, type=boolean, expr=false&&false, size=0}, size=0}, VarLocation{name=NONLabel5, type=boolean, expr=!false, size=0}, Result: VarLocation{name=DISYUNCIONLabel6, type=boolean, expr=VarLocation{name=CONJUNCIONLabel3, type=boolean, expr=false&&false, size=0}||!false, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=DISYUNCIONLabel6, type=boolean, expr=VarLocation{name=CONJUNCIONLabel3, type=boolean, expr=false&&false, size=0}||!false, size=0}, null, Result: VarLocation{name=c, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=boolean, parameters=[false]}, null, Result: EXTERNINVKLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    mov $true,-4(%ebp)

    cmp $0, -4(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -28(%ebp) 

    mov -28(%ebp),-8(%ebp)

    cmp	$0, -4(%ebp)
    je .L0
    cmp	$0, -8(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -32(%ebp)
.L2:

    cmp $0, -8(%ebp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -40(%ebp) 

    cmp	$0, -36(%ebp)
    jne .L3
    cmp	$0, -40(%ebp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -44(%ebp)
.L5:

    mov -44(%ebp),-12(%ebp)

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_mcd.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 31
lista: 
{LABEL, null, null, Result: BeginMethod maxcomdiv}

{METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0, offset=0}, Simbolo{type=int, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=b, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel3}
{ASSIGN(=), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=b, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel4}
{LABEL, null, null, Result: elseCondLabel3}
{ASSIGN(=), VarLocation{name=b, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel6, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel4}
{ASSIGN(=), VarLocation{name=factorLabel7, type=int, expr=1, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{NEQ(!=), VarLocation{name=resto, type=int, expr=0, size=0}, VarLocation{name=factorLabel8, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel9, type=boolean, expr=0!=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel12}
{CMP, VarLocation{name=factorLabel11, type=boolean, expr=VarLocation{name=factorLabel10, type=boolean, expr=VarLocation{name=NEQLabel9, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel13}
{MOD(%), VarLocation{name=dividendo, type=int, expr=0, size=0}, VarLocation{name=divisor, type=int, expr=0, size=0}, Result: VarLocation{name=MODLabel14, type=int, expr=0%0, size=0}}
{ASSIGN(=), VarLocation{name=MODLabel14, type=int, expr=0%0, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=divisor, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=resto, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel12}
{LABEL, null, null, Result: EndWhileLabel13}
{RETURN, null, null, Result: VarLocation{name=dividendo, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod maxcomdiv}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [6, 9]}
{METHODCALL, maxcomdiv, 2, Result: RESULTLabel17}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="mcd%d"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}]}, null, Result: EXTERNINVKLabel19}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod maxcomdiv}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0, offset=0}, Simbolo{type=int, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=b, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=b, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=b, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel6, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel7, type=int, expr=1, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {NEQ(!=), VarLocation{name=resto, type=int, expr=0, size=0}, VarLocation{name=factorLabel8, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel9, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel12}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel11, type=boolean, expr=VarLocation{name=factorLabel10, type=boolean, expr=VarLocation{name=NEQLabel9, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel13}
finalizado.

procesando : . . . {MOD(%), VarLocation{name=dividendo, type=int, expr=0, size=0}, VarLocation{name=divisor, type=int, expr=0, size=0}, Result: VarLocation{name=MODLabel14, type=int, expr=0%0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MODLabel14, type=int, expr=0%0, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=divisor, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=resto, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel12}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel13}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=dividendo, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod maxcomdiv}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6, 9]}
index: 1 tamaño: 2

Result = 9
index: 0 tamaño: 2

Result = 6
finalizado.

procesando : . . . {METHODCALL, maxcomdiv, 2, Result: RESULTLabel17}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="mcd%d"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}]}, null, Result: EXTERNINVKLabel19}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	maxcomdiv
    .type	maxcomdiv, @function 
maxcomdiv: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-16(%ebp), %eax
    cmpl	1(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -20(%ebp)

    mov $ 1, %eax
    cmp -20(%ebp), %eax

    jne elseCondLabel3

    mov $0,-4(%ebp)

    mov 1(%ebp),-8(%ebp)

    jmp endIfLabel4

.elseCondLabel3:

    mov 1(%ebp),-4(%ebp)

    mov $0,-8(%ebp)

.endIfLabel4:

    mov $1,-12(%ebp)

    movl	-12(%ebp), %eax
    cmpl	-36(%ebp), %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -40(%ebp)

.BeginWhileLabel12:

    mov $ 1, %eax
    cmp -48(%ebp), %eax

    jne EndWhileLabel13

    movl	-8(%ebp), %eax 
    cltd
    idivl -4(%ebp)
    movl	%edx, -52(%ebp)

    mov -52(%ebp),-12(%ebp)

    mov -8(%ebp),-4(%ebp)

    mov -12(%ebp),-8(%ebp)

    jmp BeginWhileLabel12

.EndWhileLabel13:

    mov -4(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $9 , 12(%esp)
    movl $6 , 8(%esp)

    call maxcomdiv

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos00.ctds ... -------------------
parseo iniciado
Error: Method alo not declared
Error: Method alo not declared
ocurrio un error: null
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos01.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 26
lista: 
{null, float, c, Result: 0}
{LABEL, null, null, Result: BeginMethod alo}

{METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
{PLUS(+), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{LABEL, null, null, Result: EndMethod alo}
{LABEL, null, null, Result: BeginMethod alo2}

{METHODDECL, Metodo{ name=alo2, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
{PARAM, null, null, Result: [0]}
{METHODCALL, alo, 1, Result: RESULTLabel5}
{PLUS(+), VarLocation{name=factorLabel6, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel9, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod alo2}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel10, type=int, expr=7, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel11, type=float, expr=8.0, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0]}
{METHODCALL, alo2, 1, Result: RESULTLabel12}
{ASSIGN(=), VarLocation{name=factorLabel13, type=int, expr=MethodCallExpr{name=alo2, args=[0]}, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=factorLabel15, type=int, expr=VarLocation{name=factorLabel14, type=int, expr=3, size=0}, size=0}, VarLocation{name=y, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel16, type=int, expr=VarLocation{name=factorLabel14, type=int, expr=3, size=0}*0, size=0}}
{PARAM, null, null, Result: [VarLocation{name=factorLabel14, type=int, expr=3, size=0}*0]}
{METHODCALL, alo2, 1, Result: RESULTLabel17}
{ASSIGN(=), VarLocation{name=factorLabel18, type=int, expr=MethodCallExpr{name=alo2, args=[VarLocation{name=factorLabel14, type=int, expr=3, size=0}*0]}, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, float, c, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod alo}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod alo}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod alo2}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=alo2, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0]}
index: 0 tamaño: 1

Result = 0
finalizado.

procesando : . . . {METHODCALL, alo, 1, Result: RESULTLabel5}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel6, type=int, expr=0, size=0}, VarLocation{name=factorLabel7, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel9, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod alo2}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel10, type=int, expr=7, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel11, type=float, expr=8.0, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0]}
index: 0 tamaño: 1

Result = 0
finalizado.

procesando : . . . {METHODCALL, alo2, 1, Result: RESULTLabel12}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel13, type=int, expr=MethodCallExpr{name=alo2, args=[0]}, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel15, type=int, expr=VarLocation{name=factorLabel14, type=int, expr=3, size=0}, size=0}, VarLocation{name=y, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel16, type=int, expr=VarLocation{name=factorLabel14, type=int, expr=3, size=0}*0, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [VarLocation{name=factorLabel14, type=int, expr=3, size=0}*0]}
index: 0 tamaño: 1
ocurrio un error: For input string: "0VarLocation{name=factorLabel14, type=int, expr=3, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 35
lista: 
{null, float, c, Result: 0}
{LABEL, null, null, Result: BeginMethod alo}

{METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=boolean, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
{CMP, VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel2}
{PLUS(+), VarLocation{name=x, type=int, expr=0, size=0}, VarLocation{name=factorLabel4, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel5, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel5, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel3}
{LABEL, null, null, Result: elseCondLabel2}
{MINUS(-), VarLocation{name=x, type=int, expr=0, size=0}, VarLocation{name=factorLabel6, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel7, type=int, expr=0-1, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel7, type=int, expr=0-1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel3}
{LABEL, null, null, Result: EndMethod alo}
{LABEL, null, null, Result: BeginMethod Alo}

{METHODDECL, Metodo{ name=Alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=boolean, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod Alo}
{LABEL, null, null, Result: BeginMethod alo2}

{METHODDECL, Metodo{ name=alo2, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
{PARAM, null, null, Result: [true, 0]}
{METHODCALL, alo, 2, Result: RESULTLabel10}
{PLUS(+), VarLocation{name=factorLabel11, type=int, expr=0, size=0}, VarLocation{name=factorLabel12, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel13, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel13, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel14, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod alo2}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel15, type=int, expr=7, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel16, type=float, expr=8.0, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0]}
{METHODCALL, alo2, 1, Result: RESULTLabel17}
{ASSIGN(=), VarLocation{name=factorLabel18, type=int, expr=MethodCallExpr{name=alo2, args=[0]}, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=factorLabel21, type=int, expr=VarLocation{name=factorLabel20, type=int, expr=3, size=0}, size=0}, VarLocation{name=y, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel22, type=int, expr=VarLocation{name=factorLabel20, type=int, expr=3, size=0}*0, size=0}}
{PARAM, null, null, Result: [false, VarLocation{name=factorLabel20, type=int, expr=3, size=0}*0]}
{METHODCALL, alo, 2, Result: RESULTLabel23}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, float, c, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod alo}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=boolean, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel2}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=x, type=int, expr=0, size=0}, VarLocation{name=factorLabel4, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel5, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel5, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel3}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel2}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=x, type=int, expr=0, size=0}, VarLocation{name=factorLabel6, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel7, type=int, expr=0-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel7, type=int, expr=0-1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel3}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod alo}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod Alo}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=Alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=boolean, name=b, value=null, size=0, offset=0}, Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod Alo}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod alo2}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=alo2, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [true, 0]}
index: 1 tamaño: 2

Result = 0
index: 0 tamaño: 2
finalizado.

procesando : . . . {METHODCALL, alo, 2, Result: RESULTLabel10}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel11, type=int, expr=0, size=0}, VarLocation{name=factorLabel12, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel13, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel13, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel14, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod alo2}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel15, type=int, expr=7, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel16, type=float, expr=8.0, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0]}
index: 0 tamaño: 1

Result = 0
finalizado.

procesando : . . . {METHODCALL, alo2, 1, Result: RESULTLabel17}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel18, type=int, expr=MethodCallExpr{name=alo2, args=[0]}, size=0}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel21, type=int, expr=VarLocation{name=factorLabel20, type=int, expr=3, size=0}, size=0}, VarLocation{name=y, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel22, type=int, expr=VarLocation{name=factorLabel20, type=int, expr=3, size=0}*0, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [false, VarLocation{name=factorLabel20, type=int, expr=3, size=0}*0]}
index: 1 tamaño: 2
ocurrio un error: For input string: "0VarLocation{name=factorLabel20, type=int, expr=3, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos03.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 30
lista: 
{null, boolean, res, Result: 0}
{LABEL, null, null, Result: BeginMethod inc}

{METHODDECL, Metodo{ name=inc, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
{PLUS(+), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
{RETURN, null, null, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
{LABEL, null, null, Result: EndMethod inc}
{LABEL, null, null, Result: BeginMethod resto}

{METHODDECL, Metodo{ name=resto, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}, Simbolo{type=float, name=y, value=null, size=0, offset=0}]}, null, Result: null}
{MULTIPLY(*), VarLocation{name=factorLabel5, type=int, expr=3, size=0}, VarLocation{name=factorLabel6, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel7, type=int, expr=3*2, size=0}}
{GE(>), VarLocation{name=factorLabel4, type=int, expr=0, size=0}, VarLocation{name=MULTIPLYLabel7, type=int, expr=3*2, size=0}, Result: VarLocation{name=GELabel8, type=boolean, expr=0>3*2, size=0}}
{CMP, VarLocation{name=GELabel8, type=boolean, expr=0>3*2, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel9}
{DIVIDE(/), VarLocation{name=factorLabel11, type=int, expr=0, size=0}, VarLocation{name=factorLabel12, type=int, expr=3, size=0}, Result: VarLocation{name=DIVIDELabel13, type=int, expr=0/3, size=0}}
{ASSIGN(=), VarLocation{name=DIVIDELabel13, type=int, expr=0/3, size=0}, null, Result: VarLocation{name=res, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel10}
{LABEL, null, null, Result: elseCondLabel9}
{MOD(%), VarLocation{name=factorLabel14, type=int, expr=0, size=0}, VarLocation{name=factorLabel15, type=int, expr=2, size=0}, Result: VarLocation{name=MODLabel16, type=int, expr=0%2, size=0}}
{ASSIGN(=), VarLocation{name=MODLabel16, type=int, expr=0%2, size=0}, null, Result: VarLocation{name=res, type=int, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel10}
{RETURN, null, null, Result: VarLocation{name=res, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod resto}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel17, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=res, type=boolean, expr=null, size=0}}
{PARAM, null, null, Result: [5]}
{METHODCALL, inc, 1, Result: RESULTLabel20}
{PARAM, null, null, Result: [MethodCallExpr{name=inc, args=[5]}, 10.2]}
{METHODCALL, resto, 2, Result: RESULTLabel23}
{ASSIGN(=), MethodCallExpr{name=resto, args=[MethodCallExpr{name=inc, args=[5]}, 10.2]}, null, Result: VarLocation{name=A, type=int[], expr=0, size=1}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, boolean, res, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod inc}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=inc, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod inc}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod resto}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=resto, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}, Simbolo{type=float, name=y, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel5, type=int, expr=3, size=0}, VarLocation{name=factorLabel6, type=int, expr=2, size=0}, Result: VarLocation{name=MULTIPLYLabel7, type=int, expr=3*2, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel4, type=int, expr=0, size=0}, VarLocation{name=MULTIPLYLabel7, type=int, expr=3*2, size=0}, Result: VarLocation{name=GELabel8, type=boolean, expr=0>3*2, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel8, type=boolean, expr=0>3*2, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel9}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel11, type=int, expr=0, size=0}, VarLocation{name=factorLabel12, type=int, expr=3, size=0}, Result: VarLocation{name=DIVIDELabel13, type=int, expr=0/3, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=DIVIDELabel13, type=int, expr=0/3, size=0}, null, Result: VarLocation{name=res, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel9}
finalizado.

procesando : . . . {MOD(%), VarLocation{name=factorLabel14, type=int, expr=0, size=0}, VarLocation{name=factorLabel15, type=int, expr=2, size=0}, Result: VarLocation{name=MODLabel16, type=int, expr=0%2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MODLabel16, type=int, expr=0%2, size=0}, null, Result: VarLocation{name=res, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel10}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=res, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod resto}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel17, type=boolean, expr=false, size=0}, null, Result: VarLocation{name=res, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [5]}
index: 0 tamaño: 1

Result = 5
finalizado.

procesando : . . . {METHODCALL, inc, 1, Result: RESULTLabel20}
finalizado.

procesando : . . . {PARAM, null, null, Result: [MethodCallExpr{name=inc, args=[5]}, 10.2]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, resto, 2, Result: RESULTLabel23}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=resto, args=[MethodCallExpr{name=inc, args=[5]}, 10.2]}, null, Result: VarLocation{name=A, type=int[], expr=0, size=1}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.


    .comm res,4


    .text
    .globl	inc
    .type	inc, @function 
inc: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov -4(%ebp) , %eax 
    mov -8(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-12(%ebp) 

    mov -12(%ebp), %eax

    leave
    ret



    .text
    .globl	resto
    .type	resto, @function 
resto: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov -12(%ebp) , %eax 
    mov -16(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-20(%ebp) 

    movl	-8(%ebp), %eax
    cmpl	-20(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -24(%ebp)

    mov $ 1, %eax
    cmp -24(%ebp), %eax

    jne elseCondLabel9

    mov -28(%ebp) , %eax 
    mov -32(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-36(%ebp) 

    mov -36(%ebp),-4(%ebp)

    jmp endIfLabel10

.elseCondLabel9:

    movl	-44(%ebp), %eax 
    cltd
    idivl -40(%ebp)
    movl	%edx, -48(%ebp)

    mov -48(%ebp),-4(%ebp)

.endIfLabel10:

    mov -4(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    mov $false,-4(%ebp)

    movl $5 , 8(%esp)

    call inc


    call resto

    mov MethodCallExpr{name=resto, args=[MethodCallExpr{name=inc, args=[5]}, 10.2]} (%ebp), %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos_externos01.ctds ... -------------------
parseo iniciado
Error: Method alo not declared
Error: Method alo not declared
ocurrio un error: null
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos_externos02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 35
lista: 
{LABEL, null, null, Result: BeginMethod maxcomdiv}

{METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0, offset=0}, Simbolo{type=int, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=b, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel3}
{ASSIGN(=), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=b, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel4}
{LABEL, null, null, Result: elseCondLabel3}
{ASSIGN(=), VarLocation{name=b, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel6, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel4}
{ASSIGN(=), VarLocation{name=factorLabel7, type=int, expr=1, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{NEQ(!=), VarLocation{name=resto, type=int, expr=0, size=0}, VarLocation{name=factorLabel8, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel9, type=boolean, expr=0!=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel12}
{CMP, VarLocation{name=factorLabel11, type=boolean, expr=VarLocation{name=factorLabel10, type=boolean, expr=VarLocation{name=NEQLabel9, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel13}
{MOD(%), VarLocation{name=dividendo, type=int, expr=0, size=0}, VarLocation{name=divisor, type=int, expr=0, size=0}, Result: VarLocation{name=MODLabel14, type=int, expr=0%0, size=0}}
{ASSIGN(=), VarLocation{name=MODLabel14, type=int, expr=0%0, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=divisor, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=resto, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel12}
{LABEL, null, null, Result: EndWhileLabel13}
{RETURN, null, null, Result: VarLocation{name=dividendo, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod maxcomdiv}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel15, type=int, expr=10000, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{PARAM, null, null, Result: [6, 9]}
{METHODCALL, maxcomdiv, 2, Result: RESULTLabel18}
{MULTIPLY(*), VarLocation{name=factorLabel20, type=float, expr=3.5, size=0}, VarLocation{name=a, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel21, type=float, expr=3.5*0, size=0}}
{DIVIDE(/), VarLocation{name=factorLabel22, type=int, expr=7, size=0}, VarLocation{name=factorLabel23, type=int, expr=6, size=0}, Result: VarLocation{name=DIVIDELabel24, type=int, expr=7/6, size=0}}
{MINUS(-), VarLocation{name=MULTIPLYLabel21, type=float, expr=3.5*0, size=0}, VarLocation{name=DIVIDELabel24, type=int, expr=7/6, size=0}, Result: VarLocation{name=MINUSLabel25, type=float, expr=3.5*0-7/6, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%d%f"}, StringLiteral{value="mcd"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}, 3.5*0-7/6]}, null, Result: EXTERNINVKLabel26}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod maxcomdiv}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0, offset=0}, Simbolo{type=int, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=b, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel2, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel5, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=b, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel3}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=b, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel6, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel4}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel7, type=int, expr=1, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {NEQ(!=), VarLocation{name=resto, type=int, expr=0, size=0}, VarLocation{name=factorLabel8, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel9, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel12}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel11, type=boolean, expr=VarLocation{name=factorLabel10, type=boolean, expr=VarLocation{name=NEQLabel9, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel13}
finalizado.

procesando : . . . {MOD(%), VarLocation{name=dividendo, type=int, expr=0, size=0}, VarLocation{name=divisor, type=int, expr=0, size=0}, Result: VarLocation{name=MODLabel14, type=int, expr=0%0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MODLabel14, type=int, expr=0%0, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=divisor, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=resto, type=int, expr=0, size=0}, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel12}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel13}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=dividendo, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod maxcomdiv}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel15, type=int, expr=10000, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6, 9]}
index: 1 tamaño: 2

Result = 9
index: 0 tamaño: 2

Result = 6
finalizado.

procesando : . . . {METHODCALL, maxcomdiv, 2, Result: RESULTLabel18}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel20, type=float, expr=3.5, size=0}, VarLocation{name=a, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel21, type=float, expr=3.5*0, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=factorLabel22, type=int, expr=7, size=0}, VarLocation{name=factorLabel23, type=int, expr=6, size=0}, Result: VarLocation{name=DIVIDELabel24, type=int, expr=7/6, size=0}}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=MULTIPLYLabel21, type=float, expr=3.5*0, size=0}, VarLocation{name=DIVIDELabel24, type=int, expr=7/6, size=0}, Result: VarLocation{name=MINUSLabel25, type=float, expr=3.5*0-7/6, size=0}}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%d%f"}, StringLiteral{value="mcd"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}, 3.5*0-7/6]}, null, Result: EXTERNINVKLabel26}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	maxcomdiv
    .type	maxcomdiv, @function 
maxcomdiv: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-16(%ebp), %eax
    cmpl	1(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -20(%ebp)

    mov $ 1, %eax
    cmp -20(%ebp), %eax

    jne elseCondLabel3

    mov $0,-4(%ebp)

    mov 1(%ebp),-8(%ebp)

    jmp endIfLabel4

.elseCondLabel3:

    mov 1(%ebp),-4(%ebp)

    mov $0,-8(%ebp)

.endIfLabel4:

    mov $1,-12(%ebp)

    movl	-12(%ebp), %eax
    cmpl	-36(%ebp), %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -40(%ebp)

.BeginWhileLabel12:

    mov $ 1, %eax
    cmp -48(%ebp), %eax

    jne EndWhileLabel13

    movl	-8(%ebp), %eax 
    cltd
    idivl -4(%ebp)
    movl	%edx, -52(%ebp)

    mov -52(%ebp),-12(%ebp)

    mov -8(%ebp),-4(%ebp)

    mov -12(%ebp),-8(%ebp)

    jmp BeginWhileLabel12

.EndWhileLabel13:

    mov -4(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    mov $10000,-4(%ebp)

    movl $9 , 12(%esp)
    movl $6 , 8(%esp)

    call maxcomdiv

    mov -24(%ebp) , %eax 
    mov -4(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-28(%ebp) 

    mov -32(%ebp) , %eax 
    mov -36(%ebp) , %ecx 
	 cltd
+    idiv %ecx
    mov %ecx,-40(%ebp) 

    mov -28(%ebp) , %eax 
    mov -40(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-44(%ebp) 

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_mod.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 11
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=90, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{MOD(%), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=7, size=0}, Result: VarLocation{name=MODLabel3, type=int, expr=0%7, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel4, type=int, expr=VarLocation{name=MODLabel3, type=int, expr=0%7, size=0}, size=0}}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{METHODCALL, pruAritmetica, 0, Result: RESULTLabel5}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[]}]}, null, Result: EXTERNINVKLabel7}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=90, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MOD(%), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=7, size=0}, Result: VarLocation{name=MODLabel3, type=int, expr=0%7, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel4, type=int, expr=VarLocation{name=MODLabel3, type=int, expr=0%7, size=0}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 0, Result: RESULTLabel5}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[]}]}, null, Result: EXTERNINVKLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    push	%ebp
    mov %esp, %ebp

    mov $90,-4(%ebp)

    movl	-12(%ebp), %eax 
    cltd
    idivl -4(%ebp)
    movl	%edx, -16(%ebp)

    mov $VarLocation{name=MODLabel3, type=int, expr=0%7, size=0}, %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    call pruAritmetica

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_mult01.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 15
lista: 
{LABEL, null, null, Result: BeginMethod pruMult}

{METHODDECL, Metodo{ name=pruMult, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=5, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=2000, size=0}, null, Result: VarLocation{name=d, type=int, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel3, type=int, expr=1000, size=0}, Result: VarLocation{name=MULTIPLYLabel4, type=int, expr=0*1000, size=0}}
{MULTIPLY(*), VarLocation{name=MULTIPLYLabel4, type=int, expr=0*1000, size=0}, VarLocation{name=factorLabel5, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel6, type=int, expr=0*1000*0, size=0}}
{MULTIPLY(*), VarLocation{name=MULTIPLYLabel6, type=int, expr=0*1000*0, size=0}, VarLocation{name=d, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel7, type=int, expr=0*1000*0*0, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel8, type=int, expr=VarLocation{name=MULTIPLYLabel7, type=int, expr=0*1000*0*0, size=0}, size=0}}
{LABEL, null, null, Result: EndMethod pruMult}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [2]}
{METHODCALL, pruMult, 1, Result: RESULTLabel10}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruMult, args=[2]}]}, null, Result: EXTERNINVKLabel12}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruMult}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruMult, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=5, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=2000, size=0}, null, Result: VarLocation{name=d, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel3, type=int, expr=1000, size=0}, Result: VarLocation{name=MULTIPLYLabel4, type=int, expr=0*1000, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=MULTIPLYLabel4, type=int, expr=0*1000, size=0}, VarLocation{name=factorLabel5, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel6, type=int, expr=0*1000*0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=MULTIPLYLabel6, type=int, expr=0*1000*0, size=0}, VarLocation{name=d, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel7, type=int, expr=0*1000*0*0, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel8, type=int, expr=VarLocation{name=MULTIPLYLabel7, type=int, expr=0*1000*0*0, size=0}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruMult}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [2]}
index: 0 tamaño: 1

Result = 2
finalizado.

procesando : . . . {METHODCALL, pruMult, 1, Result: RESULTLabel10}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruMult, args=[2]}]}, null, Result: EXTERNINVKLabel12}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	pruMult
    .type	pruMult, @function 
pruMult: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $5,-4(%ebp)

    mov $2000,-8(%ebp)

    mov -4(%ebp) , %eax 
    mov -20(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-24(%ebp) 

    mov -24(%ebp) , %eax 
    mov -28(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-32(%ebp) 

    mov -32(%ebp) , %eax 
    mov -8(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-36(%ebp) 

    mov $VarLocation{name=MULTIPLYLabel7, type=int, expr=0*1000*0*0, size=0}, %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $2 , 8(%esp)

    call pruMult

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_mult02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 11
lista: 
{LABEL, null, null, Result: BeginMethod pruMult}

{METHODDECL, Metodo{ name=pruMult, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=5, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=7, size=0}, Result: VarLocation{name=MULTIPLYLabel3, type=int, expr=0*7, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel4, type=int, expr=VarLocation{name=MULTIPLYLabel3, type=int, expr=0*7, size=0}, size=0}}
{LABEL, null, null, Result: EndMethod pruMult}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{METHODCALL, pruMult, 0, Result: RESULTLabel5}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruMult, args=[]}]}, null, Result: EXTERNINVKLabel7}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruMult}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruMult, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=5, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=a, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=7, size=0}, Result: VarLocation{name=MULTIPLYLabel3, type=int, expr=0*7, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel4, type=int, expr=VarLocation{name=MULTIPLYLabel3, type=int, expr=0*7, size=0}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruMult}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {METHODCALL, pruMult, 0, Result: RESULTLabel5}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruMult, args=[]}]}, null, Result: EXTERNINVKLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	pruMult
    .type	pruMult, @function 
pruMult: 
    push	%ebp
    mov %esp, %ebp

    mov $5,-4(%ebp)

    mov -4(%ebp) , %eax 
    mov -12(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-16(%ebp) 

    mov $VarLocation{name=MULTIPLYLabel3, type=int, expr=0*7, size=0}, %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    call pruMult

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_prog_simple.ctds ... -------------------
parseo iniciado

Error: Main Method Missing in Class prueba2
parseo exitoso
tamaño lista de codigo tercetos: 6
lista: 
{null, float, c, Result: 0}
{LABEL, null, null, Result: BeginMethod alo}

{METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
{PLUS(+), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{LABEL, null, null, Result: EndMethod alo}

procesando : . . . {null, float, c, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod alo}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod alo}
finalizado.


    .comm c,4


    .text
    .globl	alo
    .type	alo, @function 
alo: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov -4(%ebp) , %eax 
    mov -8(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-12(%ebp) 

    mov -12(%ebp),0(%ebp)

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_retorno.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 69
lista: 
{LABEL, null, null, Result: BeginMethod id}

{METHODDECL, Metodo{ name=id, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=100, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=0, size=0}, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel3, type=int, expr=0, size=0}, null, Result: VarLocation{name=z, type=int, expr=null, size=0}}
{LE(<), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=i, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel4, type=boolean, expr=0<0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel6}
{CMP, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=LELabel4, type=boolean, expr=0<0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel7}
{ASSIGN(=), VarLocation{name=factorLabel8, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{GE(>), VarLocation{name=factorLabel9, type=int, expr=0, size=0}, VarLocation{name=factorLabel10, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel11, type=boolean, expr=0>0, size=0}}
{LE(<), VarLocation{name=factorLabel13, type=int, expr=0, size=0}, VarLocation{name=factorLabel14, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel15, type=boolean, expr=0<0, size=0}}
{OR(||), VarLocation{name=factorLabel12, type=boolean, expr=VarLocation{name=GELabel11, type=boolean, expr=0>0, size=0}, size=0}, VarLocation{name=factorLabel16, type=boolean, expr=VarLocation{name=LELabel15, type=boolean, expr=0<0, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel17, type=boolean, expr=VarLocation{name=GELabel11, type=boolean, expr=0>0, size=0}||VarLocation{name=LELabel15, type=boolean, expr=0<0, size=0}, size=0}}
{LABEL, null, null, Result: BeginWhileLabel19}
{CMP, VarLocation{name=factorLabel18, type=boolean, expr=VarLocation{name=DISYUNCIONLabel17, type=boolean, expr=VarLocation{name=GELabel11, type=boolean, expr=0>0, size=0}||VarLocation{name=LELabel15, type=boolean, expr=0<0, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel20}
{GE(>), VarLocation{name=factorLabel21, type=int, expr=0, size=0}, VarLocation{name=factorLabel22, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel23, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel23, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel24}
{MINUS(-), VarLocation{name=factorLabel26, type=int, expr=0, size=0}, VarLocation{name=factorLabel27, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel28, type=int, expr=0-1, size=0}}
{ASSIGN(=), VarLocation{name=MINUSLabel28, type=int, expr=0-1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel25}
{LABEL, null, null, Result: elseCondLabel24}
{PLUS(+), VarLocation{name=factorLabel29, type=int, expr=0, size=0}, VarLocation{name=factorLabel30, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel31, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel31, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel25}
{JMP, null, null, Result: BeginWhileLabel19}
{LABEL, null, null, Result: EndWhileLabel20}
{LE(<), VarLocation{name=factorLabel32, type=int, expr=0, size=0}, VarLocation{name=i, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel33, type=boolean, expr=0<0, size=0}}
{GE(>), VarLocation{name=factorLabel35, type=int, expr=0, size=0}, VarLocation{name=i, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel36, type=boolean, expr=0>0, size=0}}
{OR(||), VarLocation{name=factorLabel34, type=boolean, expr=VarLocation{name=LELabel33, type=boolean, expr=0<0, size=0}, size=0}, VarLocation{name=factorLabel37, type=boolean, expr=VarLocation{name=GELabel36, type=boolean, expr=0>0, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel38, type=boolean, expr=VarLocation{name=LELabel33, type=boolean, expr=0<0, size=0}||VarLocation{name=GELabel36, type=boolean, expr=0>0, size=0}, size=0}}
{LABEL, null, null, Result: BeginWhileLabel40}
{CMP, VarLocation{name=factorLabel39, type=boolean, expr=VarLocation{name=DISYUNCIONLabel38, type=boolean, expr=VarLocation{name=LELabel33, type=boolean, expr=0<0, size=0}||VarLocation{name=GELabel36, type=boolean, expr=0>0, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel41}
{LE(<), VarLocation{name=factorLabel42, type=int, expr=0, size=0}, VarLocation{name=i, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel43, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel43, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel44}
{PLUS(+), VarLocation{name=factorLabel46, type=int, expr=0, size=0}, VarLocation{name=factorLabel47, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel48, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel48, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel45}
{LABEL, null, null, Result: elseCondLabel44}
{CEQ(==), VarLocation{name=factorLabel49, type=int, expr=0, size=0}, VarLocation{name=factorLabel50, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel51, type=boolean, expr=0==0, size=0}}
{CMP, VarLocation{name=CEQLabel51, type=boolean, expr=0==0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel52}
{MINUS(-), VarLocation{name=factorLabel54, type=int, expr=0, size=0}, VarLocation{name=factorLabel55, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel56, type=int, expr=0-1, size=0}}
{MULTIPLY(*), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=factorLabel57, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel58, type=int, expr=0*0, size=0}}
{MULTIPLY(*), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=factorLabel59, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel60, type=int, expr=0*0, size=0}}
{MINUS(-), VarLocation{name=MULTIPLYLabel58, type=int, expr=0*0, size=0}, VarLocation{name=MULTIPLYLabel60, type=int, expr=0*0, size=0}, Result: VarLocation{name=MINUSLabel61, type=int, expr=0*0-0*0, size=0}}
{PLUS(+), VarLocation{name=MINUSLabel56, type=int, expr=0-1, size=0}, VarLocation{name=factorLabel62, type=int, expr=VarLocation{name=MINUSLabel61, type=int, expr=0*0-0*0, size=0}, size=0}, Result: VarLocation{name=PLUSLabel63, type=int, expr=0-1+VarLocation{name=MINUSLabel61, type=int, expr=0*0-0*0, size=0}, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel63, type=int, expr=0-1+VarLocation{name=MINUSLabel61, type=int, expr=0*0-0*0, size=0}, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel53}
{LABEL, null, null, Result: elseCondLabel52}
{LABEL, null, null, Result: endIfLabel53}
{LABEL, null, null, Result: endIfLabel45}
{JMP, null, null, Result: BeginWhileLabel40}
{LABEL, null, null, Result: EndWhileLabel41}
{ASSIGN(=), VarLocation{name=z, type=int, expr=0, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{PLUS(+), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=factorLabel64, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel65, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel65, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel6}
{LABEL, null, null, Result: EndWhileLabel7}
{RETURN, null, null, Result: VarLocation{name=factorLabel66, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod id}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [9]}
{METHODCALL, id, 1, Result: RESULTLabel68}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=id, args=[9]}]}, null, Result: EXTERNINVKLabel70}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod id}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=id, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=100, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=0, size=0}, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel3, type=int, expr=0, size=0}, null, Result: VarLocation{name=z, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=i, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel4, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=LELabel4, type=boolean, expr=0<0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel8, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel9, type=int, expr=0, size=0}, VarLocation{name=factorLabel10, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel11, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=factorLabel13, type=int, expr=0, size=0}, VarLocation{name=factorLabel14, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel15, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=factorLabel12, type=boolean, expr=VarLocation{name=GELabel11, type=boolean, expr=0>0, size=0}, size=0}, VarLocation{name=factorLabel16, type=boolean, expr=VarLocation{name=LELabel15, type=boolean, expr=0<0, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel17, type=boolean, expr=VarLocation{name=GELabel11, type=boolean, expr=0>0, size=0}||VarLocation{name=LELabel15, type=boolean, expr=0<0, size=0}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel19}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel18, type=boolean, expr=VarLocation{name=DISYUNCIONLabel17, type=boolean, expr=VarLocation{name=GELabel11, type=boolean, expr=0>0, size=0}||VarLocation{name=LELabel15, type=boolean, expr=0<0, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel20}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel21, type=int, expr=0, size=0}, VarLocation{name=factorLabel22, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel23, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel23, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel24}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel26, type=int, expr=0, size=0}, VarLocation{name=factorLabel27, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel28, type=int, expr=0-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MINUSLabel28, type=int, expr=0-1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel25}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel24}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel29, type=int, expr=0, size=0}, VarLocation{name=factorLabel30, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel31, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel31, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel25}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel19}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel20}
finalizado.

procesando : . . . {LE(<), VarLocation{name=factorLabel32, type=int, expr=0, size=0}, VarLocation{name=i, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel33, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {GE(>), VarLocation{name=factorLabel35, type=int, expr=0, size=0}, VarLocation{name=i, type=int, expr=0, size=0}, Result: VarLocation{name=GELabel36, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=factorLabel34, type=boolean, expr=VarLocation{name=LELabel33, type=boolean, expr=0<0, size=0}, size=0}, VarLocation{name=factorLabel37, type=boolean, expr=VarLocation{name=GELabel36, type=boolean, expr=0>0, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel38, type=boolean, expr=VarLocation{name=LELabel33, type=boolean, expr=0<0, size=0}||VarLocation{name=GELabel36, type=boolean, expr=0>0, size=0}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel40}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel39, type=boolean, expr=VarLocation{name=DISYUNCIONLabel38, type=boolean, expr=VarLocation{name=LELabel33, type=boolean, expr=0<0, size=0}||VarLocation{name=GELabel36, type=boolean, expr=0>0, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel41}
finalizado.

procesando : . . . {LE(<), VarLocation{name=factorLabel42, type=int, expr=0, size=0}, VarLocation{name=i, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel43, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel43, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel44}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel46, type=int, expr=0, size=0}, VarLocation{name=factorLabel47, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel48, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel48, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel45}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel44}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel49, type=int, expr=0, size=0}, VarLocation{name=factorLabel50, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel51, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel51, type=boolean, expr=0==0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel52}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=factorLabel54, type=int, expr=0, size=0}, VarLocation{name=factorLabel55, type=int, expr=1, size=0}, Result: VarLocation{name=MINUSLabel56, type=int, expr=0-1, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=factorLabel57, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel58, type=int, expr=0*0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=factorLabel59, type=int, expr=0, size=0}, Result: VarLocation{name=MULTIPLYLabel60, type=int, expr=0*0, size=0}}
finalizado.

procesando : . . . {MINUS(-), VarLocation{name=MULTIPLYLabel58, type=int, expr=0*0, size=0}, VarLocation{name=MULTIPLYLabel60, type=int, expr=0*0, size=0}, Result: VarLocation{name=MINUSLabel61, type=int, expr=0*0-0*0, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=MINUSLabel56, type=int, expr=0-1, size=0}, VarLocation{name=factorLabel62, type=int, expr=VarLocation{name=MINUSLabel61, type=int, expr=0*0-0*0, size=0}, size=0}, Result: VarLocation{name=PLUSLabel63, type=int, expr=0-1+VarLocation{name=MINUSLabel61, type=int, expr=0*0-0*0, size=0}, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel63, type=int, expr=0-1+VarLocation{name=MINUSLabel61, type=int, expr=0*0-0*0, size=0}, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel53}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel52}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel53}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel45}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel40}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel41}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=z, type=int, expr=0, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=j, type=int, expr=0, size=0}, VarLocation{name=factorLabel64, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel65, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel65, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel66, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod id}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [9]}
index: 0 tamaño: 1

Result = 9
finalizado.

procesando : . . . {METHODCALL, id, 1, Result: RESULTLabel68}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=id, args=[9]}]}, null, Result: EXTERNINVKLabel70}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	id
    .type	id, @function 
id: 
    enter   $(4), $0 
    push	%ebp
    mov %esp, %ebp

    mov $100,-4(%ebp)

    mov $0,-8(%ebp)

    mov $0,-12(%ebp)

    movl	-8(%ebp), %eax
    cmpl	-4(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -28(%ebp)

.BeginWhileLabel6:

    mov $ 1, %eax
    cmp -32(%ebp), %eax

    jne EndWhileLabel7

    mov $0,-36(%ebp)

    movl	-44(%ebp), %eax
    cmpl	-48(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -52(%ebp)

    movl	-60(%ebp), %eax
    cmpl	-64(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -68(%ebp)

    cmp	$0, -56(%ebp)
    jne .L0
    cmp	$0, -72(%ebp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -76(%ebp)
.L2:

.BeginWhileLabel19:

    mov $ 1, %eax
    cmp -80(%ebp), %eax

    jne EndWhileLabel20

    movl	-84(%ebp), %eax
    cmpl	-88(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -92(%ebp)

    mov $ 1, %eax
    cmp -92(%ebp), %eax

    jne elseCondLabel24

    mov -96(%ebp) , %eax 
    mov -100(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-104(%ebp) 

    mov -104(%ebp),0(%ebp)

    jmp endIfLabel25

.elseCondLabel24:

    mov -108(%ebp) , %eax 
    mov -112(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-116(%ebp) 

    mov -116(%ebp),0(%ebp)

.endIfLabel25:

    jmp BeginWhileLabel19

.EndWhileLabel20:

    movl	-120(%ebp), %eax
    cmpl	-36(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -124(%ebp)

    movl	-132(%ebp), %eax
    cmpl	-36(%ebp), %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -136(%ebp)

    cmp	$0, -128(%ebp)
    jne .L3
    cmp	$0, -140(%ebp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -144(%ebp)
.L5:

.BeginWhileLabel40:

    mov $ 1, %eax
    cmp -148(%ebp), %eax

    jne EndWhileLabel41

    movl	-152(%ebp), %eax
    cmpl	-36(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -156(%ebp)

    mov $ 1, %eax
    cmp -156(%ebp), %eax

    jne elseCondLabel44

    mov -160(%ebp) , %eax 
    mov -164(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-168(%ebp) 

    mov -168(%ebp),0(%ebp)

    jmp endIfLabel45

.elseCondLabel44:

    movl	-172(%ebp), %eax
    cmpl	-176(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -180(%ebp)

    mov $ 1, %eax
    cmp -180(%ebp), %eax

    jne elseCondLabel52

    mov -184(%ebp) , %eax 
    mov -188(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-192(%ebp) 

    mov -8(%ebp) , %eax 
    mov -196(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-200(%ebp) 

    mov -8(%ebp) , %eax 
    mov -204(%ebp) , %edx 
    imul %edx, %eax 
    mov %eax,-208(%ebp) 

    mov -200(%ebp) , %eax 
    mov -208(%ebp) , %edx 
    sub %eax, %edx 
    mov %edx,-212(%ebp) 

    mov -192(%ebp) , %eax 
    mov -216(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-220(%ebp) 

    mov -220(%ebp),0(%ebp)

    jmp endIfLabel53

.elseCondLabel52:

.endIfLabel53:

.endIfLabel45:

    jmp BeginWhileLabel40

.EndWhileLabel41:

    mov -12(%ebp),0(%ebp)

    mov -8(%ebp) , %eax 
    mov -224(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-228(%ebp) 

    mov -228(%ebp),-8(%ebp)

    jmp BeginWhileLabel6

.EndWhileLabel7:

    mov $0, %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $9 , 8(%esp)

    call id

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_suma.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 25
lista: 
{LABEL, null, null, Result: BeginMethod suma}

{METHODDECL, Metodo{ name=suma, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=num1, value=null, size=0, offset=0}, Simbolo{type=int, name=num2, value=null, size=0, offset=0}]}, null, Result: null}
{CEQ(==), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel3, type=boolean, expr=0==0, size=0}}
{CMP, VarLocation{name=CEQLabel3, type=boolean, expr=0==0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel4}
{RETURN, null, null, Result: VarLocation{name=num2, type=int, expr=0, size=0}}
{JMP, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: elseCondLabel4}
{CEQ(==), VarLocation{name=num2, type=int, expr=0, size=0}, VarLocation{name=factorLabel6, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel7, type=boolean, expr=0==0, size=0}}
{CMP, VarLocation{name=CEQLabel7, type=boolean, expr=0==0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel8}
{RETURN, null, null, Result: VarLocation{name=factorLabel10, type=int, expr=0, size=0}}
{JMP, null, null, Result: endIfLabel9}
{LABEL, null, null, Result: elseCondLabel8}
{PLUS(+), VarLocation{name=factorLabel11, type=int, expr=0, size=0}, VarLocation{name=num2, type=int, expr=0, size=0}, Result: VarLocation{name=PLUSLabel12, type=int, expr=0+0, size=0}}
{RETURN, null, null, Result: VarLocation{name=PLUSLabel12, type=int, expr=0+0, size=0}}
{LABEL, null, null, Result: endIfLabel9}
{LABEL, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: EndMethod suma}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 9]}
{METHODCALL, suma, 2, Result: RESULTLabel15}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=suma, args=[4, 9]}]}, null, Result: EXTERNINVKLabel17}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod suma}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=suma, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=num1, value=null, size=0, offset=0}, Simbolo{type=int, name=num2, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel3, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel3, type=boolean, expr=0==0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=num2, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {CEQ(==), VarLocation{name=num2, type=int, expr=0, size=0}, VarLocation{name=factorLabel6, type=int, expr=0, size=0}, Result: VarLocation{name=CEQLabel7, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel7, type=boolean, expr=0==0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel8}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel10, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel9}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel8}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=factorLabel11, type=int, expr=0, size=0}, VarLocation{name=num2, type=int, expr=0, size=0}, Result: VarLocation{name=PLUSLabel12, type=int, expr=0+0, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=PLUSLabel12, type=int, expr=0+0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel9}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod suma}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 9]}
index: 1 tamaño: 2

Result = 9
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, suma, 2, Result: RESULTLabel15}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=suma, args=[4, 9]}]}, null, Result: EXTERNINVKLabel17}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	suma
    .type	suma, @function 
suma: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    movl	-4(%ebp), %eax
    cmpl	-8(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -12(%ebp)

    mov $ 1, %eax
    cmp -12(%ebp), %eax

    jne elseCondLabel4

    mov 1(%ebp), %eax

    jmp endIfLabel5

.elseCondLabel4:

    movl	1(%ebp), %eax
    cmpl	-16(%ebp), %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -20(%ebp)

    mov $ 1, %eax
    cmp -20(%ebp), %eax

    jne elseCondLabel8

    mov $0, %eax

    jmp endIfLabel9

.elseCondLabel8:

    mov -28(%ebp) , %eax 
    mov 1(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-32(%ebp) 

    mov -32(%ebp), %eax

.endIfLabel9:

.endIfLabel5:

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $9 , 12(%esp)
    movl $4 , 8(%esp)

    call suma

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_sumx.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 22
lista: 
{LABEL, null, null, Result: BeginMethod sumx}

{METHODDECL, Metodo{ name=sumx, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=int, name=n, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, null, Result: VarLocation{name=aux, type=float, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel3, type=boolean, expr=0<0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel5}
{CMP, VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=LELabel3, type=boolean, expr=0<0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel6}
{PLUS(+), VarLocation{name=aux, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel7, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel8, type=float, expr=0.0+0.0, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel8, type=float, expr=0.0+0.0, size=0}, null, Result: VarLocation{name=aux, type=float, expr=null, size=0}}
{PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel9, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel10, type=int, expr=0+1, size=0}}
{ASSIGN(=), VarLocation{name=PLUSLabel10, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel5}
{LABEL, null, null, Result: EndWhileLabel6}
{RETURN, null, null, Result: VarLocation{name=aux, type=float, expr=0.0, size=0}}
{LABEL, null, null, Result: EndMethod sumx}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [6.0, 2]}
{METHODCALL, sumx, 2, Result: RESULTLabel13}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=sumx, args=[6.0, 2]}]}, null, Result: EXTERNINVKLabel15}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod sumx}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=sumx, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0, offset=0}, Simbolo{type=int, name=n, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=0, size=0}, null, Result: VarLocation{name=aux, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel2, type=int, expr=0, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=n, type=int, expr=0, size=0}, Result: VarLocation{name=LELabel3, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=LELabel3, type=boolean, expr=0<0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=aux, type=float, expr=0.0, size=0}, VarLocation{name=factorLabel7, type=float, expr=0.0, size=0}, Result: VarLocation{name=PLUSLabel8, type=float, expr=0.0+0.0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel8, type=float, expr=0.0+0.0, size=0}, null, Result: VarLocation{name=aux, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), VarLocation{name=i, type=int, expr=0, size=0}, VarLocation{name=factorLabel9, type=int, expr=1, size=0}, Result: VarLocation{name=PLUSLabel10, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=PLUSLabel10, type=int, expr=0+1, size=0}, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel6}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=aux, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod sumx}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6.0, 2]}
index: 1 tamaño: 2

Result = 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, sumx, 2, Result: RESULTLabel13}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=sumx, args=[6.0, 2]}]}, null, Result: EXTERNINVKLabel15}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	sumx
    .type	sumx, @function 
sumx: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov $0,-4(%ebp)

    mov $0,-8(%ebp)

    movl	-8(%ebp), %eax
    cmpl	1(%ebp), %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -20(%ebp)

.BeginWhileLabel5:

    mov $ 1, %eax
    cmp -24(%ebp), %eax

    jne EndWhileLabel6

    mov -4(%ebp) , %eax 
    mov -28(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-32(%ebp) 

    mov -32(%ebp),-4(%ebp)

    mov -8(%ebp) , %eax 
    mov -36(%ebp) , %edx 
    add %eax, %edx 
    mov %edx,-40(%ebp) 

    mov -40(%ebp),-8(%ebp)

    jmp BeginWhileLabel5

.EndWhileLabel6:

    mov -4(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $2 , 12(%esp)

    call sumx

    call printf

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_while.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 34
lista: 
{LABEL, null, null, Result: BeginMethod maxcomdiv}

{METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0, offset=0}, Simbolo{type=int, name=b, value=null, size=0, offset=0}]}, null, Result: null}
{ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=1, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{NEQ(!=), VarLocation{name=resto, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel3, type=boolean, expr=0!=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel9}
{CMP, VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=factorLabel7, type=boolean, expr=VarLocation{name=factorLabel6, type=boolean, expr=VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=NEQLabel3, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel10}
{MOD(%), VarLocation{name=dividendo, type=int, expr=0, size=0}, VarLocation{name=divisor, type=int, expr=0, size=0}, Result: VarLocation{name=MODLabel11, type=int, expr=0%0, size=0}}
{ASSIGN(=), VarLocation{name=MODLabel11, type=int, expr=0%0, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{ASSIGN(=), VarLocation{name=divisor, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel9}
{JMP, null, null, Result: BeginWhileLabel9}
{LABEL, null, null, Result: EndWhileLabel10}
{NEQ(!=), VarLocation{name=resto, type=int, expr=0, size=0}, VarLocation{name=factorLabel12, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel14}
{CMP, VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel15}
{JMP, null, null, Result: EndWhileLabel15}
{JMP, null, null, Result: BeginWhileLabel14}
{LABEL, null, null, Result: EndWhileLabel15}
{NEQ(!=), VarLocation{name=resto, type=int, expr=0, size=0}, VarLocation{name=factorLabel16, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel17, type=boolean, expr=0!=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel19}
{CMP, VarLocation{name=factorLabel18, type=boolean, expr=VarLocation{name=NEQLabel17, type=boolean, expr=0!=0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel20}
{JMP, null, null, Result: BeginWhileLabel19}
{LABEL, null, null, Result: EndWhileLabel20}
{RETURN, null, null, Result: VarLocation{name=dividendo, type=int, expr=0, size=0}}
{LABEL, null, null, Result: EndMethod maxcomdiv}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [6, 9]}
{METHODCALL, maxcomdiv, 2, Result: RESULTLabel23}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%dMcd"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}]}, null, Result: EXTERNINVKLabel25}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod maxcomdiv}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0, offset=0}, Simbolo{type=int, name=b, value=null, size=0, offset=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel1, type=int, expr=1, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {NEQ(!=), VarLocation{name=resto, type=int, expr=0, size=0}, VarLocation{name=factorLabel2, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel3, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel9}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=factorLabel7, type=boolean, expr=VarLocation{name=factorLabel6, type=boolean, expr=VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=factorLabel4, type=boolean, expr=VarLocation{name=NEQLabel3, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel10}
finalizado.

procesando : . . . {MOD(%), VarLocation{name=dividendo, type=int, expr=0, size=0}, VarLocation{name=divisor, type=int, expr=0, size=0}, Result: VarLocation{name=MODLabel11, type=int, expr=0%0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=MODLabel11, type=int, expr=0%0, size=0}, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=divisor, type=int, expr=0, size=0}, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel9}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel9}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel10}
finalizado.

procesando : . . . {NEQ(!=), VarLocation{name=resto, type=int, expr=0, size=0}, VarLocation{name=factorLabel12, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel14}
finalizado.

procesando : . . . {CMP, VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel15}
finalizado.

procesando : . . . {JMP, null, null, Result: EndWhileLabel15}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel15}
finalizado.

procesando : . . . {NEQ(!=), VarLocation{name=resto, type=int, expr=0, size=0}, VarLocation{name=factorLabel16, type=int, expr=0, size=0}, Result: VarLocation{name=NEQLabel17, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel19}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel18, type=boolean, expr=VarLocation{name=NEQLabel17, type=boolean, expr=0!=0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel20}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel19}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel20}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=dividendo, type=int, expr=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod maxcomdiv}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6, 9]}
index: 1 tamaño: 2

Result = 9
index: 0 tamaño: 2

Result = 6
finalizado.

procesando : . . . {METHODCALL, maxcomdiv, 2, Result: RESULTLabel23}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%dMcd"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}]}, null, Result: EXTERNINVKLabel25}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .text
    .globl	maxcomdiv
    .type	maxcomdiv, @function 
maxcomdiv: 
    enter   $(8), $0 
    push	%ebp
    mov %esp, %ebp

    mov $1,-12(%ebp)

    movl	-12(%ebp), %eax
    cmpl	-20(%ebp), %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -24(%ebp)

.BeginWhileLabel9:

    mov $ 1, %eax
    cmp -44(%ebp), %eax

    jne EndWhileLabel10

    movl	-8(%ebp), %eax 
    cltd
    idivl -4(%ebp)
    movl	%edx, -48(%ebp)

    mov -48(%ebp),-12(%ebp)

    mov -8(%ebp),-4(%ebp)

    jmp BeginWhileLabel9

    jmp BeginWhileLabel9

.EndWhileLabel10:

    movl	-12(%ebp), %eax
    cmpl	-52(%ebp), %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -56(%ebp)

.BeginWhileLabel14:

    mov $ 1, %eax
    cmp -56(%ebp), %eax

    jne EndWhileLabel15

    jmp EndWhileLabel15

    jmp BeginWhileLabel14

.EndWhileLabel15:

    movl	-12(%ebp), %eax
    cmpl	-60(%ebp), %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -64(%ebp)

.BeginWhileLabel19:

    mov $ 1, %eax
    cmp -68(%ebp), %eax

    jne EndWhileLabel20

    jmp BeginWhileLabel19

.EndWhileLabel20:

    mov -4(%ebp), %eax

    leave
    ret



    .text
    .globl	main
    .type	main, @function 
main: 
    push	%ebp
    mov %esp, %ebp

    movl $9 , 12(%esp)
    movl $6 , 8(%esp)

    call maxcomdiv

    call printf

    leave
    ret


---------------------------------------------------
  
  
///////////////////////// TESTS CON FALLAS ////////////////////////////////////////
---------------- Test tests/test_errores/error_arreglos01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_arreglos02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_arreglos03.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 7.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_arreglos04.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_arreglos05.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_bloques01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_bloques02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 9.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_char.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 4.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_class01.ctds ... -------------------
parseo iniciado
Error: Method alo not declared
Error: Method alo not declared
ocurrio un error: null
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_class02.ctds ... -------------------
parseo iniciado
Error: Method alo not declared
Error: Method alo not declared
ocurrio un error: null
---------------------------------------------------
  
  
---------------- Test tests/test_errores/errores.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_externinvk02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 23.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_externinvk.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 22.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_float01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 9.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_float02.ctds ... -------------------
parseo iniciado
error: 0 9 .
error: 0 21 .
error de sintaxis: Linea 22.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_float03.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 29.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_float04.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 41.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_for01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 13.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_for02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 13.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_for03.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 13.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_for04.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 13.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_for05.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 18.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_if01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 9.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_if02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 8.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_lineaerror02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 20.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_lineaerror.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 20.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_break.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 20.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_logicos02.ctds ... -------------------
parseo iniciado
error: 0 4 &
error de sintaxis: Linea 5.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_logicos.ctds ... -------------------
parseo iniciado
ocurrio un error: null
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_main01.ctds ... -------------------
parseo iniciado
Error: Method alo not declared
error de sintaxis: Linea 11.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_main02.ctds ... -------------------
parseo iniciado
Error: Method Main must not have parameters
Error: Method alo not declared
error de sintaxis: Linea 14.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 4.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 4.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos03.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 19.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos04.ctds ... -------------------
parseo iniciado
Error: Method alo3 not declared
error de sintaxis: Linea 21.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos05.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 15.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos06.ctds ... -------------------
parseo iniciado
error: 0 3 &
error de sintaxis: Linea 4.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos07.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 9.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_multiplesMain.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 9.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_vbles01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 6.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_vbles02.ctds ... -------------------
parseo iniciado
error: 0 5 _
error de sintaxis: Linea 7.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_vbles03.ctds ... -------------------
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/ifErrorTest.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 6.
---------------------------------------------------
  
  
