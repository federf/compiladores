*********************************************************************************** 
**                                                                               ** 
**                            Corriendo casos de prueba . . .                    ** 
**                                                                               ** 
**                                                                               ** 
*********************************************************************************** 
     
     
///////////////////////// TESTS CORRECTOS ////////////////////////////////////////
---------------- Test tests/test_correctos/factorial.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 22
lista: 
{LABEL, null, null, Result: BeginMethod factorial}

{METHODDECL, Metodo{ name=factorial, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: VarLocation{name=total, type=int, expr=null, size=0}}
{GE(>), 0, 0, Result: VarLocation{name=GELabel5, type=boolean, expr=0>0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel7}
{CMP, VarLocation{name=factorLabel6, type=boolean, expr=VarLocation{name=GELabel5, type=boolean, expr=0>0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel8}
{MULTIPLY(*), 0, 0, Result: VarLocation{name=MULTIPLYLabel11, type=int, expr=0*0, size=0}}
{ASSIGN(=), 0*0, null, Result: VarLocation{name=total, type=int, expr=null, size=0}}
{MINUS(-), 0, 1, Result: VarLocation{name=MINUSLabel14, type=int, expr=0-1, size=0}}
{ASSIGN(=), 0-1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel7}
{LABEL, null, null, Result: EndWhileLabel8}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod factorial}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [3]}
{METHODCALL, factorial, 1, Result: RESULTLabel17}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=factorial, args=[3]}]}, null, Result: EXTERNINVKLabel19}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod factorial}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=factorial, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 1, null, Result: VarLocation{name=total, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel5, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel7}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel6, type=boolean, expr=VarLocation{name=GELabel5, type=boolean, expr=0>0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel8}
finalizado.

procesando : . . . {MULTIPLY(*), 0, 0, Result: VarLocation{name=MULTIPLYLabel11, type=int, expr=0*0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0*0, null, Result: VarLocation{name=total, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MINUS(-), 0, 1, Result: VarLocation{name=MINUSLabel14, type=int, expr=0-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0-1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel8}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod factorial}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [3]}
index: 0 tamaño: 1

Result = 3
finalizado.

procesando : . . . {METHODCALL, factorial, 1, Result: RESULTLabel17}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=factorial, args=[3]}]}, null, Result: EXTERNINVKLabel19}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	factorial
    .type	factorial, @function 
factorial: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 0(%rbp), %eax
    mov -12(%rbp), %eax

    mov 1(%rbp), %eax
    mov -20(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -36(%rbp)

.BeginWhileLabel7

    mov true(%rbp), %eax
    cmp -40(%rbp), %eax

    jne EndWhileLabel8

    mov $0, %eax 
    mov $0, %edx 
    mov %eax,-56%(ebp) 

    mov 0*0(%rbp), %eax
    mov -44(%rbp), %eax

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-72%(ebp) 

    mov 0-1(%rbp), %eax
    mov -60(%rbp), %eax

    jmp BeginWhileLabel7

.EndWhileLabel8

    mov 0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $3 , (%esp)
    call factorial
    movl %eax, RESULTLabel17(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel19(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/floatTest.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 40
lista: 
{LABEL, null, null, Result: BeginMethod div}

{METHODDECL, Metodo{ name=div, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{DIVIDE(/), 0.0, 0.0, Result: VarLocation{name=DIVIDELabel3, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}}
{LABEL, null, null, Result: EndMethod div}
{LABEL, null, null, Result: BeginMethod resta}

{METHODDECL, Metodo{ name=resta, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{MINUS(-), 0.0, 0.0, Result: VarLocation{name=MINUSLabel6, type=float, expr=0.0-0.0, size=0}}
{RETURN, null, null, Result: 0.0-0.0}
{LABEL, null, null, Result: EndMethod resta}
{LABEL, null, null, Result: BeginMethod sum}

{METHODDECL, Metodo{ name=sum, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel9, type=float, expr=0.0+0.0, size=0}}
{RETURN, null, null, Result: 0.0+0.0}
{LABEL, null, null, Result: EndMethod sum}
{LABEL, null, null, Result: BeginMethod mult}

{METHODDECL, Metodo{ name=mult, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel12, type=float, expr=0.0*0.0, size=0}}
{RETURN, null, null, Result: 0.0*0.0}
{LABEL, null, null, Result: EndMethod mult}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), 1.234, null, Result: VarLocation{name=x, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), 27.5, null, Result: VarLocation{name=UNARYMINUSLabel15, type=float, expr=-27.5, size=0}}
{ASSIGN(=), -27.5, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), 70.3, null, Result: VarLocation{name=UNARYMINUSLabel17, type=float, expr=-70.3, size=0}}
{ASSIGN(=), -70.3, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 0.0]}
{METHODCALL, sum, 2, Result: RESULTLabel20}
{PARAM, null, null, Result: [0.0, 0.0]}
{METHODCALL, div, 2, Result: RESULTLabel24}
{PARAM, null, null, Result: [MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}
{METHODCALL, mult, 2, Result: RESULTLabel26}
{UNARYMINUS(-expr), 0.0, null, Result: VarLocation{name=UNARYMINUSLabel29, type=float, expr=-0.0, size=0}}
{PARAM, null, null, Result: [-0.0, 0.0]}
{METHODCALL, resta, 2, Result: RESULTLabel31}
{PARAM, null, null, Result: [MethodCallExpr{name=mult, args=[MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}, MethodCallExpr{name=resta, args=[-0.0, 0.0]}]}
{METHODCALL, sum, 2, Result: RESULTLabel33}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="anidandoFloatTest"}, MethodCallExpr{name=sum, args=[MethodCallExpr{name=mult, args=[MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}, MethodCallExpr{name=resta, args=[-0.0, 0.0]}]}]}, null, Result: EXTERNINVKLabel35}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod div}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=div, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {DIVIDE(/), 0.0, 0.0, Result: VarLocation{name=DIVIDELabel3, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}, size=0}}
{DIV1} CASO class ir.ast.FloatLiteral PENDIENTE
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod div}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod resta}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=resta, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {MINUS(-), 0.0, 0.0, Result: VarLocation{name=MINUSLabel6, type=float, expr=0.0-0.0, size=0}}
{SUB1} CASO class ir.ast.FloatLiteral PENDIENTE
{SUB2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0-0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod resta}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod sum}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=sum, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel9, type=float, expr=0.0+0.0, size=0}}
{ADD1} CASO class ir.ast.FloatLiteral PENDIENTE
{ADD2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0+0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod sum}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod mult}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=mult, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel12, type=float, expr=0.0*0.0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0*0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod mult}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 1.234, null, Result: VarLocation{name=x, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 27.5, null, Result: VarLocation{name=UNARYMINUSLabel15, type=float, expr=-27.5, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {ASSIGN(=), -27.5, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 70.3, null, Result: VarLocation{name=UNARYMINUSLabel17, type=float, expr=-70.3, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {ASSIGN(=), -70.3, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, sum, 2, Result: RESULTLabel20}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, div, 2, Result: RESULTLabel24}
finalizado.

procesando : . . . {PARAM, null, null, Result: [MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}
index: 1 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, mult, 2, Result: RESULTLabel26}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 0.0, null, Result: VarLocation{name=UNARYMINUSLabel29, type=float, expr=-0.0, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {PARAM, null, null, Result: [-0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} FALTA CASO class ir.ast.UnaryOpExpr
finalizado.

procesando : . . . {METHODCALL, resta, 2, Result: RESULTLabel31}
finalizado.

procesando : . . . {PARAM, null, null, Result: [MethodCallExpr{name=mult, args=[MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}, MethodCallExpr{name=resta, args=[-0.0, 0.0]}]}
index: 1 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, sum, 2, Result: RESULTLabel33}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="anidandoFloatTest"}, MethodCallExpr{name=sum, args=[MethodCallExpr{name=mult, args=[MethodCallExpr{name=sum, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}, MethodCallExpr{name=resta, args=[-0.0, 0.0]}]}]}, null, Result: EXTERNINVKLabel35}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	div
    .type	div, @function 
div: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov %ecx,-12%(ebp) 

    mov VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}(%rbp), %eax

    leave
    ret



    .globl	resta
    .type	resta, @function 
resta: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov %edx,-12%(ebp) 

    mov 0.0-0.0(%rbp), %eax

    leave
    ret



    .globl	sum
    .type	sum, @function 
sum: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov %edx,-12%(ebp) 

    mov 0.0+0.0(%rbp), %eax

    leave
    ret



    .globl	mult
    .type	mult, @function 
mult: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov %eax,-12%(ebp) 

    mov 0.0*0.0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 1.234(%rbp), %eax
    mov -16(%rbp), %eax


    mov -27.5(%rbp), %eax
    mov -24(%rbp), %eax


    mov -70.3(%rbp), %eax
    mov -36(%rbp), %eax

PARAM

    call sum
    movl %eax, RESULTLabel20(%rbp) 

PARAM

    call div
    movl %eax, RESULTLabel24(%rbp) 

PARAM

    call mult
    movl %eax, RESULTLabel26(%rbp) 


PARAM

    call resta
    movl %eax, RESULTLabel31(%rbp) 

PARAM

    call sum
    movl %eax, RESULTLabel33(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel35(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/logicTest.ctds ... -------------------
parseo iniciado
Error: Method pruebaLogica must return int

parseo exitoso
tamaño lista de codigo tercetos: 16
lista: 
{null, boolean, bool, Result: 0}
{LABEL, null, null, Result: BeginMethod pruebaLogica}

{METHODDECL, Metodo{ name=pruebaLogica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), true, null, Result: VarLocation{name=bool, type=boolean, expr=null, size=0}}
{OR(||), false, false, Result: VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}}
{NON(!), true, null, Result: VarLocation{name=NONLabel7, type=boolean, expr=!true, size=0}}
{AND(&&), VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}, !true, Result: VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}}
{NON(!), false, null, Result: VarLocation{name=NONLabel11, type=boolean, expr=!false, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}, !false, Result: VarLocation{name=CONJUNCIONLabel12, type=boolean, expr=VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}&&!false, size=0}}
{LABEL, null, null, Result: EndMethod pruebaLogica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [true]}
{METHODCALL, pruebaLogica, 1, Result: RESULTLabel15}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruebaLogica, args=[true]}]}, null, Result: EXTERNINVKLabel17}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, boolean, bool, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod pruebaLogica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruebaLogica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), true, null, Result: VarLocation{name=bool, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {OR(||), false, false, Result: VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}}
{Or}TRATAMIENTO PARA class ir.ast.BoolLiteral y class ir.ast.BoolLiteral PENDIENTE
finalizado.

procesando : . . . {NON(!), true, null, Result: VarLocation{name=NONLabel7, type=boolean, expr=!true, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}, !true, Result: VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}}
{And}TRATAMIENTO PARA class ir.ast.VarLocation y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {NON(!), false, null, Result: VarLocation{name=NONLabel11, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}, !false, Result: VarLocation{name=CONJUNCIONLabel12, type=boolean, expr=VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}&&!false, size=0}}
{And}TRATAMIENTO PARA class ir.ast.VarLocation y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruebaLogica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [true]}
index: 0 tamaño: 1
finalizado.

procesando : . . . {METHODCALL, pruebaLogica, 1, Result: RESULTLabel15}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruebaLogica, args=[true]}]}, null, Result: EXTERNINVKLabel17}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.


    .comm bool,4


    .globl	pruebaLogica
    .type	pruebaLogica, @function 
pruebaLogica: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov true(%rbp), %eax
    mov -4(%rbp), %eax


    cmp $0, 1(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -32(%rbp) 


    cmp $0, 0(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -48(%rbp) 


    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $true , (%esp)
    call pruebaLogica
    movl %eax, RESULTLabel15(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel17(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/program.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 20
lista: 
{LABEL, null, null, Result: BeginMethod inc}

{METHODDECL, Metodo{ name=inc, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
{RETURN, null, null, Result: 0+1}
{LABEL, null, null, Result: EndMethod inc}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{EXTERNINVK, ExternInvkExpr{id="get_int", type=int, parameters=[]}, null, Result: EXTERNINVKLabel4}
{PARAM, null, null, Result: [ExternInvkExpr{id="get_int", type=int, parameters=[]}]}
{METHODCALL, inc, 1, Result: RESULTLabel6}
{ASSIGN(=), MethodCallExpr{name=inc, args=[ExternInvkExpr{id="get_int", type=int, parameters=[]}]}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{CEQ(==), 0, 1, Result: VarLocation{name=CEQLabel10, type=boolean, expr=0==1, size=0}}
{CMP, VarLocation{name=CEQLabel10, type=boolean, expr=0==1, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel11}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="y==1\n"}]}, null, Result: EXTERNINVKLabel13}
{JMP, null, null, Result: endIfLabel12}
{LABEL, null, null, Result: elseCondLabel11}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="y==%d\n"}, 0]}, null, Result: EXTERNINVKLabel15}
{LABEL, null, null, Result: endIfLabel12}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod inc}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=inc, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0+1}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod inc}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="get_int", type=int, parameters=[]}, null, Result: EXTERNINVKLabel4}
finalizado.

procesando : . . . {PARAM, null, null, Result: [ExternInvkExpr{id="get_int", type=int, parameters=[]}]}
index: 0 tamaño: 1
{PARAM} FALTA CASO class ir.ast.ExternInvkExpr
finalizado.

procesando : . . . {METHODCALL, inc, 1, Result: RESULTLabel6}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=inc, args=[ExternInvkExpr{id="get_int", type=int, parameters=[]}]}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 1, Result: VarLocation{name=CEQLabel10, type=boolean, expr=0==1, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel10, type=boolean, expr=0==1, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel11}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="y==1\n"}]}, null, Result: EXTERNINVKLabel13}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel12}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel11}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="y==%d\n"}, 0]}, null, Result: EXTERNINVKLabel15}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel12}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	inc
    .type	inc, @function 
inc: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-12%(ebp) 

    mov 0+1(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    call "get_int"
    movl %eax, EXTERNINVKLabel4(%rbp) 

PARAM

    call inc
    movl %eax, RESULTLabel6(%rbp) 

    mov MethodCallExpr{name=inc, args=[ExternInvkExpr{id="get_int", type=int, parameters=[]}]}(%rbp), %eax
    mov -8(%rbp), %eax

    movl	$0, %eax
    cmpl	$1, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -28(%rbp)

    mov true(%rbp), %eax
    cmp -28(%rbp), %eax

    jne elseCondLabel11

    call "printf"
    movl %eax, EXTERNINVKLabel13(%rbp) 

    jmp endIfLabel12

.elseCondLabel11

    call "printf"
    movl %eax, EXTERNINVKLabel15(%rbp) 

.endIfLabel12

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_arreglos2.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: B
actual VarLocation{name=A, type=int[], expr=null, size=5}
actual VarLocation{name=B, type=float[], expr=null, size=56}

Result = 55
buscado: C
actual VarLocation{name=A, type=int[], expr=null, size=5}
actual VarLocation{name=B, type=float[], expr=null, size=56}
actual VarLocation{name=C, type=boolean[], expr=null, size=10}

Result = 0
buscado: C
actual VarLocation{name=A, type=int[], expr=null, size=5}
actual VarLocation{name=B, type=float[], expr=null, size=56}
actual VarLocation{name=C, type=boolean[], expr=null, size=10}

Result = 1
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel19, type=int, expr=0, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_arreglos.ctds ... -------------------
parseo iniciado
buscado: res
actual VarLocation{name=A, type=int[], expr=null, size=589}
actual VarLocation{name=B, type=float[], expr=null, size=56}
actual VarLocation{name=C, type=boolean[], expr=null, size=5}
actual VarLocation{name=res, type=float[], expr=null, size=8}

Result = 0
buscado: res
actual VarLocation{name=A, type=int[], expr=null, size=589}
actual VarLocation{name=B, type=float[], expr=null, size=56}
actual VarLocation{name=C, type=boolean[], expr=null, size=5}
actual VarLocation{name=res, type=float[], expr=null, size=8}
ocurrio un error: For input string: "0VarLocation{name=MINUSLabel17, type=int, expr=1"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_Asignaciones.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 9
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [3]}
{METHODCALL, pruAritmetica, 1, Result: RESULTLabel2}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[3]}]}, null, Result: EXTERNINVKLabel4}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [3]}
index: 0 tamaño: 1

Result = 3
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 1, Result: RESULTLabel2}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[3]}]}, null, Result: EXTERNINVKLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $3 , (%esp)
    call pruAritmetica
    movl %eax, RESULTLabel2(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel4(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/testAssing.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 22
lista: 
{LABEL, null, null, Result: BeginMethod aritmTest}

{METHODDECL, Metodo{ name=aritmTest, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 1, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{PLUS(+), 1, 0, Result: VarLocation{name=PLUSLabel5, type=int, expr=1+0, size=0}}
{ASSIGN(=), 1+0, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{PLUS(+), 0, 2, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+2, size=0}}
{ASSIGN(=), 0+2, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{DIVIDE(/), 0, 0, Result: VarLocation{name=DIVIDELabel11, type=int, expr=0/0, size=0}}
{ASSIGN(=), VarLocation{name=DIVIDELabel11, type=int, expr=0/0, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{MOD(%), 0, 3, Result: VarLocation{name=MODLabel15, type=int, expr=0%3, size=0}}
{ASSIGN(=), 0%3, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 2, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod aritmTest}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [5]}
{METHODCALL, aritmTest, 1, Result: RESULTLabel20}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=aritmTest, args=[5]}]}, null, Result: EXTERNINVKLabel22}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod aritmTest}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=aritmTest, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 1, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 2, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), 1, 0, Result: VarLocation{name=PLUSLabel5, type=int, expr=1+0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 1+0, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), 0, 2, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+2, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), 0, 0, Result: VarLocation{name=DIVIDELabel11, type=int, expr=0/0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=DIVIDELabel11, type=int, expr=0/0, size=0}, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MOD(%), 0, 3, Result: VarLocation{name=MODLabel15, type=int, expr=0%3, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0%3, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 1, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 2, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod aritmTest}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [5]}
index: 0 tamaño: 1

Result = 5
finalizado.

procesando : . . . {METHODCALL, aritmTest, 1, Result: RESULTLabel20}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=aritmTest, args=[5]}]}, null, Result: EXTERNINVKLabel22}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	aritmTest
    .type	aritmTest, @function 
aritmTest: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 1(%rbp), %eax
    mov -12(%rbp), %eax

    mov 2(%rbp), %eax
    mov -20(%rbp), %eax

    mov $1, %eax 
    mov $0, %edx 
    mov %edx,-40%(ebp) 

    mov 1+0(%rbp), %eax
    mov -28(%rbp), %eax

    mov $0, %eax 
    mov $2, %edx 
    mov %edx,-56%(ebp) 

    mov 0+2(%rbp), %eax
    mov -44(%rbp), %eax

    mov $0, %eax 
    mov $0, %ecx 
    mov %ecx,-72%(ebp) 

    mov -72(%rbp), %eax
    mov -60(%rbp), %eax

    movl	$3, %eax 
    cltd
    idivl $0 
    movl	%edx, -92(%rbp)

    mov 0%3(%rbp), %eax
    mov -80(%rbp), %eax

    mov 1(%rbp), %eax
    mov -96(%rbp), %eax

    mov 2(%rbp), %eax
    mov -104(%rbp), %eax

    mov 0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $5 , (%esp)
    call aritmTest
    movl %eax, RESULTLabel20(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel22(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_bloques02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 29
lista: 
{LABEL, null, null, Result: BeginMethod breaks}

{METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), 0, 10, Result: VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}}
{LABEL, null, null, Result: BeginWhileLabel6}
{CMP, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel7}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel10, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 2.3, null, Result: VarLocation{name=j, type=float, expr=null, size=0}}
{LE(<), 0, 0, Result: VarLocation{name=LELabel14, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel14, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel15}
{JMP, null, null, Result: EndWhileLabel7}
{JMP, null, null, Result: endIfLabel16}
{LABEL, null, null, Result: elseCondLabel15}
{JMP, null, null, Result: BeginWhileLabel6}
{LABEL, null, null, Result: endIfLabel16}
{JMP, null, null, Result: BeginWhileLabel6}
{LABEL, null, null, Result: EndWhileLabel7}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod breaks}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [1]}
{METHODCALL, breaks, 1, Result: RESULTLabel19}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel21}
{RETURN, null, null, Result: 1}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod breaks}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 10, Result: VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel10, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 2.3, null, Result: VarLocation{name=j, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel14, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel14, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel15}
finalizado.

procesando : . . . {JMP, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel16}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel15}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel16}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod breaks}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [1]}
index: 0 tamaño: 1

Result = 1
finalizado.

procesando : . . . {METHODCALL, breaks, 1, Result: RESULTLabel19}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel21}
finalizado.

procesando : . . . {RETURN, null, null, Result: 1}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	breaks
    .type	breaks, @function 
breaks: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 0(%rbp), %eax
    mov -8(%rbp), %eax

    movl	$0, %eax
    cmpl	$10, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -24(%rbp)

.BeginWhileLabel6

    mov true(%rbp), %eax
    cmp -28(%rbp), %eax

    jne EndWhileLabel7

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-48%(ebp) 

    mov 0+1(%rbp), %eax
    mov -36(%rbp), %eax

    mov 2.3(%rbp), %eax
    mov -52(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -68(%rbp)

    mov true(%rbp), %eax
    cmp -68(%rbp), %eax

    jne elseCondLabel15

    jmp EndWhileLabel7

    jmp endIfLabel16

.elseCondLabel15

    jmp BeginWhileLabel6

.endIfLabel16

    jmp BeginWhileLabel6

.EndWhileLabel7

    mov 0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $1 , (%esp)
    call breaks
    movl %eax, RESULTLabel19(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel21(%rbp) 

    mov 1(%rbp), %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_bloques.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 28
lista: 
{LABEL, null, null, Result: BeginMethod breaks}

{METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), 0, 10, Result: VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}}
{LABEL, null, null, Result: BeginWhileLabel6}
{CMP, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel7}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel10, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), 0, 0, Result: VarLocation{name=LELabel13, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel13, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel14}
{JMP, null, null, Result: EndWhileLabel7}
{JMP, null, null, Result: endIfLabel15}
{LABEL, null, null, Result: elseCondLabel14}
{JMP, null, null, Result: BeginWhileLabel6}
{LABEL, null, null, Result: endIfLabel15}
{JMP, null, null, Result: BeginWhileLabel6}
{LABEL, null, null, Result: EndWhileLabel7}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod breaks}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [1]}
{METHODCALL, breaks, 1, Result: RESULTLabel18}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel20}
{RETURN, null, null, Result: 1}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod breaks}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 10, Result: VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel10, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel13, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel13, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel14}
finalizado.

procesando : . . . {JMP, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel15}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel14}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel15}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod breaks}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [1]}
index: 0 tamaño: 1

Result = 1
finalizado.

procesando : . . . {METHODCALL, breaks, 1, Result: RESULTLabel18}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel20}
finalizado.

procesando : . . . {RETURN, null, null, Result: 1}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	breaks
    .type	breaks, @function 
breaks: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 0(%rbp), %eax
    mov -8(%rbp), %eax

    movl	$0, %eax
    cmpl	$10, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -24(%rbp)

.BeginWhileLabel6

    mov true(%rbp), %eax
    cmp -28(%rbp), %eax

    jne EndWhileLabel7

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-44%(ebp) 

    mov 0+1(%rbp), %eax
    mov -32(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -56(%rbp)

    mov true(%rbp), %eax
    cmp -56(%rbp), %eax

    jne elseCondLabel14

    jmp EndWhileLabel7

    jmp endIfLabel15

.elseCondLabel14

    jmp BeginWhileLabel6

.endIfLabel15

    jmp BeginWhileLabel6

.EndWhileLabel7

    mov 0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $1 , (%esp)
    call breaks
    movl %eax, RESULTLabel18(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel20(%rbp) 

    mov 1(%rbp), %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_booleanos.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 31
lista: 
{LABEL, null, null, Result: BeginMethod neg}

{METHODDECL, Metodo{ name=neg, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
{NON(!), false, null, Result: VarLocation{name=NONLabel2, type=boolean, expr=!false, size=0}}
{RETURN, null, null, Result: !false}
{LABEL, null, null, Result: EndMethod neg}
{LABEL, null, null, Result: BeginMethod and}

{METHODDECL, Metodo{ name=and, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=a, value=null, size=0}, Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
{AND(&&), false, false, Result: VarLocation{name=CONJUNCIONLabel5, type=boolean, expr=false&&false, size=0}}
{RETURN, null, null, Result: false&&false}
{LABEL, null, null, Result: EndMethod and}
{LABEL, null, null, Result: BeginMethod or}

{METHODDECL, Metodo{ name=or, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=a, value=null, size=0}, Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
{OR(||), false, false, Result: VarLocation{name=DISYUNCIONLabel8, type=boolean, expr=false||false, size=0}}
{RETURN, null, null, Result: false||false}
{LABEL, null, null, Result: EndMethod or}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), true, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
{ASSIGN(=), false, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
{PARAM, null, null, Result: [false]}
{METHODCALL, neg, 1, Result: RESULTLabel12}
{ASSIGN(=), MethodCallExpr{name=neg, args=[false]}, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
{PARAM, null, null, Result: [false, false]}
{METHODCALL, and, 2, Result: RESULTLabel16}
{PARAM, null, null, Result: [false]}
{METHODCALL, neg, 1, Result: RESULTLabel19}
{PARAM, null, null, Result: [MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]}
{METHODCALL, or, 2, Result: RESULTLabel21}
{ASSIGN(=), MethodCallExpr{name=or, args=[MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]}, null, Result: VarLocation{name=c, type=boolean, expr=null, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=boolean, parameters=[false]}, null, Result: EXTERNINVKLabel24}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod neg}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=neg, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {NON(!), false, null, Result: VarLocation{name=NONLabel2, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: !false}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod neg}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod and}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=and, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=a, value=null, size=0}, Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {AND(&&), false, false, Result: VarLocation{name=CONJUNCIONLabel5, type=boolean, expr=false&&false, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BoolLiteral y class ir.ast.BoolLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: false&&false}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod and}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod or}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=or, return_not_void=true, typeReturn=boolean, parameters [Simbolo{type=boolean, name=a, value=null, size=0}, Simbolo{type=boolean, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {OR(||), false, false, Result: VarLocation{name=DISYUNCIONLabel8, type=boolean, expr=false||false, size=0}}
{Or}TRATAMIENTO PARA class ir.ast.BoolLiteral y class ir.ast.BoolLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: false||false}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod or}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), true, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), false, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [false]}
index: 0 tamaño: 1
finalizado.

procesando : . . . {METHODCALL, neg, 1, Result: RESULTLabel12}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=neg, args=[false]}, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [false, false]}
index: 1 tamaño: 2
index: 0 tamaño: 2
finalizado.

procesando : . . . {METHODCALL, and, 2, Result: RESULTLabel16}
finalizado.

procesando : . . . {PARAM, null, null, Result: [false]}
index: 0 tamaño: 1
finalizado.

procesando : . . . {METHODCALL, neg, 1, Result: RESULTLabel19}
finalizado.

procesando : . . . {PARAM, null, null, Result: [MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]}
index: 1 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, or, 2, Result: RESULTLabel21}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=or, args=[MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]}, null, Result: VarLocation{name=c, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=boolean, parameters=[false]}, null, Result: EXTERNINVKLabel24}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	neg
    .type	neg, @function 
neg: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    cmp $0, 0(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -8(%rbp) 

    mov !false(%rbp), %eax

    leave
    ret



    .globl	and
    .type	and, @function 
and: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp


    mov false&&false(%rbp), %eax

    leave
    ret



    .globl	or
    .type	or, @function 
or: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp


    mov false||false(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov true(%rbp), %eax
    mov -24(%rbp), %eax

    mov false(%rbp), %eax
    mov -32(%rbp), %eax

PARAM
    movl $false , (%esp)
    call neg
    movl %eax, RESULTLabel12(%rbp) 

    mov MethodCallExpr{name=neg, args=[false]}(%rbp), %eax
    mov -40(%rbp), %eax

PARAM
    movl $false , 0(%esp)    movl $false , (%esp)
    call and
    movl %eax, RESULTLabel16(%rbp) 

PARAM
    movl $false , (%esp)
    call neg
    movl %eax, RESULTLabel19(%rbp) 

PARAM

    call or
    movl %eax, RESULTLabel21(%rbp) 

    mov MethodCallExpr{name=or, args=[MethodCallExpr{name=and, args=[false, false]}, MethodCallExpr{name=neg, args=[false]}]}(%rbp), %eax
    mov -52(%rbp), %eax

    call "printf"
    movl %eax, EXTERNINVKLabel24(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_break.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 28
lista: 
{LABEL, null, null, Result: BeginMethod breaks}

{METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), 0, 10, Result: VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}}
{LABEL, null, null, Result: BeginWhileLabel6}
{CMP, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel7}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel10, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), 0, 0, Result: VarLocation{name=LELabel13, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel13, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel14}
{JMP, null, null, Result: EndWhileLabel7}
{JMP, null, null, Result: endIfLabel15}
{LABEL, null, null, Result: elseCondLabel14}
{JMP, null, null, Result: BeginWhileLabel6}
{LABEL, null, null, Result: endIfLabel15}
{JMP, null, null, Result: BeginWhileLabel6}
{LABEL, null, null, Result: EndWhileLabel7}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod breaks}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [1]}
{METHODCALL, breaks, 1, Result: RESULTLabel18}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel20}
{RETURN, null, null, Result: 1}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod breaks}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=breaks, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=g, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 10, Result: VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=LELabel4, type=boolean, expr=0<10, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel10, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel13, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel13, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel14}
finalizado.

procesando : . . . {JMP, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel15}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel14}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel15}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel7}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod breaks}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [1]}
index: 0 tamaño: 1

Result = 1
finalizado.

procesando : . . . {METHODCALL, breaks, 1, Result: RESULTLabel18}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=breaks, args=[1]}]}, null, Result: EXTERNINVKLabel20}
finalizado.

procesando : . . . {RETURN, null, null, Result: 1}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	breaks
    .type	breaks, @function 
breaks: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 0(%rbp), %eax
    mov -8(%rbp), %eax

    movl	$0, %eax
    cmpl	$10, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -24(%rbp)

.BeginWhileLabel6

    mov true(%rbp), %eax
    cmp -28(%rbp), %eax

    jne EndWhileLabel7

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-44%(ebp) 

    mov 0+1(%rbp), %eax
    mov -32(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -56(%rbp)

    mov true(%rbp), %eax
    cmp -56(%rbp), %eax

    jne elseCondLabel14

    jmp EndWhileLabel7

    jmp endIfLabel15

.elseCondLabel14

    jmp BeginWhileLabel6

.endIfLabel15

    jmp BeginWhileLabel6

.EndWhileLabel7

    mov 0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $1 , (%esp)
    call breaks
    movl %eax, RESULTLabel18(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel20(%rbp) 

    mov 1(%rbp), %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_comentarios2.ctds ... -------------------
parseo iniciado
Error: Method pruAritmetica must return int

parseo exitoso
tamaño lista de codigo tercetos: 17
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0}, Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
{GE(>), 0, 0, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel4}
{ASSIGN(=), 0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: elseCondLabel4}
{ASSIGN(=), 0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel11}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel13}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0}, Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel11}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel13}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -16(%rbp)

    mov true(%rbp), %eax
    cmp -16(%rbp), %eax

    jne elseCondLabel4

    mov 0(%rbp), %eax
    mov -20(%rbp), %eax

    jmp endIfLabel5

.elseCondLabel4

    mov 0(%rbp), %eax
    mov -28(%rbp), %eax

.endIfLabel5

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $8 , 0(%esp)    movl $4 , (%esp)
    call pruAritmetica
    movl %eax, RESULTLabel11(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel13(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_comentarios.ctds ... -------------------
parseo iniciado
Error: Method pruAritmetica must return int

parseo exitoso
tamaño lista de codigo tercetos: 18
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0}, Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
{GE(>), 0, 0, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel4}
{PLUS(+), 0, 5, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+5, size=0}}
{ASSIGN(=), 0+5, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: elseCondLabel4}
{ASSIGN(=), 0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel13}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel15}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0}, Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {PLUS(+), 0, 5, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+5, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+5, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel13}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel15}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -16(%rbp)

    mov true(%rbp), %eax
    cmp -16(%rbp), %eax

    jne elseCondLabel4

    mov $0, %eax 
    mov $5, %edx 
    mov %edx,-32%(ebp) 

    mov 0+5(%rbp), %eax
    mov -20(%rbp), %eax

    jmp endIfLabel5

.elseCondLabel4

    mov 0(%rbp), %eax
    mov -36(%rbp), %eax

.endIfLabel5

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $8 , 0(%esp)    movl $4 , (%esp)
    call pruAritmetica
    movl %eax, RESULTLabel13(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel15(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_condiciones.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 89
lista: 
{LABEL, null, null, Result: BeginMethod dados}

{METHODDECL, Metodo{ name=dados, return_not_void=true, typeReturn=float, parameters [Simbolo{type=int, name=d1, value=null, size=0}, Simbolo{type=int, name=d2, value=null, size=0}, Simbolo{type=int, name=d3, value=null, size=0}]}, null, Result: null}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel5, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel10, type=boolean, expr=!VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), !VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel11, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel16, type=boolean, expr=!VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), !VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel17, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel17, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel18}
{RETURN, null, null, Result: 1.00}
{JMP, null, null, Result: endIfLabel19}
{LABEL, null, null, Result: elseCondLabel18}
{LABEL, null, null, Result: endIfLabel19}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel29, type=boolean, expr=!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel30, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel35, type=boolean, expr=!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel42, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}}
{AND(&&), !VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel52, type=boolean, expr=!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), !VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}}
{OR(||), VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel55, type=boolean, expr=VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel60, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel65, type=boolean, expr=!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), !VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel66, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}}
{AND(&&), !VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel71, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}, size=0}}
{OR(||), VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=CONJUNCIONLabel71, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel73, type=boolean, expr=VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel71, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
{CMP, VarLocation{name=DISYUNCIONLabel73, type=boolean, expr=VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel71, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel74}
{RETURN, null, null, Result: 4.00}
{JMP, null, null, Result: endIfLabel75}
{LABEL, null, null, Result: elseCondLabel74}
{LABEL, null, null, Result: endIfLabel75}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel85, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel90, type=boolean, expr=!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel101, type=boolean, expr=!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}, size=0}}
{AND(&&), VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel102, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}}
{OR(||), VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel109, type=boolean, expr=VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}}
{NON(!), VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel114, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}}
{AND(&&), !VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel119, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}}
{AND(&&), !VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel124, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}, size=0}}
{OR(||), VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=CONJUNCIONLabel124, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel126, type=boolean, expr=VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel124, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
{CMP, VarLocation{name=DISYUNCIONLabel126, type=boolean, expr=VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel124, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel127}
{RETURN, null, null, Result: 8.50}
{JMP, null, null, Result: endIfLabel128}
{LABEL, null, null, Result: elseCondLabel127}
{LABEL, null, null, Result: endIfLabel128}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel138, type=boolean, expr=VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}, size=0}}
{CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel141, type=boolean, expr=0==6, size=0}}
{AND(&&), VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel141, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel143, type=boolean, expr=VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel141, type=boolean, expr=0==6, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel143, type=boolean, expr=VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel141, type=boolean, expr=0==6, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel144}
{RETURN, null, null, Result: 10.00}
{JMP, null, null, Result: endIfLabel145}
{LABEL, null, null, Result: elseCondLabel144}
{LABEL, null, null, Result: endIfLabel145}
{LABEL, null, null, Result: EndMethod dados}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [1, 6, 9]}
{METHODCALL, dados, 3, Result: RESULTLabel150}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=dados, args=[1, 6, 9]}]}, null, Result: EXTERNINVKLabel152}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod dados}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=dados, return_not_void=true, typeReturn=float, parameters [Simbolo{type=int, name=d1, value=null, size=0}, Simbolo{type=int, name=d2, value=null, size=0}, Simbolo{type=int, name=d3, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel5, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel10, type=boolean, expr=!VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), !VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel11, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.UnaryOpExpr y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel16, type=boolean, expr=!VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), !VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel17, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel17, type=boolean, expr=!VarLocation{name=CEQLabel3, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel8, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel14, type=boolean, expr=0==6, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel18}
finalizado.

procesando : . . . {RETURN, null, null, Result: 1.00}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel19}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel18}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel19}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel29, type=boolean, expr=!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel30, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.VarLocation y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel35, type=boolean, expr=!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel42, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), !VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel47, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.UnaryOpExpr y class ir.ast.VarLocation PENDIENTE
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel52, type=boolean, expr=!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), !VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {OR(||), VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel55, type=boolean, expr=VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel60, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel65, type=boolean, expr=!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), !VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel66, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.UnaryOpExpr y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), !VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel71, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.VarLocation PENDIENTE
finalizado.

procesando : . . . {OR(||), VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=CONJUNCIONLabel71, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel73, type=boolean, expr=VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel71, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
{Or}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.VarLocation PENDIENTE
finalizado.

procesando : . . . {CMP, VarLocation{name=DISYUNCIONLabel73, type=boolean, expr=VarLocation{name=CONJUNCIONLabel36, type=boolean, expr=VarLocation{name=CEQLabel23, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel27, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel33, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel53, type=boolean, expr=!VarLocation{name=CEQLabel40, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel45, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel50, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel71, type=boolean, expr=!VarLocation{name=CEQLabel58, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel63, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel69, type=boolean, expr=0==6, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel74}
finalizado.

procesando : . . . {RETURN, null, null, Result: 4.00}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel75}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel74}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel75}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel85, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel90, type=boolean, expr=!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel101, type=boolean, expr=!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}, !VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel102, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.VarLocation y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.VarLocation PENDIENTE
finalizado.

procesando : . . . {OR(||), VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel109, type=boolean, expr=VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}, null, Result: VarLocation{name=NONLabel114, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), !VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel119, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.UnaryOpExpr y class ir.ast.VarLocation PENDIENTE
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), !VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel124, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.VarLocation PENDIENTE
finalizado.

procesando : . . . {OR(||), VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}, VarLocation{name=CONJUNCIONLabel124, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}, size=0}, Result: VarLocation{name=DISYUNCIONLabel126, type=boolean, expr=VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel124, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}, size=0}, size=0}}
{Or}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.VarLocation PENDIENTE
finalizado.

procesando : . . . {CMP, VarLocation{name=DISYUNCIONLabel126, type=boolean, expr=VarLocation{name=CONJUNCIONLabel91, type=boolean, expr=VarLocation{name=CEQLabel79, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel83, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel88, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel107, type=boolean, expr=VarLocation{name=CEQLabel95, type=boolean, expr=0==6, size=0}&&!VarLocation{name=CEQLabel99, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel105, type=boolean, expr=0==6, size=0}, size=0}||VarLocation{name=CONJUNCIONLabel124, type=boolean, expr=!VarLocation{name=CEQLabel112, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel117, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel122, type=boolean, expr=0==6, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel127}
finalizado.

procesando : . . . {RETURN, null, null, Result: 8.50}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel128}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel127}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel128}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel138, type=boolean, expr=VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 6, Result: VarLocation{name=CEQLabel141, type=boolean, expr=0==6, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}, VarLocation{name=CEQLabel141, type=boolean, expr=0==6, size=0}, Result: VarLocation{name=CONJUNCIONLabel143, type=boolean, expr=VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel141, type=boolean, expr=0==6, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.VarLocation PENDIENTE
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel143, type=boolean, expr=VarLocation{name=CEQLabel132, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel136, type=boolean, expr=0==6, size=0}&&VarLocation{name=CEQLabel141, type=boolean, expr=0==6, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel144}
finalizado.

procesando : . . . {RETURN, null, null, Result: 10.00}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel145}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel144}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel145}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod dados}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [1, 6, 9]}
index: 2 tamaño: 3

Result = 9
index: 1 tamaño: 3

Result = 6
index: 0 tamaño: 3

Result = 1
finalizado.

procesando : . . . {METHODCALL, dados, 3, Result: RESULTLabel150}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=dados, args=[1, 6, 9]}]}, null, Result: EXTERNINVKLabel152}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	dados
    .type	dados, @function 
dados: 
    enter   $(12), $0 
    push	%rbp
    mov %rsp, %rbp

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -12(%rbp)

    cmp $0, -12(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -20(%rbp) 

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -32(%rbp)

    cmp $0, -32(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -40(%rbp) 


    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -56(%rbp)

    cmp $0, -56(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -64(%rbp) 


    mov true(%rbp), %eax
    cmp -68(%rbp), %eax

    jne elseCondLabel18

    mov 1.00(%rbp), %eax

    jmp endIfLabel19

.elseCondLabel18

.endIfLabel19

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -84(%rbp)

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -100(%rbp)

    cmp $0, -100(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -108(%rbp) 


    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -124(%rbp)

    cmp $0, -124(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -132(%rbp) 


    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -152(%rbp)

    cmp $0, -152(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -160(%rbp) 

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -172(%rbp)


    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -192(%rbp)

    cmp $0, -192(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -200(%rbp) 


    cmp	$0, -136(%rbp)
    jne .L0
    cmp	$0, -204(%rbp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -212(%rbp)
.L2:

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -224(%rbp)

    cmp $0, -224(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -232(%rbp) 

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -244(%rbp)

    cmp $0, -244(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -252(%rbp) 


    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -268(%rbp)



    mov true(%rbp), %eax
    cmp -284(%rbp), %eax

    jne elseCondLabel74

    mov 4.00(%rbp), %eax

    jmp endIfLabel75

.elseCondLabel74

.endIfLabel75

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -300(%rbp)

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -316(%rbp)

    cmp	$0, -300(%rbp)
    je .L3
    cmp	$0, -316(%rbp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -324(%rbp)
.L5:

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -336(%rbp)

    cmp $0, -336(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -344(%rbp) 


    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -364(%rbp)

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -380(%rbp)

    cmp $0, -380(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -388(%rbp) 


    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -404(%rbp)


    cmp	$0, -348(%rbp)
    jne .L6
    cmp	$0, -412(%rbp)
    je .L6
    mov	$1, %eax
    jmp .L7
.L6:
    movl	$0, %eax
    jmp .L8
.L7:
    movl	%eax, -420(%rbp)
.L8:

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -432(%rbp)

    cmp $0, -432(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -440(%rbp) 

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -452(%rbp)


    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -472(%rbp)



    mov true(%rbp), %eax
    cmp -488(%rbp), %eax

    jne elseCondLabel127

    mov 8.50(%rbp), %eax

    jmp endIfLabel128

.elseCondLabel127

.endIfLabel128

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -504(%rbp)

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -520(%rbp)

    cmp	$0, -504(%rbp)
    je .L9
    cmp	$0, -520(%rbp)
    je .L9
    mov	$1, %eax
    jmp .L10
.L9:
    movl	$0, %eax
    jmp .L11
.L10:
    movl	%eax, -528(%rbp)
.L11:

    movl	$0, %eax
    cmpl	$6, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -540(%rbp)


    mov true(%rbp), %eax
    cmp -548(%rbp), %eax

    jne elseCondLabel144

    mov 10.00(%rbp), %eax

    jmp endIfLabel145

.elseCondLabel144

.endIfLabel145

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $9 , 4(%esp)    movl $6 , 0(%esp)    movl $1 , (%esp)
    call dados
    movl %eax, RESULTLabel150(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel152(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_continuebreak.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 44
lista: 
{LABEL, null, null, Result: BeginMethod pruContinue}

{METHODDECL, Metodo{ name=pruContinue, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
{UNARYMINUS(-expr), 1, null, Result: VarLocation{name=UNARYMINUSLabel2, type=int, expr=-1, size=0}}
{ASSIGN(=), -1, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{ASSIGN(=), 23, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{ASSIGN(=), 23, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
{GEQ(>=), 0.0, 0, Result: VarLocation{name=GEQLabel7, type=boolean, expr=0.0>=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel9}
{CMP, VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=GEQLabel7, type=boolean, expr=0.0>=0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel10}
{MINUS(-), 0.0, 1, Result: VarLocation{name=MINUSLabel13, type=float, expr=0.0-1, size=0}}
{ASSIGN(=), 0.0-1, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
{LE(<), 0.0, 0, Result: VarLocation{name=LELabel16, type=boolean, expr=0.0<0, size=0}}
{CMP, VarLocation{name=LELabel16, type=boolean, expr=0.0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel17}
{NEQ(!=), 0.0, 0, Result: VarLocation{name=NEQLabel21, type=boolean, expr=0.0!=0, size=0}}
{CMP, VarLocation{name=NEQLabel21, type=boolean, expr=0.0!=0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel22}
{MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel26, type=float, expr=0.0*0.0, size=0}}
{MULTIPLY(*), 0.0*0.0, 0, Result: VarLocation{name=MULTIPLYLabel28, type=float, expr=0.0*0.0*0, size=0}}
{ASSIGN(=), 0.0*0.0*0, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel23}
{LABEL, null, null, Result: elseCondLabel22}
{LABEL, null, null, Result: endIfLabel23}
{JMP, null, null, Result: BeginWhileLabel9}
{JMP, null, null, Result: endIfLabel18}
{LABEL, null, null, Result: elseCondLabel17}
{UNARYMINUS(-expr), 1000.2343, null, Result: VarLocation{name=UNARYMINUSLabel30, type=float, expr=-1000.2343, size=0}}
{PLUS(+), -1000.2343, 6752, Result: VarLocation{name=PLUSLabel32, type=float, expr=-1000.2343+6752, size=0}}
{ASSIGN(=), -1000.2343+6752, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{JMP, null, null, Result: EndWhileLabel10}
{LABEL, null, null, Result: endIfLabel18}
{JMP, null, null, Result: BeginWhileLabel9}
{LABEL, null, null, Result: EndWhileLabel10}
{UNARYMINUS(-expr), 2, null, Result: VarLocation{name=UNARYMINUSLabel34, type=int, expr=-2, size=0}}
{MULTIPLY(*), -2, 0.0, Result: VarLocation{name=MULTIPLYLabel36, type=float, expr=-2*0.0, size=0}}
{RETURN, null, null, Result: -2*0.0}
{LABEL, null, null, Result: EndMethod pruContinue}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [3.0, 2]}
{METHODCALL, pruContinue, 2, Result: RESULTLabel39}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=pruContinue, args=[3.0, 2]}]}, null, Result: EXTERNINVKLabel41}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruContinue}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruContinue, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 1, null, Result: VarLocation{name=UNARYMINUSLabel2, type=int, expr=-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), -1, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 23, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 23, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {GEQ(>=), 0.0, 0, Result: VarLocation{name=GEQLabel7, type=boolean, expr=0.0>=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel9}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=GEQLabel7, type=boolean, expr=0.0>=0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel10}
finalizado.

procesando : . . . {MINUS(-), 0.0, 1, Result: VarLocation{name=MINUSLabel13, type=float, expr=0.0-1, size=0}}
{SUB1} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 0.0-1, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0.0, 0, Result: VarLocation{name=LELabel16, type=boolean, expr=0.0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel16, type=boolean, expr=0.0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel17}
finalizado.

procesando : . . . {NEQ(!=), 0.0, 0, Result: VarLocation{name=NEQLabel21, type=boolean, expr=0.0!=0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=NEQLabel21, type=boolean, expr=0.0!=0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel22}
finalizado.

procesando : . . . {MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel26, type=float, expr=0.0*0.0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {MULTIPLY(*), 0.0*0.0, 0, Result: VarLocation{name=MULTIPLYLabel28, type=float, expr=0.0*0.0*0, size=0}}
{IMUL1}CASO BinOpExpr entre float y float pendiente
finalizado.

procesando : . . . {ASSIGN(=), 0.0*0.0*0, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel23}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel22}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel23}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel9}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel18}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel17}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 1000.2343, null, Result: VarLocation{name=UNARYMINUSLabel30, type=float, expr=-1000.2343, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {PLUS(+), -1000.2343, 6752, Result: VarLocation{name=PLUSLabel32, type=float, expr=-1000.2343+6752, size=0}}
{ADD1}CASO UnaryOpExpr de float pendiente
finalizado.

procesando : . . . {ASSIGN(=), -1000.2343+6752, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: EndWhileLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel18}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel9}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel10}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 2, null, Result: VarLocation{name=UNARYMINUSLabel34, type=int, expr=-2, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), -2, 0.0, Result: VarLocation{name=MULTIPLYLabel36, type=float, expr=-2*0.0, size=0}}

Result = -2
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: -2*0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruContinue}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [3.0, 2]}
index: 1 tamaño: 2

Result = 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, pruContinue, 2, Result: RESULTLabel39}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=pruContinue, args=[3.0, 2]}]}, null, Result: EXTERNINVKLabel41}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	pruContinue
    .type	pruContinue, @function 
pruContinue: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    movl	$1, %eax 
	   negl	%eax 
    movl	%eax, -24(%rbp) 

    mov -1(%rbp), %eax
    mov -16(%rbp), %eax

    mov 23(%rbp), %eax
    mov -28(%rbp), %eax

    mov 23(%rbp), %eax
    mov -36(%rbp), %eax

    movl	$0.0, %eax
    cmpl	$0, %eax
    setge %al
    movzbl %al, %eax
    movl	%eax, -52(%rbp)

.BeginWhileLabel9

    mov true(%rbp), %eax
    cmp -56(%rbp), %eax

    jne EndWhileLabel10

    mov $1, %edx 
    mov %edx,-72%(ebp) 

    mov 0.0-1(%rbp), %eax
    mov -60(%rbp), %eax

    movl	$0.0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -84(%rbp)

    mov true(%rbp), %eax
    cmp -84(%rbp), %eax

    jne elseCondLabel17

    movl	$0.0, %eax
    cmpl	$0, %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -96(%rbp)

    mov true(%rbp), %eax
    cmp -96(%rbp), %eax

    jne elseCondLabel22

    mov %eax,-112%(ebp) 

    mov $0, %edx 
    mov %eax,-120%(ebp) 

    mov 0.0*0.0*0(%rbp), %eax
    mov -100(%rbp), %eax

    jmp endIfLabel23

.elseCondLabel22

.endIfLabel23

    jmp BeginWhileLabel9

    jmp endIfLabel18

.elseCondLabel17


    mov $6752, %edx 
    mov %edx,-140%(ebp) 

    mov -1000.2343+6752(%rbp), %eax
    mov -124(%rbp), %eax

    jmp EndWhileLabel10

.endIfLabel18

    jmp BeginWhileLabel9

.EndWhileLabel10

    movl	$2, %eax 
	   negl	%eax 
    movl	%eax, -148(%rbp) 

    mov $-2, %eax 
    mov %eax,-156%(ebp) 

    mov -2*0.0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $2 , 0(%esp)
    call pruContinue
    movl %eax, RESULTLabel39(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel41(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_expresiones01.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 44
lista: 
{LABEL, null, null, Result: BeginMethod prueba}

{METHODDECL, Metodo{ name=prueba, return_not_void=true, typeReturn=float, parameters [Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 50, null, Result: VarLocation{name=g, type=int, expr=null, size=0}}
{GE(>), 0, 0, Result: VarLocation{name=GELabel4, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel4, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel5}
{ASSIGN(=), 4, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{CEQ(==), 0, 4, Result: VarLocation{name=CEQLabel10, type=boolean, expr=0==4, size=0}}
{CMP, VarLocation{name=CEQLabel10, type=boolean, expr=0==4, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel11}
{LE(<), 0, 4, Result: VarLocation{name=LELabel15, type=boolean, expr=0<4, size=0}}
{LABEL, null, null, Result: BeginWhileLabel17}
{CMP, VarLocation{name=factorLabel16, type=boolean, expr=VarLocation{name=LELabel15, type=boolean, expr=0<4, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel18}
{GE(>), 0, 4, Result: VarLocation{name=GELabel21, type=boolean, expr=0>4, size=0}}
{LABEL, null, null, Result: BeginWhileLabel23}
{CMP, VarLocation{name=factorLabel22, type=boolean, expr=VarLocation{name=GELabel21, type=boolean, expr=0>4, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel24}
{MINUS(-), 0, 1, Result: VarLocation{name=MINUSLabel27, type=int, expr=0-1, size=0}}
{ASSIGN(=), 0-1, null, Result: VarLocation{name=g, type=int, expr=null, size=0}}
{MULTIPLY(*), 0, 2, Result: VarLocation{name=MULTIPLYLabel30, type=int, expr=0*2, size=0}}
{ASSIGN(=), 0*2, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel23}
{LABEL, null, null, Result: EndWhileLabel24}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel33, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{DIVIDE(/), 0.0, 2, Result: VarLocation{name=DIVIDELabel36, type=float, expr=VarLocation{name=factorLabel34, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel35, type=int, expr=2, size=0}, size=0}}
{ASSIGN(=), VarLocation{name=factorLabel34, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel35, type=int, expr=2, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel17}
{LABEL, null, null, Result: EndWhileLabel18}
{JMP, null, null, Result: endIfLabel12}
{LABEL, null, null, Result: elseCondLabel11}
{LABEL, null, null, Result: endIfLabel12}
{JMP, null, null, Result: endIfLabel6}
{LABEL, null, null, Result: elseCondLabel5}
{LABEL, null, null, Result: endIfLabel6}
{RETURN, null, null, Result: 0.0}
{LABEL, null, null, Result: EndMethod prueba}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [6]}
{METHODCALL, prueba, 1, Result: RESULTLabel39}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=prueba, args=[6]}]}, null, Result: EXTERNINVKLabel41}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod prueba}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=prueba, return_not_void=true, typeReturn=float, parameters [Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 50, null, Result: VarLocation{name=g, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel4, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel4, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel5}
finalizado.

procesando : . . . {ASSIGN(=), 4, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 4, Result: VarLocation{name=CEQLabel10, type=boolean, expr=0==4, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel10, type=boolean, expr=0==4, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel11}
finalizado.

procesando : . . . {LE(<), 0, 4, Result: VarLocation{name=LELabel15, type=boolean, expr=0<4, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel17}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel16, type=boolean, expr=VarLocation{name=LELabel15, type=boolean, expr=0<4, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel18}
finalizado.

procesando : . . . {GE(>), 0, 4, Result: VarLocation{name=GELabel21, type=boolean, expr=0>4, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel23}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel22, type=boolean, expr=VarLocation{name=GELabel21, type=boolean, expr=0>4, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel24}
finalizado.

procesando : . . . {MINUS(-), 0, 1, Result: VarLocation{name=MINUSLabel27, type=int, expr=0-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0-1, null, Result: VarLocation{name=g, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), 0, 2, Result: VarLocation{name=MULTIPLYLabel30, type=int, expr=0*2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0*2, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel23}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel24}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel33, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), 0.0, 2, Result: VarLocation{name=DIVIDELabel36, type=float, expr=VarLocation{name=factorLabel34, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel35, type=int, expr=2, size=0}, size=0}}
{DIV1} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=factorLabel34, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel35, type=int, expr=2, size=0}, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel17}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel18}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel12}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel11}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel12}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel6}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel6}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod prueba}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6]}
index: 0 tamaño: 1

Result = 6
finalizado.

procesando : . . . {METHODCALL, prueba, 1, Result: RESULTLabel39}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=prueba, args=[6]}]}, null, Result: EXTERNINVKLabel41}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	prueba
    .type	prueba, @function 
prueba: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 50(%rbp), %eax
    mov -16(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -32(%rbp)

    mov true(%rbp), %eax
    cmp -32(%rbp), %eax

    jne elseCondLabel5

    mov 4(%rbp), %eax
    mov -36(%rbp), %eax

    movl	$0, %eax
    cmpl	$4, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -52(%rbp)

    mov true(%rbp), %eax
    cmp -52(%rbp), %eax

    jne elseCondLabel11

    movl	$0, %eax
    cmpl	$4, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -64(%rbp)

.BeginWhileLabel17

    mov true(%rbp), %eax
    cmp -68(%rbp), %eax

    jne EndWhileLabel18

    movl	$0, %eax
    cmpl	$4, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -80(%rbp)

.BeginWhileLabel23

    mov true(%rbp), %eax
    cmp -84(%rbp), %eax

    jne EndWhileLabel24

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-100%(ebp) 

    mov 0-1(%rbp), %eax
    mov -88(%rbp), %eax

    mov $0, %eax 
    mov $2, %edx 
    mov %eax,-116%(ebp) 

    mov 0*2(%rbp), %eax
    mov -104(%rbp), %eax

    jmp BeginWhileLabel23

.EndWhileLabel24

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-132%(ebp) 

    mov 0+1(%rbp), %eax
    mov -120(%rbp), %eax

    mov $2, %ecx 
    mov %ecx,-148%(ebp) 

    mov VarLocation{name=factorLabel34, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel35, type=int, expr=2, size=0}(%rbp), %eax
    mov -136(%rbp), %eax

    jmp BeginWhileLabel17

.EndWhileLabel18

    jmp endIfLabel12

.elseCondLabel11

.endIfLabel12

    jmp endIfLabel6

.elseCondLabel5

.endIfLabel6

    mov 0.0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $6 , (%esp)
    call prueba
    movl %eax, RESULTLabel39(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel41(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_expresiones02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 27
lista: 
{LABEL, null, null, Result: BeginMethod prueba}

{METHODDECL, Metodo{ name=prueba, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=p, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 4, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{ASSIGN(=), 5, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
{MULTIPLY(*), 0, 0, Result: VarLocation{name=MULTIPLYLabel5, type=int, expr=0*0, size=0}}
{ASSIGN(=), 0*0, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{PLUS(+), 0, 0, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+0, size=0}}
{ASSIGN(=), 0+0, null, Result: VarLocation{name=p, type=int, expr=null, size=0}}
{ASSIGN(=), 3.14, null, Result: VarLocation{name=pi, type=float, expr=null, size=0}}
{MULTIPLY(*), 2, 0.0, Result: VarLocation{name=MULTIPLYLabel12, type=float, expr=2*0.0, size=0}}
{ASSIGN(=), 2*0.0, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{DIVIDE(/), 0, 0.0, Result: VarLocation{name=DIVIDELabel15, type=float, expr=VarLocation{name=factorLabel13, type=int, expr=0, size=0}/VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, size=0}}
{GE(>), VarLocation{name=DIVIDELabel15, type=float, expr=VarLocation{name=factorLabel13, type=int, expr=0, size=0}/VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, size=0}, 5, Result: VarLocation{name=GELabel18, type=boolean, expr=VarLocation{name=DIVIDELabel15, type=float, expr=VarLocation{name=factorLabel13, type=int, expr=0, size=0}/VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, size=0}>5, size=0}}
{CMP, VarLocation{name=GELabel18, type=boolean, expr=VarLocation{name=DIVIDELabel15, type=float, expr=VarLocation{name=factorLabel13, type=int, expr=0, size=0}/VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, size=0}>5, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel19}
{RETURN, null, null, Result: 1}
{JMP, null, null, Result: endIfLabel20}
{LABEL, null, null, Result: elseCondLabel19}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: endIfLabel20}
{LABEL, null, null, Result: EndMethod prueba}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [6]}
{METHODCALL, prueba, 1, Result: RESULTLabel24}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=prueba, args=[6]}]}, null, Result: EXTERNINVKLabel26}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod prueba}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=prueba, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=p, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 4, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 5, null, Result: VarLocation{name=c, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), 0, 0, Result: VarLocation{name=MULTIPLYLabel5, type=int, expr=0*0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0*0, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), 0, 0, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+0, null, Result: VarLocation{name=p, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 3.14, null, Result: VarLocation{name=pi, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), 2, 0.0, Result: VarLocation{name=MULTIPLYLabel12, type=float, expr=2*0.0, size=0}}
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 2*0.0, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {DIVIDE(/), 0, 0.0, Result: VarLocation{name=DIVIDELabel15, type=float, expr=VarLocation{name=factorLabel13, type=int, expr=0, size=0}/VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, size=0}}
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {GE(>), VarLocation{name=DIVIDELabel15, type=float, expr=VarLocation{name=factorLabel13, type=int, expr=0, size=0}/VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, size=0}, 5, Result: VarLocation{name=GELabel18, type=boolean, expr=VarLocation{name=DIVIDELabel15, type=float, expr=VarLocation{name=factorLabel13, type=int, expr=0, size=0}/VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, size=0}>5, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel18, type=boolean, expr=VarLocation{name=DIVIDELabel15, type=float, expr=VarLocation{name=factorLabel13, type=int, expr=0, size=0}/VarLocation{name=factorLabel14, type=float, expr=0.0, size=0}, size=0}>5, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel19}
finalizado.

procesando : . . . {RETURN, null, null, Result: 1}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel20}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel19}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel20}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod prueba}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6]}
index: 0 tamaño: 1

Result = 6
finalizado.

procesando : . . . {METHODCALL, prueba, 1, Result: RESULTLabel24}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=prueba, args=[6]}]}, null, Result: EXTERNINVKLabel26}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	prueba
    .type	prueba, @function 
prueba: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 4(%rbp), %eax
    mov -20(%rbp), %eax

    mov 5(%rbp), %eax
    mov -28(%rbp), %eax

    mov $0, %eax 
    mov $0, %edx 
    mov %eax,-48%(ebp) 

    mov 0*0(%rbp), %eax
    mov -36(%rbp), %eax

    mov $0, %eax 
    mov $0, %edx 
    mov %edx,-64%(ebp) 

    mov 0+0(%rbp), %eax
    mov -52(%rbp), %eax

    mov 3.14(%rbp), %eax
    mov -72(%rbp), %eax

    mov $2, %eax 
    mov %eax,-92%(ebp) 

    mov 2*0.0(%rbp), %eax
    mov -80(%rbp), %eax

    mov $0, %eax 
    mov %ecx,-104%(ebp) 

    movl	-104(%rbp), %eax
    cmpl	$5, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -116(%rbp)

    mov true(%rbp), %eax
    cmp -116(%rbp), %eax

    jne elseCondLabel19

    mov 1(%rbp), %eax

    jmp endIfLabel20

.elseCondLabel19

    mov 0(%rbp), %eax

.endIfLabel20

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $6 , (%esp)
    call prueba
    movl %eax, RESULTLabel24(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel26(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_float01.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 46
lista: 
{LABEL, null, null, Result: BeginMethod potencia}

{METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), false, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 1.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{LE(<), 0, 0, Result: VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel7}
{UNARYMINUS(-expr), 0, null, Result: VarLocation{name=UNARYMINUSLabel10, type=int, expr=-0, size=0}}
{ASSIGN(=), -0, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{NON(!), false, null, Result: VarLocation{name=NONLabel12, type=boolean, expr=!false, size=0}}
{ASSIGN(=), !false, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel8}
{LABEL, null, null, Result: elseCondLabel7}
{LABEL, null, null, Result: endIfLabel8}
{LEQ(<=), 0, 0, Result: VarLocation{name=LEQLabel15, type=boolean, expr=0<=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel17}
{CMP, VarLocation{name=factorLabel16, type=boolean, expr=VarLocation{name=LEQLabel15, type=boolean, expr=0<=0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel18}
{MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel21, type=float, expr=0.0*0.0, size=0}}
{ASSIGN(=), 0.0*0.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel24, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel17}
{LABEL, null, null, Result: EndWhileLabel18}
{NON(!), false, null, Result: VarLocation{name=NONLabel26, type=boolean, expr=!false, size=0}}
{NON(!), VarLocation{name=NONLabel26, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=NONLabel28, type=boolean, expr=!VarLocation{name=NONLabel26, type=boolean, expr=!false, size=0}, size=0}}
{CMP, VarLocation{name=NONLabel28, type=boolean, expr=!VarLocation{name=NONLabel26, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel29}
{DIVIDE(/), 1.0, 0.0, Result: VarLocation{name=DIVIDELabel33, type=float, expr=VarLocation{name=factorLabel31, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel32, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel31, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel32, type=float, expr=0.0, size=0}}
{JMP, null, null, Result: endIfLabel30}
{LABEL, null, null, Result: elseCondLabel29}
{RETURN, null, null, Result: 0.0}
{LABEL, null, null, Result: endIfLabel30}
{UNARYMINUS(-expr), 100.1, null, Result: VarLocation{name=UNARYMINUSLabel36, type=float, expr=-100.1, size=0}}
{RETURN, null, null, Result: -100.1}
{LABEL, null, null, Result: EndMethod potencia}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), 8.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 2]}
{METHODCALL, potencia, 2, Result: RESULTLabel40}
{ASSIGN(=), MethodCallExpr{name=potencia, args=[0.0, 2]}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, 0.0]}, null, Result: EXTERNINVKLabel43}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod potencia}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), false, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 1.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel7}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 0, null, Result: VarLocation{name=UNARYMINUSLabel10, type=int, expr=-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), -0, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {NON(!), false, null, Result: VarLocation{name=NONLabel12, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), !false, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel8}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel8}
finalizado.

procesando : . . . {LEQ(<=), 0, 0, Result: VarLocation{name=LEQLabel15, type=boolean, expr=0<=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel17}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel16, type=boolean, expr=VarLocation{name=LEQLabel15, type=boolean, expr=0<=0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel18}
finalizado.

procesando : . . . {MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel21, type=float, expr=0.0*0.0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 0.0*0.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel24, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel17}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel18}
finalizado.

procesando : . . . {NON(!), false, null, Result: VarLocation{name=NONLabel26, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=NONLabel26, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=NONLabel28, type=boolean, expr=!VarLocation{name=NONLabel26, type=boolean, expr=!false, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=NONLabel28, type=boolean, expr=!VarLocation{name=NONLabel26, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel29}
finalizado.

procesando : . . . {DIVIDE(/), 1.0, 0.0, Result: VarLocation{name=DIVIDELabel33, type=float, expr=VarLocation{name=factorLabel31, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel32, type=float, expr=0.0, size=0}, size=0}}
{DIV1} CASO class ir.ast.FloatLiteral PENDIENTE
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel31, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel32, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel30}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel29}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel30}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 100.1, null, Result: VarLocation{name=UNARYMINUSLabel36, type=float, expr=-100.1, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {RETURN, null, null, Result: -100.1}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod potencia}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 8.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 2]}
index: 1 tamaño: 2

Result = 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, potencia, 2, Result: RESULTLabel40}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=potencia, args=[0.0, 2]}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, 0.0]}, null, Result: EXTERNINVKLabel43}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	potencia
    .type	potencia, @function 
potencia: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov false(%rbp), %eax
    mov -16(%rbp), %eax

    mov 1(%rbp), %eax
    mov -24(%rbp), %eax

    mov 1.0(%rbp), %eax
    mov -32(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -48(%rbp)

    mov true(%rbp), %eax
    cmp -48(%rbp), %eax

    jne elseCondLabel7

    movl	$0, %eax 
	   negl	%eax 
    movl	%eax, -60(%rbp) 

    mov -0(%rbp), %eax
    mov -52(%rbp), %eax

    cmp $0, 0(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -72(%rbp) 

    mov !false(%rbp), %eax
    mov -64(%rbp), %eax

    jmp endIfLabel8

.elseCondLabel7

.endIfLabel8

    movl	$0, %eax
    cmpl	$0, %eax
    setle %al
    movzbl %al, %eax
    movl	%eax, -84(%rbp)

.BeginWhileLabel17

    mov true(%rbp), %eax
    cmp -88(%rbp), %eax

    jne EndWhileLabel18

    mov %eax,-104%(ebp) 

    mov 0.0*0.0(%rbp), %eax
    mov -92(%rbp), %eax

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-120%(ebp) 

    mov 0+1(%rbp), %eax
    mov -108(%rbp), %eax

    jmp BeginWhileLabel17

.EndWhileLabel18

    cmp $0, 0(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -128(%rbp) 

    cmp $0, -128(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -136(%rbp) 

    mov true(%rbp), %eax
    cmp -136(%rbp), %eax

    jne elseCondLabel29

    mov %ecx,-148%(ebp) 

    mov VarLocation{name=factorLabel31, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel32, type=float, expr=0.0, size=0}(%rbp), %eax

    jmp endIfLabel30

.elseCondLabel29

    mov 0.0(%rbp), %eax

.endIfLabel30


    mov -100.1(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 8.0(%rbp), %eax
    mov -12(%rbp), %eax

PARAM
    movl $2 , 0(%esp)
    call potencia
    movl %eax, RESULTLabel40(%rbp) 

    mov MethodCallExpr{name=potencia, args=[0.0, 2]}(%rbp), %eax
    mov -20(%rbp), %eax

    call "printf"
    movl %eax, EXTERNINVKLabel43(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_float02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 32
lista: 
{LABEL, null, null, Result: BeginMethod sumatoria}

{METHODDECL, Metodo{ name=sumatoria, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 0.0, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{ASSIGN(=), 0.0, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
{GE(>), 0.0, 0, Result: VarLocation{name=GELabel5, type=boolean, expr=0.0>0, size=0}}
{GE(>), 0.0, 0, Result: VarLocation{name=GELabel8, type=boolean, expr=0.0>0, size=0}}
{OR(||), 0.0>0, 0.0>0, Result: VarLocation{name=DISYUNCIONLabel9, type=boolean, expr=0.0>0||0.0>0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel11}
{CMP, VarLocation{name=factorLabel10, type=boolean, expr=VarLocation{name=DISYUNCIONLabel9, type=boolean, expr=0.0>0||0.0>0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel12}
{GE(>), 0.0, 0, Result: VarLocation{name=GELabel15, type=boolean, expr=0.0>0, size=0}}
{CMP, VarLocation{name=GELabel15, type=boolean, expr=0.0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel16}
{PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel20, type=float, expr=0.0+0.0, size=0}}
{ASSIGN(=), 0.0+0.0, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel17}
{LABEL, null, null, Result: elseCondLabel16}
{LABEL, null, null, Result: endIfLabel17}
{ASSIGN(=), 1.0, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel11}
{LABEL, null, null, Result: EndWhileLabel12}
{ASSIGN(=), 0.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{RETURN, null, null, Result: 0.0}
{LABEL, null, null, Result: EndMethod sumatoria}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), 8.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0]}
{METHODCALL, sumatoria, 1, Result: RESULTLabel26}
{ASSIGN(=), MethodCallExpr{name=sumatoria, args=[0.0]}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, 0.0]}, null, Result: EXTERNINVKLabel29}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod sumatoria}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=sumatoria, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 0.0, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0.0, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {GE(>), 0.0, 0, Result: VarLocation{name=GELabel5, type=boolean, expr=0.0>0, size=0}}
finalizado.

procesando : . . . {GE(>), 0.0, 0, Result: VarLocation{name=GELabel8, type=boolean, expr=0.0>0, size=0}}
finalizado.

procesando : . . . {OR(||), 0.0>0, 0.0>0, Result: VarLocation{name=DISYUNCIONLabel9, type=boolean, expr=0.0>0||0.0>0, size=0}}
{Or}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.BinOpExpr PENDIENTE
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel11}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel10, type=boolean, expr=VarLocation{name=DISYUNCIONLabel9, type=boolean, expr=0.0>0||0.0>0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel12}
finalizado.

procesando : . . . {GE(>), 0.0, 0, Result: VarLocation{name=GELabel15, type=boolean, expr=0.0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel15, type=boolean, expr=0.0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel16}
finalizado.

procesando : . . . {PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel20, type=float, expr=0.0+0.0, size=0}}
{ADD1} CASO class ir.ast.FloatLiteral PENDIENTE
{ADD2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 0.0+0.0, null, Result: VarLocation{name=total, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel17}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel16}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel17}
finalizado.

procesando : . . . {ASSIGN(=), 1.0, null, Result: VarLocation{name=i, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel11}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel12}
finalizado.

procesando : . . . {ASSIGN(=), 0.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod sumatoria}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 8.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0]}
index: 0 tamaño: 1
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, sumatoria, 1, Result: RESULTLabel26}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=sumatoria, args=[0.0]}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, 0.0]}, null, Result: EXTERNINVKLabel29}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	sumatoria
    .type	sumatoria, @function 
sumatoria: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 0.0(%rbp), %eax
    mov -16(%rbp), %eax

    mov 0.0(%rbp), %eax
    mov -24(%rbp), %eax

    movl	$0.0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -40(%rbp)

    movl	$0.0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -52(%rbp)


.BeginWhileLabel11

    mov true(%rbp), %eax
    cmp -60(%rbp), %eax

    jne EndWhileLabel12

    movl	$0.0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -72(%rbp)

    mov true(%rbp), %eax
    cmp -72(%rbp), %eax

    jne elseCondLabel16

    mov %edx,-88%(ebp) 

    mov 0.0+0.0(%rbp), %eax
    mov -76(%rbp), %eax

    jmp endIfLabel17

.elseCondLabel16

.endIfLabel17

    mov 1.0(%rbp), %eax
    mov -92(%rbp), %eax

    jmp BeginWhileLabel11

.EndWhileLabel12

    mov 0.0(%rbp), %eax
    mov -100(%rbp), %eax

    mov 0.0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 8.0(%rbp), %eax
    mov -12(%rbp), %eax

PARAM

    call sumatoria
    movl %eax, RESULTLabel26(%rbp) 

    mov MethodCallExpr{name=sumatoria, args=[0.0]}(%rbp), %eax
    mov -20(%rbp), %eax

    call "printf"
    movl %eax, EXTERNINVKLabel29(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_float03.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 151
lista: 
{null, float, w, Result: 0}
{null, float, m, Result: 0}
{null, float, res, Result: 0}
{LABEL, null, null, Result: BeginMethod potencia}

{METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), false, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 1.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{LE(<), 0, 0, Result: VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel7}
{UNARYMINUS(-expr), 0, null, Result: VarLocation{name=UNARYMINUSLabel10, type=int, expr=-0, size=0}}
{ASSIGN(=), -0, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{ASSIGN(=), true, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel8}
{LABEL, null, null, Result: elseCondLabel7}
{LABEL, null, null, Result: endIfLabel8}
{LE(<), 0, 0, Result: VarLocation{name=LELabel14, type=boolean, expr=0<0, size=0}}
{CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel17, type=boolean, expr=0==0, size=0}}
{OR(||), 0<0, 0==0, Result: VarLocation{name=DISYUNCIONLabel18, type=boolean, expr=0<0||0==0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel20}
{CMP, VarLocation{name=factorLabel19, type=boolean, expr=VarLocation{name=DISYUNCIONLabel18, type=boolean, expr=0<0||0==0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel21}
{MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel24, type=float, expr=0.0*0.0, size=0}}
{MULTIPLY(*), 0.0*0.0, 2, Result: VarLocation{name=MULTIPLYLabel26, type=float, expr=0.0*0.0*2, size=0}}
{ASSIGN(=), 0.0*0.0*2, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel29, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel20}
{LABEL, null, null, Result: EndWhileLabel21}
{NON(!), false, null, Result: VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}}
{NON(!), VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=NONLabel33, type=boolean, expr=!VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, size=0}}
{CMP, VarLocation{name=NONLabel33, type=boolean, expr=!VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel34}
{DIVIDE(/), 1.0, 0.0, Result: VarLocation{name=DIVIDELabel38, type=float, expr=VarLocation{name=factorLabel36, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel37, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel36, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel37, type=float, expr=0.0, size=0}}
{JMP, null, null, Result: endIfLabel35}
{LABEL, null, null, Result: elseCondLabel34}
{RETURN, null, null, Result: 0.0}
{LABEL, null, null, Result: endIfLabel35}
{UNARYMINUS(-expr), 100.1, null, Result: VarLocation{name=UNARYMINUSLabel41, type=float, expr=-100.1, size=0}}
{RETURN, null, null, Result: -100.1}
{LABEL, null, null, Result: EndMethod potencia}
{LABEL, null, null, Result: BeginMethod multiples}

{METHODDECL, Metodo{ name=multiples, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=float, name=y, value=null, size=0}]}, null, Result: null}
{UNARYMINUS(-expr), 2.0, null, Result: VarLocation{name=UNARYMINUSLabel43, type=float, expr=-2.0, size=0}}
{ASSIGN(=), -2.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), 2, null, Result: VarLocation{name=UNARYMINUSLabel45, type=int, expr=-2, size=0}}
{ASSIGN(=), -2, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
{UNARYMINUS(-expr), 3.0, null, Result: VarLocation{name=UNARYMINUSLabel47, type=float, expr=-3.0, size=0}}
{ASSIGN(=), -3.0, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), 3.0, null, Result: VarLocation{name=UNARYMINUSLabel49, type=float, expr=-3.0, size=0}}
{ASSIGN(=), -3.0, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
{MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel52, type=float, expr=0.0*0.0, size=0}}
{MINUS(-), 0.0*0.0, 0.0, Result: VarLocation{name=MINUSLabel54, type=float, expr=0.0*0.0-0.0, size=0}}
{ASSIGN(=), 0.0*0.0-0.0, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=k, type=int, expr=null, size=0}}
{ASSIGN(=), 5, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel61, type=boolean, expr=0.0>0.0, size=0}}
{CMP, VarLocation{name=GELabel61, type=boolean, expr=0.0>0.0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel62}
{LE(<), 0.0, 0.0, Result: VarLocation{name=LELabel66, type=boolean, expr=0.0<0.0, size=0}}
{CMP, VarLocation{name=LELabel66, type=boolean, expr=0.0<0.0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel67}
{ASSIGN(=), 0.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel68}
{LABEL, null, null, Result: elseCondLabel67}
{ASSIGN(=), 0.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel68}
{JMP, null, null, Result: endIfLabel63}
{LABEL, null, null, Result: elseCondLabel62}
{LEQ(<=), 0, 0, Result: VarLocation{name=LEQLabel73, type=boolean, expr=0<=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel75}
{CMP, VarLocation{name=factorLabel74, type=boolean, expr=VarLocation{name=LEQLabel73, type=boolean, expr=0<=0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel76}
{LEQ(<=), 0, 0, Result: VarLocation{name=LEQLabel79, type=boolean, expr=0<=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel80}
{CMP, VarLocation{name=LEQLabel79, type=boolean, expr=0<=0, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel81}
{LE(<), 0, 0, Result: VarLocation{name=LELabel84, type=boolean, expr=0<0, size=0}}
{CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel87, type=boolean, expr=0==0, size=0}}
{OR(||), 0<0, 0==0, Result: VarLocation{name=DISYUNCIONLabel88, type=boolean, expr=0<0||0==0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel92}
{CMP, VarLocation{name=factorLabel91, type=boolean, expr=VarLocation{name=factorLabel90, type=boolean, expr=VarLocation{name=factorLabel89, type=boolean, expr=VarLocation{name=DISYUNCIONLabel88, type=boolean, expr=0<0||0==0, size=0}, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel93}
{CEQ(==), 0, 3, Result: VarLocation{name=CEQLabel96, type=boolean, expr=0==3, size=0}}
{CMP, VarLocation{name=CEQLabel96, type=boolean, expr=0==3, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel97}
{PLUS(+), 0.0, 2.0, Result: VarLocation{name=PLUSLabel101, type=float, expr=0.0+2.0, size=0}}
{ASSIGN(=), 0.0+2.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel98}
{LABEL, null, null, Result: elseCondLabel97}
{DIVIDE(/), 10.0, 2.0, Result: VarLocation{name=DIVIDELabel105, type=float, expr=VarLocation{name=factorLabel103, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel104, type=float, expr=2.0, size=0}, size=0}}
{MINUS(-), 0.0, VarLocation{name=DIVIDELabel105, type=float, expr=VarLocation{name=factorLabel103, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel104, type=float, expr=2.0, size=0}, size=0}, Result: VarLocation{name=MINUSLabel107, type=float, expr=0.0-VarLocation{name=DIVIDELabel105, type=float, expr=VarLocation{name=factorLabel103, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel104, type=float, expr=2.0, size=0}, size=0}, size=0}}
{ASSIGN(=), 0.0-VarLocation{name=DIVIDELabel105, type=float, expr=VarLocation{name=factorLabel103, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel104, type=float, expr=2.0, size=0}, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel98}
{ASSIGN(=), 1, null, Result: VarLocation{name=k, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel92}
{LABEL, null, null, Result: EndWhileLabel93}
{LE(<), 0.0, 0.0, Result: VarLocation{name=LELabel111, type=boolean, expr=0.0<0.0, size=0}}
{LE(<), 0.0, 0.0, Result: VarLocation{name=LELabel114, type=boolean, expr=0.0<0.0, size=0}}
{AND(&&), 0.0<0.0, 0.0<0.0, Result: VarLocation{name=CONJUNCIONLabel115, type=boolean, expr=0.0<0.0&&0.0<0.0, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel115, type=boolean, expr=0.0<0.0&&0.0<0.0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel116}
{MULTIPLY(*), 4.0, 0.0, Result: VarLocation{name=MULTIPLYLabel121, type=float, expr=4.0*0.0, size=0}}
{PLUS(+), 35.0, 4.0*0.0, Result: VarLocation{name=PLUSLabel122, type=float, expr=35.0+4.0*0.0, size=0}}
{MINUS(-), 35.0+4.0*0.0, 498.0, Result: VarLocation{name=MINUSLabel124, type=float, expr=35.0+4.0*0.0-498.0, size=0}}
{ASSIGN(=), 35.0+4.0*0.0-498.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel117}
{LABEL, null, null, Result: elseCondLabel116}
{MINUS(-), 3.2, 0.0, Result: VarLocation{name=MINUSLabel127, type=float, expr=3.2-0.0, size=0}}
{MINUS(-), 3.2-0.0, 12345.356, Result: VarLocation{name=MINUSLabel129, type=float, expr=3.2-0.0-12345.356, size=0}}
{ASSIGN(=), 3.2-0.0-12345.356, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel117}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel132, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel80}
{LABEL, null, null, Result: EndWhileLabel81}
{UNARYMINUS(-expr), 0.0, null, Result: VarLocation{name=UNARYMINUSLabel135, type=float, expr=-0.0, size=0}}
{MULTIPLY(*), 0.0, -0.0, Result: VarLocation{name=MULTIPLYLabel136, type=float, expr=0.0*-0.0, size=0}}
{MULTIPLY(*), 23.0, 0.0, Result: VarLocation{name=MULTIPLYLabel139, type=float, expr=23.0*0.0, size=0}}
{PLUS(+), 0.0*-0.0, 23.0*0.0, Result: VarLocation{name=PLUSLabel140, type=float, expr=0.0*-0.0+23.0*0.0, size=0}}
{DIVIDE(/), 2.0, 4.0, Result: VarLocation{name=DIVIDELabel143, type=float, expr=VarLocation{name=factorLabel141, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel142, type=float, expr=4.0, size=0}, size=0}}
{PLUS(+), 0.0*-0.0+23.0*0.0, VarLocation{name=factorLabel141, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel142, type=float, expr=4.0, size=0}, Result: VarLocation{name=PLUSLabel144, type=float, expr=0.0*-0.0+23.0*0.0+VarLocation{name=factorLabel141, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel142, type=float, expr=4.0, size=0}, size=0}}
{ASSIGN(=), 0.0*-0.0+23.0*0.0+VarLocation{name=factorLabel141, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel142, type=float, expr=4.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel147, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel75}
{LABEL, null, null, Result: EndWhileLabel76}
{LABEL, null, null, Result: endIfLabel63}
{UNARYMINUS(-expr), 0.0, null, Result: VarLocation{name=UNARYMINUSLabel149, type=float, expr=-0.0, size=0}}
{RETURN, null, null, Result: -0.0}
{LABEL, null, null, Result: EndMethod multiples}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), 80.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), 15.0, null, Result: VarLocation{name=UNARYMINUSLabel152, type=float, expr=-15.0, size=0}}
{ASSIGN(=), -15.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{ASSIGN(=), 4.3, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), 7.6, null, Result: VarLocation{name=UNARYMINUSLabel155, type=float, expr=-7.6, size=0}}
{ASSIGN(=), -7.6, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 2]}
{METHODCALL, potencia, 2, Result: RESULTLabel158}
{ASSIGN(=), MethodCallExpr{name=potencia, args=[0.0, 2]}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{PLUS(+), 0.0, 2.0, Result: VarLocation{name=PLUSLabel163, type=float, expr=0.0+2.0, size=0}}
{PARAM, null, null, Result: [0.0, 0.0+2.0]}
{METHODCALL, multiples, 2, Result: RESULTLabel164}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, MethodCallExpr{name=multiples, args=[0.0, 0.0+2.0]}]}, null, Result: EXTERNINVKLabel166}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, float, w, Result: 0}
finalizado.

procesando : . . . {null, float, m, Result: 0}
finalizado.

procesando : . . . {null, float, res, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod potencia}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), false, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 1.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel7}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 0, null, Result: VarLocation{name=UNARYMINUSLabel10, type=int, expr=-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), -0, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), true, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel8}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel8}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel14, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel17, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {OR(||), 0<0, 0==0, Result: VarLocation{name=DISYUNCIONLabel18, type=boolean, expr=0<0||0==0, size=0}}
{Or}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.BinOpExpr PENDIENTE
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel20}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel19, type=boolean, expr=VarLocation{name=DISYUNCIONLabel18, type=boolean, expr=0<0||0==0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel21}
finalizado.

procesando : . . . {MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel24, type=float, expr=0.0*0.0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {MULTIPLY(*), 0.0*0.0, 2, Result: VarLocation{name=MULTIPLYLabel26, type=float, expr=0.0*0.0*2, size=0}}
{IMUL1}CASO BinOpExpr entre float y float pendiente
finalizado.

procesando : . . . {ASSIGN(=), 0.0*0.0*2, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel29, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel20}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel21}
finalizado.

procesando : . . . {NON(!), false, null, Result: VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=NONLabel33, type=boolean, expr=!VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=NONLabel33, type=boolean, expr=!VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel34}
finalizado.

procesando : . . . {DIVIDE(/), 1.0, 0.0, Result: VarLocation{name=DIVIDELabel38, type=float, expr=VarLocation{name=factorLabel36, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel37, type=float, expr=0.0, size=0}, size=0}}
{DIV1} CASO class ir.ast.FloatLiteral PENDIENTE
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel36, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel37, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel35}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel34}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel35}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 100.1, null, Result: VarLocation{name=UNARYMINUSLabel41, type=float, expr=-100.1, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {RETURN, null, null, Result: -100.1}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod potencia}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod multiples}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=multiples, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=float, name=y, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 2.0, null, Result: VarLocation{name=UNARYMINUSLabel43, type=float, expr=-2.0, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {ASSIGN(=), -2.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 2, null, Result: VarLocation{name=UNARYMINUSLabel45, type=int, expr=-2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), -2, null, Result: VarLocation{name=b, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 3.0, null, Result: VarLocation{name=UNARYMINUSLabel47, type=float, expr=-3.0, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {ASSIGN(=), -3.0, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 3.0, null, Result: VarLocation{name=UNARYMINUSLabel49, type=float, expr=-3.0, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {ASSIGN(=), -3.0, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel52, type=float, expr=0.0*0.0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {MINUS(-), 0.0*0.0, 0.0, Result: VarLocation{name=MINUSLabel54, type=float, expr=0.0*0.0-0.0, size=0}}
{SUB1}CASO BinOpExpr entre float y float pendiente
{SUB2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 0.0*0.0-0.0, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=k, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 5, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel61, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel61, type=boolean, expr=0.0>0.0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel62}
finalizado.

procesando : . . . {LE(<), 0.0, 0.0, Result: VarLocation{name=LELabel66, type=boolean, expr=0.0<0.0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel66, type=boolean, expr=0.0<0.0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel67}
finalizado.

procesando : . . . {ASSIGN(=), 0.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel68}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel67}
finalizado.

procesando : . . . {ASSIGN(=), 0.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel68}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel63}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel62}
finalizado.

procesando : . . . {LEQ(<=), 0, 0, Result: VarLocation{name=LEQLabel73, type=boolean, expr=0<=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel75}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel74, type=boolean, expr=VarLocation{name=LEQLabel73, type=boolean, expr=0<=0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel76}
finalizado.

procesando : . . . {LEQ(<=), 0, 0, Result: VarLocation{name=LEQLabel79, type=boolean, expr=0<=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel80}
finalizado.

procesando : . . . {CMP, VarLocation{name=LEQLabel79, type=boolean, expr=0<=0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel81}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel84, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel87, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {OR(||), 0<0, 0==0, Result: VarLocation{name=DISYUNCIONLabel88, type=boolean, expr=0<0||0==0, size=0}}
{Or}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.BinOpExpr PENDIENTE
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel92}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel91, type=boolean, expr=VarLocation{name=factorLabel90, type=boolean, expr=VarLocation{name=factorLabel89, type=boolean, expr=VarLocation{name=DISYUNCIONLabel88, type=boolean, expr=0<0||0==0, size=0}, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel93}
finalizado.

procesando : . . . {CEQ(==), 0, 3, Result: VarLocation{name=CEQLabel96, type=boolean, expr=0==3, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel96, type=boolean, expr=0==3, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel97}
finalizado.

procesando : . . . {PLUS(+), 0.0, 2.0, Result: VarLocation{name=PLUSLabel101, type=float, expr=0.0+2.0, size=0}}
{ADD1} CASO class ir.ast.FloatLiteral PENDIENTE
{ADD2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 0.0+2.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel98}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel97}
finalizado.

procesando : . . . {DIVIDE(/), 10.0, 2.0, Result: VarLocation{name=DIVIDELabel105, type=float, expr=VarLocation{name=factorLabel103, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel104, type=float, expr=2.0, size=0}, size=0}}
{DIV1} CASO class ir.ast.FloatLiteral PENDIENTE
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {MINUS(-), 0.0, VarLocation{name=DIVIDELabel105, type=float, expr=VarLocation{name=factorLabel103, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel104, type=float, expr=2.0, size=0}, size=0}, Result: VarLocation{name=MINUSLabel107, type=float, expr=0.0-VarLocation{name=DIVIDELabel105, type=float, expr=VarLocation{name=factorLabel103, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel104, type=float, expr=2.0, size=0}, size=0}, size=0}}
{SUB1} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 0.0-VarLocation{name=DIVIDELabel105, type=float, expr=VarLocation{name=factorLabel103, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel104, type=float, expr=2.0, size=0}, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel98}
finalizado.

procesando : . . . {ASSIGN(=), 1, null, Result: VarLocation{name=k, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel92}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel93}
finalizado.

procesando : . . . {LE(<), 0.0, 0.0, Result: VarLocation{name=LELabel111, type=boolean, expr=0.0<0.0, size=0}}
finalizado.

procesando : . . . {LE(<), 0.0, 0.0, Result: VarLocation{name=LELabel114, type=boolean, expr=0.0<0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), 0.0<0.0, 0.0<0.0, Result: VarLocation{name=CONJUNCIONLabel115, type=boolean, expr=0.0<0.0&&0.0<0.0, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.BinOpExpr PENDIENTE
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel115, type=boolean, expr=0.0<0.0&&0.0<0.0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel116}
finalizado.

procesando : . . . {MULTIPLY(*), 4.0, 0.0, Result: VarLocation{name=MULTIPLYLabel121, type=float, expr=4.0*0.0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {PLUS(+), 35.0, 4.0*0.0, Result: VarLocation{name=PLUSLabel122, type=float, expr=35.0+4.0*0.0, size=0}}
{ADD1} CASO class ir.ast.FloatLiteral PENDIENTE
{ADD2}CASO BinOpExpr entre float y float pendiente
finalizado.

procesando : . . . {MINUS(-), 35.0+4.0*0.0, 498.0, Result: VarLocation{name=MINUSLabel124, type=float, expr=35.0+4.0*0.0-498.0, size=0}}
{SUB1}CASO BinOpExpr entre float y float pendiente
{SUB2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 35.0+4.0*0.0-498.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel117}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel116}
finalizado.

procesando : . . . {MINUS(-), 3.2, 0.0, Result: VarLocation{name=MINUSLabel127, type=float, expr=3.2-0.0, size=0}}
{SUB1} CASO class ir.ast.FloatLiteral PENDIENTE
{SUB2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {MINUS(-), 3.2-0.0, 12345.356, Result: VarLocation{name=MINUSLabel129, type=float, expr=3.2-0.0-12345.356, size=0}}
{SUB1}CASO BinOpExpr entre float y float pendiente
{SUB2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 3.2-0.0-12345.356, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel117}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel132, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel80}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel81}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 0.0, null, Result: VarLocation{name=UNARYMINUSLabel135, type=float, expr=-0.0, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {MULTIPLY(*), 0.0, -0.0, Result: VarLocation{name=MULTIPLYLabel136, type=float, expr=0.0*-0.0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
{IMUL2}CASO UnaryOpExpr de float pendiente
finalizado.

procesando : . . . {MULTIPLY(*), 23.0, 0.0, Result: VarLocation{name=MULTIPLYLabel139, type=float, expr=23.0*0.0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {PLUS(+), 0.0*-0.0, 23.0*0.0, Result: VarLocation{name=PLUSLabel140, type=float, expr=0.0*-0.0+23.0*0.0, size=0}}
{ADD1}CASO BinOpExpr entre float y float pendiente
{ADD2}CASO BinOpExpr entre float y float pendiente
finalizado.

procesando : . . . {DIVIDE(/), 2.0, 4.0, Result: VarLocation{name=DIVIDELabel143, type=float, expr=VarLocation{name=factorLabel141, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel142, type=float, expr=4.0, size=0}, size=0}}
{DIV1} CASO class ir.ast.FloatLiteral PENDIENTE
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {PLUS(+), 0.0*-0.0+23.0*0.0, VarLocation{name=factorLabel141, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel142, type=float, expr=4.0, size=0}, Result: VarLocation{name=PLUSLabel144, type=float, expr=0.0*-0.0+23.0*0.0+VarLocation{name=factorLabel141, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel142, type=float, expr=4.0, size=0}, size=0}}
{ADD1}CASO BinOpExpr entre float y float pendiente
{ADD2}CASO BinOpExpr entre float y float pendiente
finalizado.

procesando : . . . {ASSIGN(=), 0.0*-0.0+23.0*0.0+VarLocation{name=factorLabel141, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel142, type=float, expr=4.0, size=0}, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel147, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel75}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel76}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel63}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 0.0, null, Result: VarLocation{name=UNARYMINUSLabel149, type=float, expr=-0.0, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {RETURN, null, null, Result: -0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod multiples}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 80.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 15.0, null, Result: VarLocation{name=UNARYMINUSLabel152, type=float, expr=-15.0, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {ASSIGN(=), -15.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 4.3, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 7.6, null, Result: VarLocation{name=UNARYMINUSLabel155, type=float, expr=-7.6, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {ASSIGN(=), -7.6, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 2]}
index: 1 tamaño: 2

Result = 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, potencia, 2, Result: RESULTLabel158}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=potencia, args=[0.0, 2]}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), 0.0, 2.0, Result: VarLocation{name=PLUSLabel163, type=float, expr=0.0+2.0, size=0}}
{ADD1} CASO class ir.ast.FloatLiteral PENDIENTE
{ADD2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0+2.0]}
index: 1 tamaño: 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, multiples, 2, Result: RESULTLabel164}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, MethodCallExpr{name=multiples, args=[0.0, 0.0+2.0]}]}, null, Result: EXTERNINVKLabel166}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.


    .comm w,4

    .comm m,4

    .comm res,4


    .globl	potencia
    .type	potencia, @function 
potencia: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov false(%rbp), %eax
    mov -16(%rbp), %eax

    mov 1(%rbp), %eax
    mov -24(%rbp), %eax

    mov 1.0(%rbp), %eax
    mov -32(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -48(%rbp)

    mov true(%rbp), %eax
    cmp -48(%rbp), %eax

    jne elseCondLabel7

    movl	$0, %eax 
	   negl	%eax 
    movl	%eax, -60(%rbp) 

    mov -0(%rbp), %eax
    mov -52(%rbp), %eax

    mov true(%rbp), %eax
    mov -64(%rbp), %eax

    jmp endIfLabel8

.elseCondLabel7

.endIfLabel8

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -80(%rbp)

    movl	$0, %eax
    cmpl	$0, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -92(%rbp)


.BeginWhileLabel20

    mov true(%rbp), %eax
    cmp -100(%rbp), %eax

    jne EndWhileLabel21

    mov %eax,-116%(ebp) 

    mov $2, %edx 
    mov %eax,-124%(ebp) 

    mov 0.0*0.0*2(%rbp), %eax
    mov -104(%rbp), %eax

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-140%(ebp) 

    mov 0+1(%rbp), %eax
    mov -128(%rbp), %eax

    jmp BeginWhileLabel20

.EndWhileLabel21

    cmp $0, 0(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -148(%rbp) 

    cmp $0, -148(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -156(%rbp) 

    mov true(%rbp), %eax
    cmp -156(%rbp), %eax

    jne elseCondLabel34

    mov %ecx,-168%(ebp) 

    mov VarLocation{name=factorLabel36, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel37, type=float, expr=0.0, size=0}(%rbp), %eax

    jmp endIfLabel35

.elseCondLabel34

    mov 0.0(%rbp), %eax

.endIfLabel35


    mov -100.1(%rbp), %eax

    leave
    ret



    .globl	multiples
    .type	multiples, @function 
multiples: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp


    mov -2.0(%rbp), %eax
    mov -44(%rbp), %eax

    movl	$2, %eax 
	   negl	%eax 
    movl	%eax, -64(%rbp) 

    mov -2(%rbp), %eax
    mov -56(%rbp), %eax


    mov -3.0(%rbp), %eax
    mov -68(%rbp), %eax


    mov -3.0(%rbp), %eax
    mov -80(%rbp), %eax

    mov %eax,-104%(ebp) 

    mov %edx,-112%(ebp) 

    mov 0.0*0.0-0.0(%rbp), %eax
    mov -92(%rbp), %eax

    mov 0(%rbp), %eax
    mov -116(%rbp), %eax

    mov 0(%rbp), %eax
    mov -124(%rbp), %eax

    mov 0(%rbp), %eax
    mov -132(%rbp), %eax

    mov 5(%rbp), %eax
    mov -140(%rbp), %eax

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -156(%rbp)

    mov true(%rbp), %eax
    cmp -156(%rbp), %eax

    jne elseCondLabel62

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -168(%rbp)

    mov true(%rbp), %eax
    cmp -168(%rbp), %eax

    jne elseCondLabel67

    mov 0.0(%rbp), %eax
    mov -172(%rbp), %eax

    jmp endIfLabel68

.elseCondLabel67

    mov 0.0(%rbp), %eax
    mov -180(%rbp), %eax

.endIfLabel68

    jmp endIfLabel63

.elseCondLabel62

    movl	$0, %eax
    cmpl	$0, %eax
    setle %al
    movzbl %al, %eax
    movl	%eax, -196(%rbp)

.BeginWhileLabel75

    mov true(%rbp), %eax
    cmp -200(%rbp), %eax

    jne EndWhileLabel76

    movl	$0, %eax
    cmpl	$0, %eax
    setle %al
    movzbl %al, %eax
    movl	%eax, -212(%rbp)

.BeginWhileLabel80

    mov true(%rbp), %eax
    cmp -212(%rbp), %eax

    jne EndWhileLabel81

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -224(%rbp)

    movl	$0, %eax
    cmpl	$0, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -236(%rbp)


.BeginWhileLabel92

    mov true(%rbp), %eax
    cmp -252(%rbp), %eax

    jne EndWhileLabel93

    movl	$0, %eax
    cmpl	$3, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -264(%rbp)

    mov true(%rbp), %eax
    cmp -264(%rbp), %eax

    jne elseCondLabel97

    mov %edx,-280%(ebp) 

    mov 0.0+2.0(%rbp), %eax
    mov -268(%rbp), %eax

    jmp endIfLabel98

.elseCondLabel97

    mov %ecx,-300%(ebp) 

    mov -300(%ebp) , %edx 
    mov %edx,-308%(ebp) 

    mov 0.0-VarLocation{name=DIVIDELabel105, type=float, expr=VarLocation{name=factorLabel103, type=float, expr=10.0, size=0}/VarLocation{name=factorLabel104, type=float, expr=2.0, size=0}, size=0}(%rbp), %eax
    mov -284(%rbp), %eax

.endIfLabel98

    mov 1(%rbp), %eax
    mov -312(%rbp), %eax

    jmp BeginWhileLabel92

.EndWhileLabel93

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -328(%rbp)

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -340(%rbp)


    mov true(%rbp), %eax
    cmp -344(%rbp), %eax

    jne elseCondLabel116

    mov %eax,-364%(ebp) 

    mov %edx,-368%(ebp) 

    mov %edx,-376%(ebp) 

    mov 35.0+4.0*0.0-498.0(%rbp), %eax
    mov -348(%rbp), %eax

    jmp endIfLabel117

.elseCondLabel116

    mov %edx,-392%(ebp) 

    mov %edx,-400%(ebp) 

    mov 3.2-0.0-12345.356(%rbp), %eax
    mov -380(%rbp), %eax

.endIfLabel117

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-416%(ebp) 

    mov 0+1(%rbp), %eax
    mov -404(%rbp), %eax

    jmp BeginWhileLabel80

.EndWhileLabel81


    mov %eax,-436%(ebp) 

    mov %eax,-448%(ebp) 

    mov %edx,-452%(ebp) 

    mov %ecx,-464%(ebp) 

    mov %edx,-468%(ebp) 

    mov 0.0*-0.0+23.0*0.0+VarLocation{name=factorLabel141, type=float, expr=2.0, size=0}/VarLocation{name=factorLabel142, type=float, expr=4.0, size=0}(%rbp), %eax
    mov -420(%rbp), %eax

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-484%(ebp) 

    mov 0+1(%rbp), %eax
    mov -472(%rbp), %eax

    jmp BeginWhileLabel75

.EndWhileLabel76

.endIfLabel63


    mov -0.0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 80.0(%rbp), %eax
    mov -12(%rbp), %eax


    mov -15.0(%rbp), %eax
    mov -20(%rbp), %eax

    mov 4.3(%rbp), %eax
    mov -32(%rbp), %eax


    mov -7.6(%rbp), %eax
    mov -40(%rbp), %eax

PARAM
    movl $2 , 0(%esp)
    call potencia
    movl %eax, RESULTLabel158(%rbp) 

    mov MethodCallExpr{name=potencia, args=[0.0, 2]}(%rbp), %eax
    mov -52(%rbp), %eax

    mov %edx,-80%(ebp) 

PARAM

    call multiples
    movl %eax, RESULTLabel164(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel166(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_float04.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 68
lista: 
{null, float, w, Result: 0}
{null, float, m, Result: 0}
{null, float, res, Result: 0}
{LABEL, null, null, Result: BeginMethod potencia}

{METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), false, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{ASSIGN(=), 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 1.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{LE(<), 0, 0, Result: VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel7}
{UNARYMINUS(-expr), 0, null, Result: VarLocation{name=UNARYMINUSLabel10, type=int, expr=-0, size=0}}
{ASSIGN(=), -0, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
{ASSIGN(=), true, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel8}
{LABEL, null, null, Result: elseCondLabel7}
{LABEL, null, null, Result: endIfLabel8}
{LE(<), 0, 0, Result: VarLocation{name=LELabel14, type=boolean, expr=0<0, size=0}}
{CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel17, type=boolean, expr=0==0, size=0}}
{OR(||), 0<0, 0==0, Result: VarLocation{name=DISYUNCIONLabel18, type=boolean, expr=0<0||0==0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel20}
{CMP, VarLocation{name=factorLabel19, type=boolean, expr=VarLocation{name=DISYUNCIONLabel18, type=boolean, expr=0<0||0==0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel21}
{MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel24, type=float, expr=0.0*0.0, size=0}}
{MULTIPLY(*), 0.0*0.0, 2.0, Result: VarLocation{name=MULTIPLYLabel26, type=float, expr=0.0*0.0*2.0, size=0}}
{ASSIGN(=), 0.0*0.0*2.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel29, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel20}
{LABEL, null, null, Result: EndWhileLabel21}
{NON(!), false, null, Result: VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}}
{NON(!), VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=NONLabel33, type=boolean, expr=!VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, size=0}}
{CMP, VarLocation{name=NONLabel33, type=boolean, expr=!VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel34}
{DIVIDE(/), 1.0, 0.0, Result: VarLocation{name=DIVIDELabel38, type=float, expr=VarLocation{name=factorLabel36, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel37, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel36, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel37, type=float, expr=0.0, size=0}}
{JMP, null, null, Result: endIfLabel35}
{LABEL, null, null, Result: elseCondLabel34}
{RETURN, null, null, Result: 0.0}
{LABEL, null, null, Result: endIfLabel35}
{UNARYMINUS(-expr), 100.1, null, Result: VarLocation{name=UNARYMINUSLabel41, type=float, expr=-100.1, size=0}}
{RETURN, null, null, Result: -100.1}
{LABEL, null, null, Result: EndMethod potencia}
{LABEL, null, null, Result: BeginMethod multRepeat}

{METHODDECL, Metodo{ name=multRepeat, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=b, value=null, size=0}, Simbolo{type=float, name=a, value=null, size=0}]}, null, Result: null}
{MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel44, type=float, expr=0.0*0.0, size=0}}
{MULTIPLY(*), 0.0*0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel46, type=float, expr=0.0*0.0*0.0, size=0}}
{MULTIPLY(*), 0.0*0.0*0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel48, type=float, expr=0.0*0.0*0.0*0.0, size=0}}
{MULTIPLY(*), 0.0*0.0*0.0*0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel50, type=float, expr=0.0*0.0*0.0*0.0*0.0, size=0}}
{MULTIPLY(*), 0.0*0.0*0.0*0.0*0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel52, type=float, expr=0.0*0.0*0.0*0.0*0.0*0.0, size=0}}
{ASSIGN(=), 0.0*0.0*0.0*0.0*0.0*0.0, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{RETURN, null, null, Result: 0.0}
{LABEL, null, null, Result: EndMethod multRepeat}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{UNARYMINUS(-expr), 15.0, null, Result: VarLocation{name=UNARYMINUSLabel55, type=float, expr=-15.0, size=0}}
{ASSIGN(=), -15.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{ASSIGN(=), 4.3, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), 7.6, null, Result: VarLocation{name=UNARYMINUSLabel58, type=float, expr=-7.6, size=0}}
{ASSIGN(=), -7.6, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
{ASSIGN(=), 80.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 2]}
{METHODCALL, potencia, 2, Result: RESULTLabel62}
{ASSIGN(=), MethodCallExpr{name=potencia, args=[0.0, 2]}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 0.0]}
{METHODCALL, multRepeat, 2, Result: RESULTLabel66}
{EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, MethodCallExpr{name=multRepeat, args=[0.0, 0.0]}]}, null, Result: EXTERNINVKLabel68}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, float, w, Result: 0}
finalizado.

procesando : . . . {null, float, m, Result: 0}
finalizado.

procesando : . . . {null, float, res, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod potencia}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=potencia, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), false, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 1.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel7}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 0, null, Result: VarLocation{name=UNARYMINUSLabel10, type=int, expr=-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), -0, null, Result: VarLocation{name=n, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), true, null, Result: VarLocation{name=neg, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel8}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel8}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel14, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel17, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {OR(||), 0<0, 0==0, Result: VarLocation{name=DISYUNCIONLabel18, type=boolean, expr=0<0||0==0, size=0}}
{Or}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.BinOpExpr PENDIENTE
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel20}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel19, type=boolean, expr=VarLocation{name=DISYUNCIONLabel18, type=boolean, expr=0<0||0==0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel21}
finalizado.

procesando : . . . {MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel24, type=float, expr=0.0*0.0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {MULTIPLY(*), 0.0*0.0, 2.0, Result: VarLocation{name=MULTIPLYLabel26, type=float, expr=0.0*0.0*2.0, size=0}}
{IMUL1}CASO BinOpExpr entre float y float pendiente
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 0.0*0.0*2.0, null, Result: VarLocation{name=prod, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel29, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel20}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel21}
finalizado.

procesando : . . . {NON(!), false, null, Result: VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {NON(!), VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, null, Result: VarLocation{name=NONLabel33, type=boolean, expr=!VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=NONLabel33, type=boolean, expr=!VarLocation{name=NONLabel31, type=boolean, expr=!false, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel34}
finalizado.

procesando : . . . {DIVIDE(/), 1.0, 0.0, Result: VarLocation{name=DIVIDELabel38, type=float, expr=VarLocation{name=factorLabel36, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel37, type=float, expr=0.0, size=0}, size=0}}
{DIV1} CASO class ir.ast.FloatLiteral PENDIENTE
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel36, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel37, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel35}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel34}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel35}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 100.1, null, Result: VarLocation{name=UNARYMINUSLabel41, type=float, expr=-100.1, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {RETURN, null, null, Result: -100.1}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod potencia}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod multRepeat}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=multRepeat, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=b, value=null, size=0}, Simbolo{type=float, name=a, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {MULTIPLY(*), 0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel44, type=float, expr=0.0*0.0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {MULTIPLY(*), 0.0*0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel46, type=float, expr=0.0*0.0*0.0, size=0}}
{IMUL1}CASO BinOpExpr entre float y float pendiente
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {MULTIPLY(*), 0.0*0.0*0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel48, type=float, expr=0.0*0.0*0.0*0.0, size=0}}
{IMUL1}CASO BinOpExpr entre float y float pendiente
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {MULTIPLY(*), 0.0*0.0*0.0*0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel50, type=float, expr=0.0*0.0*0.0*0.0*0.0, size=0}}
{IMUL1}CASO BinOpExpr entre float y float pendiente
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {MULTIPLY(*), 0.0*0.0*0.0*0.0*0.0, 0.0, Result: VarLocation{name=MULTIPLYLabel52, type=float, expr=0.0*0.0*0.0*0.0*0.0*0.0, size=0}}
{IMUL1}CASO BinOpExpr entre float y float pendiente
{IMUL2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 0.0*0.0*0.0*0.0*0.0*0.0, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod multRepeat}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 15.0, null, Result: VarLocation{name=UNARYMINUSLabel55, type=float, expr=-15.0, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {ASSIGN(=), -15.0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 4.3, null, Result: VarLocation{name=w, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 7.6, null, Result: VarLocation{name=UNARYMINUSLabel58, type=float, expr=-7.6, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {ASSIGN(=), -7.6, null, Result: VarLocation{name=m, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 80.0, null, Result: VarLocation{name=a, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 2]}
index: 1 tamaño: 2

Result = 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, potencia, 2, Result: RESULTLabel62}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=potencia, args=[0.0, 2]}, null, Result: VarLocation{name=f, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, multRepeat, 2, Result: RESULTLabel66}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=void, parameters=[StringLiteral{value="%f"}, MethodCallExpr{name=multRepeat, args=[0.0, 0.0]}]}, null, Result: EXTERNINVKLabel68}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.


    .comm w,4

    .comm m,4

    .comm res,4


    .globl	potencia
    .type	potencia, @function 
potencia: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov false(%rbp), %eax
    mov -16(%rbp), %eax

    mov 1(%rbp), %eax
    mov -24(%rbp), %eax

    mov 1.0(%rbp), %eax
    mov -32(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -48(%rbp)

    mov true(%rbp), %eax
    cmp -48(%rbp), %eax

    jne elseCondLabel7

    movl	$0, %eax 
	   negl	%eax 
    movl	%eax, -60(%rbp) 

    mov -0(%rbp), %eax
    mov -52(%rbp), %eax

    mov true(%rbp), %eax
    mov -64(%rbp), %eax

    jmp endIfLabel8

.elseCondLabel7

.endIfLabel8

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -80(%rbp)

    movl	$0, %eax
    cmpl	$0, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -92(%rbp)


.BeginWhileLabel20

    mov true(%rbp), %eax
    cmp -100(%rbp), %eax

    jne EndWhileLabel21

    mov %eax,-116%(ebp) 

    mov %eax,-124%(ebp) 

    mov 0.0*0.0*2.0(%rbp), %eax
    mov -104(%rbp), %eax

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-140%(ebp) 

    mov 0+1(%rbp), %eax
    mov -128(%rbp), %eax

    jmp BeginWhileLabel20

.EndWhileLabel21

    cmp $0, 0(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -148(%rbp) 

    cmp $0, -148(%rbp) 
    sete %al 
    movzbl %al, %eax 
    mov %eax, -156(%rbp) 

    mov true(%rbp), %eax
    cmp -156(%rbp), %eax

    jne elseCondLabel34

    mov %ecx,-168%(ebp) 

    mov VarLocation{name=factorLabel36, type=float, expr=1.0, size=0}/VarLocation{name=factorLabel37, type=float, expr=0.0, size=0}(%rbp), %eax

    jmp endIfLabel35

.elseCondLabel34

    mov 0.0(%rbp), %eax

.endIfLabel35


    mov -100.1(%rbp), %eax

    leave
    ret



    .globl	multRepeat
    .type	multRepeat, @function 
multRepeat: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov %eax,-20%(ebp) 

    mov %eax,-28%(ebp) 

    mov %eax,-36%(ebp) 

    mov %eax,-44%(ebp) 

    mov %eax,-52%(ebp) 

    mov 0.0*0.0*0.0*0.0*0.0*0.0(%rbp), %eax
    mov -8(%rbp), %eax

    mov 0.0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp


    mov -15.0(%rbp), %eax
    mov -12(%rbp), %eax

    mov 4.3(%rbp), %eax
    mov -24(%rbp), %eax


    mov -7.6(%rbp), %eax
    mov -32(%rbp), %eax

    mov 80.0(%rbp), %eax
    mov -44(%rbp), %eax

PARAM
    movl $2 , 0(%esp)
    call potencia
    movl %eax, RESULTLabel62(%rbp) 

    mov MethodCallExpr{name=potencia, args=[0.0, 2]}(%rbp), %eax
    mov -52(%rbp), %eax

PARAM

    call multRepeat
    movl %eax, RESULTLabel66(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel68(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_floats05.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 29
lista: 
{LABEL, null, null, Result: BeginMethod div}

{METHODDECL, Metodo{ name=div, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{DIVIDE(/), 0.0, 0.0, Result: VarLocation{name=DIVIDELabel3, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}}
{LABEL, null, null, Result: EndMethod div}
{LABEL, null, null, Result: BeginMethod resta}

{METHODDECL, Metodo{ name=resta, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{MINUS(-), 0.0, 0.0, Result: VarLocation{name=MINUSLabel6, type=float, expr=0.0-0.0, size=0}}
{RETURN, null, null, Result: 0.0-0.0}
{LABEL, null, null, Result: EndMethod resta}
{LABEL, null, null, Result: BeginMethod sum}

{METHODDECL, Metodo{ name=sum, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
{PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel9, type=float, expr=0.0+0.0, size=0}}
{RETURN, null, null, Result: 0.0+0.0}
{LABEL, null, null, Result: EndMethod sum}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), 6.982, null, Result: VarLocation{name=x, type=float, expr=null, size=0}}
{UNARYMINUS(-expr), 002.5, null, Result: VarLocation{name=UNARYMINUSLabel12, type=float, expr=-002.5, size=0}}
{ASSIGN(=), -002.5, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
{ASSIGN(=), 3.5698, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0.0, 0.0]}
{METHODCALL, resta, 2, Result: RESULTLabel16}
{PARAM, null, null, Result: [0.0, 0.0]}
{METHODCALL, div, 2, Result: RESULTLabel20}
{PARAM, null, null, Result: [MethodCallExpr{name=resta, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}
{METHODCALL, sum, 2, Result: RESULTLabel22}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="anidandofuncionesflotantes"}, MethodCallExpr{name=sum, args=[MethodCallExpr{name=resta, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}]}, null, Result: EXTERNINVKLabel24}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod div}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=div, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {DIVIDE(/), 0.0, 0.0, Result: VarLocation{name=DIVIDELabel3, type=float, expr=VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}, size=0}}
{DIV1} CASO class ir.ast.FloatLiteral PENDIENTE
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod div}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod resta}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=resta, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {MINUS(-), 0.0, 0.0, Result: VarLocation{name=MINUSLabel6, type=float, expr=0.0-0.0, size=0}}
{SUB1} CASO class ir.ast.FloatLiteral PENDIENTE
{SUB2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0-0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod resta}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod sum}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=sum, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=a, value=null, size=0}, Simbolo{type=float, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel9, type=float, expr=0.0+0.0, size=0}}
{ADD1} CASO class ir.ast.FloatLiteral PENDIENTE
{ADD2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0+0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod sum}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 6.982, null, Result: VarLocation{name=x, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {UNARYMINUS(-expr), 002.5, null, Result: VarLocation{name=UNARYMINUSLabel12, type=float, expr=-002.5, size=0}}
{Unary_Minus}IMPLEMENTAR CASO -(FLOAT)
finalizado.

procesando : . . . {ASSIGN(=), -002.5, null, Result: VarLocation{name=y, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 3.5698, null, Result: VarLocation{name=z, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, resta, 2, Result: RESULTLabel16}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0.0, 0.0]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, div, 2, Result: RESULTLabel20}
finalizado.

procesando : . . . {PARAM, null, null, Result: [MethodCallExpr{name=resta, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}
index: 1 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, sum, 2, Result: RESULTLabel22}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="anidandofuncionesflotantes"}, MethodCallExpr{name=sum, args=[MethodCallExpr{name=resta, args=[0.0, 0.0]}, MethodCallExpr{name=div, args=[0.0, 0.0]}]}]}, null, Result: EXTERNINVKLabel24}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	div
    .type	div, @function 
div: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov %ecx,-12%(ebp) 

    mov VarLocation{name=factorLabel1, type=float, expr=0.0, size=0}/VarLocation{name=factorLabel2, type=float, expr=0.0, size=0}(%rbp), %eax

    leave
    ret



    .globl	resta
    .type	resta, @function 
resta: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov %edx,-12%(ebp) 

    mov 0.0-0.0(%rbp), %eax

    leave
    ret



    .globl	sum
    .type	sum, @function 
sum: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov %edx,-12%(ebp) 

    mov 0.0+0.0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 6.982(%rbp), %eax
    mov -16(%rbp), %eax


    mov -002.5(%rbp), %eax
    mov -24(%rbp), %eax

    mov 3.5698(%rbp), %eax
    mov -36(%rbp), %eax

PARAM

    call resta
    movl %eax, RESULTLabel16(%rbp) 

PARAM

    call div
    movl %eax, RESULTLabel20(%rbp) 

PARAM

    call sum
    movl %eax, RESULTLabel22(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel24(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_for01.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel3, type=int, expr=1, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_for02.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel3, type=int, expr=1, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_for03.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel3, type=int, expr=1, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_for04.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel3, type=int, expr=1, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_for05.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel4, type=int, expr=1, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_if_anidados.ctds ... -------------------
parseo iniciado
Error: Method pruAritmetica must return int

parseo exitoso
tamaño lista de codigo tercetos: 34
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0}, Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
{NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel3, type=boolean, expr=0!=0, size=0}}
{CMP, VarLocation{name=NEQLabel3, type=boolean, expr=0!=0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel4}
{GE(>), 0, 0, Result: VarLocation{name=GELabel8, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel8, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel9}
{MINUS(-), 0, 0, Result: VarLocation{name=MINUSLabel13, type=int, expr=0-0, size=0}}
{ASSIGN(=), 0-0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel10}
{LABEL, null, null, Result: elseCondLabel9}
{MINUS(-), 0, 0, Result: VarLocation{name=MINUSLabel16, type=int, expr=0-0, size=0}}
{ASSIGN(=), 0-0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel10}
{JMP, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: elseCondLabel4}
{MULTIPLY(*), 0, 5, Result: VarLocation{name=MULTIPLYLabel19, type=int, expr=0*5, size=0}}
{ASSIGN(=), 0*5, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel23}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel25}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: EXTERNINVKLabel26}
{PARAM, null, null, Result: [4, 4]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel29}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 4]}]}, null, Result: EXTERNINVKLabel31}
{PARAM, null, null, Result: [8, 5]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel34}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[8, 5]}]}, null, Result: EXTERNINVKLabel36}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0}, Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel3, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=NEQLabel3, type=boolean, expr=0!=0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel8, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel8, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel9}
finalizado.

procesando : . . . {MINUS(-), 0, 0, Result: VarLocation{name=MINUSLabel13, type=int, expr=0-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0-0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel9}
finalizado.

procesando : . . . {MINUS(-), 0, 0, Result: VarLocation{name=MINUSLabel16, type=int, expr=0-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0-0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel10}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {MULTIPLY(*), 0, 5, Result: VarLocation{name=MULTIPLYLabel19, type=int, expr=0*5, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0*5, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel23}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel25}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: EXTERNINVKLabel26}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 4]}
index: 1 tamaño: 2

Result = 4
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel29}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 4]}]}, null, Result: EXTERNINVKLabel31}
finalizado.

procesando : . . . {PARAM, null, null, Result: [8, 5]}
index: 1 tamaño: 2

Result = 5
index: 0 tamaño: 2

Result = 8
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel34}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[8, 5]}]}, null, Result: EXTERNINVKLabel36}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    movl	$0, %eax
    cmpl	$0, %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -16(%rbp)

    mov true(%rbp), %eax
    cmp -16(%rbp), %eax

    jne elseCondLabel4

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -28(%rbp)

    mov true(%rbp), %eax
    cmp -28(%rbp), %eax

    jne elseCondLabel9

    mov $0, %eax 
    mov $0, %edx 
    mov %edx,-44%(ebp) 

    mov 0-0(%rbp), %eax
    mov -32(%rbp), %eax

    jmp endIfLabel10

.elseCondLabel9

    mov $0, %eax 
    mov $0, %edx 
    mov %edx,-60%(ebp) 

    mov 0-0(%rbp), %eax
    mov -48(%rbp), %eax

.endIfLabel10

    jmp endIfLabel5

.elseCondLabel4

    mov $0, %eax 
    mov $5, %edx 
    mov %eax,-76%(ebp) 

    mov 0*5(%rbp), %eax
    mov -64(%rbp), %eax

.endIfLabel5

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $8 , 0(%esp)    movl $4 , (%esp)
    call pruAritmetica
    movl %eax, RESULTLabel23(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel25(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel26(%rbp) 

PARAM
    movl $4 , 0(%esp)    movl $4 , (%esp)
    call pruAritmetica
    movl %eax, RESULTLabel29(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel31(%rbp) 

PARAM
    movl $5 , 0(%esp)    movl $8 , (%esp)
    call pruAritmetica
    movl %eax, RESULTLabel34(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel36(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_if.ctds ... -------------------
parseo iniciado
Error: Method pruAritmetica must return int

parseo exitoso
tamaño lista de codigo tercetos: 34
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0}, Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
{GE(>), 0, 0, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel4}
{MINUS(-), 0, 0, Result: VarLocation{name=MINUSLabel8, type=int, expr=0-0, size=0}}
{ASSIGN(=), 0-0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: elseCondLabel4}
{LABEL, null, null, Result: endIfLabel5}
{CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}}
{CMP, VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel12}
{MULTIPLY(*), 0, 5, Result: VarLocation{name=MULTIPLYLabel16, type=int, expr=0*5, size=0}}
{ASSIGN(=), 0*5, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel13}
{LABEL, null, null, Result: elseCondLabel12}
{MINUS(-), 0, 0, Result: VarLocation{name=MINUSLabel19, type=int, expr=0-0, size=0}}
{ASSIGN(=), 0-0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel13}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 8]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel23}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel25}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: EXTERNINVKLabel26}
{PARAM, null, null, Result: [4, 4]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel29}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 4]}]}, null, Result: EXTERNINVKLabel31}
{PARAM, null, null, Result: [8, 5]}
{METHODCALL, pruAritmetica, 2, Result: RESULTLabel34}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[8, 5]}]}, null, Result: EXTERNINVKLabel36}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=b, value=null, size=0}, Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {MINUS(-), 0, 0, Result: VarLocation{name=MINUSLabel8, type=int, expr=0-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0-0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel11, type=boolean, expr=0==0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel12}
finalizado.

procesando : . . . {MULTIPLY(*), 0, 5, Result: VarLocation{name=MULTIPLYLabel16, type=int, expr=0*5, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0*5, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel13}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel12}
finalizado.

procesando : . . . {MINUS(-), 0, 0, Result: VarLocation{name=MINUSLabel19, type=int, expr=0-0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0-0, null, Result: VarLocation{name=res, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel13}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 8]}
index: 1 tamaño: 2

Result = 8
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel23}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 8]}]}, null, Result: EXTERNINVKLabel25}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[]}, null, Result: EXTERNINVKLabel26}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 4]}
index: 1 tamaño: 2

Result = 4
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel29}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[4, 4]}]}, null, Result: EXTERNINVKLabel31}
finalizado.

procesando : . . . {PARAM, null, null, Result: [8, 5]}
index: 1 tamaño: 2

Result = 5
index: 0 tamaño: 2

Result = 8
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 2, Result: RESULTLabel34}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[8, 5]}]}, null, Result: EXTERNINVKLabel36}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -16(%rbp)

    mov true(%rbp), %eax
    cmp -16(%rbp), %eax

    jne elseCondLabel4

    mov $0, %eax 
    mov $0, %edx 
    mov %edx,-32%(ebp) 

    mov 0-0(%rbp), %eax
    mov -20(%rbp), %eax

    jmp endIfLabel5

.elseCondLabel4

.endIfLabel5

    movl	$0, %eax
    cmpl	$0, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -44(%rbp)

    mov true(%rbp), %eax
    cmp -44(%rbp), %eax

    jne elseCondLabel12

    mov $0, %eax 
    mov $5, %edx 
    mov %eax,-60%(ebp) 

    mov 0*5(%rbp), %eax
    mov -48(%rbp), %eax

    jmp endIfLabel13

.elseCondLabel12

    mov $0, %eax 
    mov $0, %edx 
    mov %edx,-76%(ebp) 

    mov 0-0(%rbp), %eax
    mov -64(%rbp), %eax

.endIfLabel13

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $8 , 0(%esp)    movl $4 , (%esp)
    call pruAritmetica
    movl %eax, RESULTLabel23(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel25(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel26(%rbp) 

PARAM
    movl $4 , 0(%esp)    movl $4 , (%esp)
    call pruAritmetica
    movl %eax, RESULTLabel29(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel31(%rbp) 

PARAM
    movl $5 , 0(%esp)    movl $8 , (%esp)
    call pruAritmetica
    movl %eax, RESULTLabel34(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel36(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_logicos01.ctds ... -------------------
parseo iniciado
Error: Method pruebaLogica must return int

parseo exitoso
tamaño lista de codigo tercetos: 15
lista: 
{LABEL, null, null, Result: BeginMethod pruebaLogica}

{METHODDECL, Metodo{ name=pruebaLogica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=boolean, name=i, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), true, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
{OR(||), false, false, Result: VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}}
{NON(!), true, null, Result: VarLocation{name=NONLabel7, type=boolean, expr=!true, size=0}}
{AND(&&), VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}, !true, Result: VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}}
{NON(!), false, null, Result: VarLocation{name=NONLabel11, type=boolean, expr=!false, size=0}}
{AND(&&), VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}, !false, Result: VarLocation{name=CONJUNCIONLabel12, type=boolean, expr=VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}&&!false, size=0}}
{LABEL, null, null, Result: EndMethod pruebaLogica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [false]}
{METHODCALL, pruebaLogica, 1, Result: RESULTLabel15}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruebaLogica, args=[false]}]}, null, Result: EXTERNINVKLabel17}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruebaLogica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruebaLogica, return_not_void=true, typeReturn=int, parameters [Simbolo{type=boolean, name=i, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), true, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {OR(||), false, false, Result: VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}}
{Or}TRATAMIENTO PARA class ir.ast.BoolLiteral y class ir.ast.BoolLiteral PENDIENTE
finalizado.

procesando : . . . {NON(!), true, null, Result: VarLocation{name=NONLabel7, type=boolean, expr=!true, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}, !true, Result: VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}}
{And}TRATAMIENTO PARA class ir.ast.VarLocation y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {NON(!), false, null, Result: VarLocation{name=NONLabel11, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}, !false, Result: VarLocation{name=CONJUNCIONLabel12, type=boolean, expr=VarLocation{name=CONJUNCIONLabel8, type=boolean, expr=VarLocation{name=DISYUNCIONLabel4, type=boolean, expr=false||false, size=0}&&!true, size=0}&&!false, size=0}}
{And}TRATAMIENTO PARA class ir.ast.VarLocation y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruebaLogica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [false]}
index: 0 tamaño: 1
finalizado.

procesando : . . . {METHODCALL, pruebaLogica, 1, Result: RESULTLabel15}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruebaLogica, args=[false]}]}, null, Result: EXTERNINVKLabel17}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	pruebaLogica
    .type	pruebaLogica, @function 
pruebaLogica: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov true(%rbp), %eax
    mov -8(%rbp), %eax


    cmp $0, 1(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -36(%rbp) 


    cmp $0, 0(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -52(%rbp) 


    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $false , (%esp)
    call pruebaLogica
    movl %eax, RESULTLabel15(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel17(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_logicos02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 54
lista: 
{LABEL, null, null, Result: BeginMethod promedio}

{METHODDECL, Metodo{ name=promedio, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=nota1, value=null, size=0}, Simbolo{type=float, name=nota2, value=null, size=0}, Simbolo{type=float, name=nota3, value=null, size=0}]}, null, Result: null}
{GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel3, type=boolean, expr=0.0>0.0, size=0}}
{GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel7, type=boolean, expr=0.0>0.0, size=0}}
{AND(&&), VarLocation{name=GELabel3, type=boolean, expr=0.0>0.0, size=0}, VarLocation{name=GELabel7, type=boolean, expr=0.0>0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel9, type=boolean, expr=VarLocation{name=GELabel3, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel7, type=boolean, expr=0.0>0.0, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel9, type=boolean, expr=VarLocation{name=GELabel3, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel7, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel10}
{PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel14, type=float, expr=0.0+0.0, size=0}}
{DIVIDE(/), VarLocation{name=PLUSLabel14, type=float, expr=0.0+0.0, size=0}, 2.0, Result: VarLocation{name=DIVIDELabel17, type=float, expr=VarLocation{name=factorLabel15, type=float, expr=VarLocation{name=PLUSLabel14, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel16, type=float, expr=2.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel15, type=float, expr=VarLocation{name=PLUSLabel14, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel16, type=float, expr=2.0, size=0}}
{JMP, null, null, Result: endIfLabel11}
{LABEL, null, null, Result: elseCondLabel10}
{LABEL, null, null, Result: endIfLabel11}
{GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel20, type=boolean, expr=0.0>0.0, size=0}}
{GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel24, type=boolean, expr=0.0>0.0, size=0}}
{AND(&&), VarLocation{name=GELabel20, type=boolean, expr=0.0>0.0, size=0}, VarLocation{name=GELabel24, type=boolean, expr=0.0>0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel26, type=boolean, expr=VarLocation{name=GELabel20, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel24, type=boolean, expr=0.0>0.0, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel26, type=boolean, expr=VarLocation{name=GELabel20, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel24, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel27}
{PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel31, type=float, expr=0.0+0.0, size=0}}
{DIVIDE(/), VarLocation{name=PLUSLabel31, type=float, expr=0.0+0.0, size=0}, 2.0, Result: VarLocation{name=DIVIDELabel34, type=float, expr=VarLocation{name=factorLabel32, type=float, expr=VarLocation{name=PLUSLabel31, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel33, type=float, expr=2.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel32, type=float, expr=VarLocation{name=PLUSLabel31, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel33, type=float, expr=2.0, size=0}}
{JMP, null, null, Result: endIfLabel28}
{LABEL, null, null, Result: elseCondLabel27}
{LABEL, null, null, Result: endIfLabel28}
{GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel37, type=boolean, expr=0.0>0.0, size=0}}
{GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel41, type=boolean, expr=0.0>0.0, size=0}}
{AND(&&), VarLocation{name=GELabel37, type=boolean, expr=0.0>0.0, size=0}, VarLocation{name=GELabel41, type=boolean, expr=0.0>0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel43, type=boolean, expr=VarLocation{name=GELabel37, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel41, type=boolean, expr=0.0>0.0, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel43, type=boolean, expr=VarLocation{name=GELabel37, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel41, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel44}
{PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel48, type=float, expr=0.0+0.0, size=0}}
{DIVIDE(/), VarLocation{name=PLUSLabel48, type=float, expr=0.0+0.0, size=0}, 2.0, Result: VarLocation{name=DIVIDELabel51, type=float, expr=VarLocation{name=factorLabel49, type=float, expr=VarLocation{name=PLUSLabel48, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel50, type=float, expr=2.0, size=0}, size=0}}
{RETURN, null, null, Result: VarLocation{name=factorLabel49, type=float, expr=VarLocation{name=PLUSLabel48, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel50, type=float, expr=2.0, size=0}}
{JMP, null, null, Result: endIfLabel45}
{LABEL, null, null, Result: elseCondLabel44}
{LABEL, null, null, Result: endIfLabel45}
{CEQ(==), 0.0, 0.0, Result: VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}}
{CEQ(==), 0.0, 0.0, Result: VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}}
{AND(&&), VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}, VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel60, type=boolean, expr=VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}, size=0}}
{CEQ(==), 0.0, 0.0, Result: VarLocation{name=CEQLabel63, type=boolean, expr=0.0==0.0, size=0}}
{AND(&&), VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}, VarLocation{name=CEQLabel63, type=boolean, expr=0.0==0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel65, type=boolean, expr=VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel63, type=boolean, expr=0.0==0.0, size=0}, size=0}}
{CMP, VarLocation{name=CONJUNCIONLabel65, type=boolean, expr=VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel63, type=boolean, expr=0.0==0.0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel66}
{RETURN, null, null, Result: 0.0}
{JMP, null, null, Result: endIfLabel67}
{LABEL, null, null, Result: elseCondLabel66}
{LABEL, null, null, Result: endIfLabel67}
{LABEL, null, null, Result: EndMethod promedio}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [3.3, 0.66, 10.0]}
{METHODCALL, promedio, 3, Result: RESULTLabel72}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=promedio, args=[3.3, 0.66, 10.0]}]}, null, Result: EXTERNINVKLabel74}
{RETURN, null, null, Result: 1}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod promedio}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=promedio, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=nota1, value=null, size=0}, Simbolo{type=float, name=nota2, value=null, size=0}, Simbolo{type=float, name=nota3, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel3, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel7, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=GELabel3, type=boolean, expr=0.0>0.0, size=0}, VarLocation{name=GELabel7, type=boolean, expr=0.0>0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel9, type=boolean, expr=VarLocation{name=GELabel3, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel7, type=boolean, expr=0.0>0.0, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel9, type=boolean, expr=VarLocation{name=GELabel3, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel7, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel10}
finalizado.

procesando : . . . {PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel14, type=float, expr=0.0+0.0, size=0}}
{ADD1} CASO class ir.ast.FloatLiteral PENDIENTE
{ADD2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=PLUSLabel14, type=float, expr=0.0+0.0, size=0}, 2.0, Result: VarLocation{name=DIVIDELabel17, type=float, expr=VarLocation{name=factorLabel15, type=float, expr=VarLocation{name=PLUSLabel14, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel16, type=float, expr=2.0, size=0}, size=0}}
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel15, type=float, expr=VarLocation{name=PLUSLabel14, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel16, type=float, expr=2.0, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel11}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel11}
finalizado.

procesando : . . . {GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel20, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel24, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=GELabel20, type=boolean, expr=0.0>0.0, size=0}, VarLocation{name=GELabel24, type=boolean, expr=0.0>0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel26, type=boolean, expr=VarLocation{name=GELabel20, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel24, type=boolean, expr=0.0>0.0, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel26, type=boolean, expr=VarLocation{name=GELabel20, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel24, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel27}
finalizado.

procesando : . . . {PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel31, type=float, expr=0.0+0.0, size=0}}
{ADD1} CASO class ir.ast.FloatLiteral PENDIENTE
{ADD2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=PLUSLabel31, type=float, expr=0.0+0.0, size=0}, 2.0, Result: VarLocation{name=DIVIDELabel34, type=float, expr=VarLocation{name=factorLabel32, type=float, expr=VarLocation{name=PLUSLabel31, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel33, type=float, expr=2.0, size=0}, size=0}}
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel32, type=float, expr=VarLocation{name=PLUSLabel31, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel33, type=float, expr=2.0, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel28}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel27}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel28}
finalizado.

procesando : . . . {GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel37, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {GE(>), 0.0, 0.0, Result: VarLocation{name=GELabel41, type=boolean, expr=0.0>0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=GELabel37, type=boolean, expr=0.0>0.0, size=0}, VarLocation{name=GELabel41, type=boolean, expr=0.0>0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel43, type=boolean, expr=VarLocation{name=GELabel37, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel41, type=boolean, expr=0.0>0.0, size=0}, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel43, type=boolean, expr=VarLocation{name=GELabel37, type=boolean, expr=0.0>0.0, size=0}&&VarLocation{name=GELabel41, type=boolean, expr=0.0>0.0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel44}
finalizado.

procesando : . . . {PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel48, type=float, expr=0.0+0.0, size=0}}
{ADD1} CASO class ir.ast.FloatLiteral PENDIENTE
{ADD2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {DIVIDE(/), VarLocation{name=PLUSLabel48, type=float, expr=0.0+0.0, size=0}, 2.0, Result: VarLocation{name=DIVIDELabel51, type=float, expr=VarLocation{name=factorLabel49, type=float, expr=VarLocation{name=PLUSLabel48, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel50, type=float, expr=2.0, size=0}, size=0}}
{DIV2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=factorLabel49, type=float, expr=VarLocation{name=PLUSLabel48, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel50, type=float, expr=2.0, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel45}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel44}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel45}
finalizado.

procesando : . . . {CEQ(==), 0.0, 0.0, Result: VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0.0, 0.0, Result: VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}, VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel60, type=boolean, expr=VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}, size=0}}
finalizado.

procesando : . . . {CEQ(==), 0.0, 0.0, Result: VarLocation{name=CEQLabel63, type=boolean, expr=0.0==0.0, size=0}}
finalizado.

procesando : . . . {AND(&&), VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}, VarLocation{name=CEQLabel63, type=boolean, expr=0.0==0.0, size=0}, Result: VarLocation{name=CONJUNCIONLabel65, type=boolean, expr=VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel63, type=boolean, expr=0.0==0.0, size=0}, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BinOpExpr y class ir.ast.VarLocation PENDIENTE
finalizado.

procesando : . . . {CMP, VarLocation{name=CONJUNCIONLabel65, type=boolean, expr=VarLocation{name=CEQLabel54, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel58, type=boolean, expr=0.0==0.0, size=0}&&VarLocation{name=CEQLabel63, type=boolean, expr=0.0==0.0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel66}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel67}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel66}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel67}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod promedio}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [3.3, 0.66, 10.0]}
index: 2 tamaño: 3
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 1 tamaño: 3
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 3
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, promedio, 3, Result: RESULTLabel72}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%f resultado : "}, MethodCallExpr{name=promedio, args=[3.3, 0.66, 10.0]}]}, null, Result: EXTERNINVKLabel74}
finalizado.

procesando : . . . {RETURN, null, null, Result: 1}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	promedio
    .type	promedio, @function 
promedio: 
    enter   $(12), $0 
    push	%rbp
    mov %rsp, %rbp

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -12(%rbp)

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -28(%rbp)

    cmp	$0, -12(%rbp)
    je .L0
    cmp	$0, -28(%rbp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -36(%rbp)
.L2:

    mov true(%rbp), %eax
    cmp -36(%rbp), %eax

    jne elseCondLabel10

    mov %edx,-48%(ebp) 

    mov -48(%ebp) , %eax 
    mov %ecx,-60%(ebp) 

    mov VarLocation{name=factorLabel15, type=float, expr=VarLocation{name=PLUSLabel14, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel16, type=float, expr=2.0, size=0}(%rbp), %eax

    jmp endIfLabel11

.elseCondLabel10

.endIfLabel11

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -72(%rbp)

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -88(%rbp)

    cmp	$0, -72(%rbp)
    je .L3
    cmp	$0, -88(%rbp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -96(%rbp)
.L5:

    mov true(%rbp), %eax
    cmp -96(%rbp), %eax

    jne elseCondLabel27

    mov %edx,-108%(ebp) 

    mov -108(%ebp) , %eax 
    mov %ecx,-120%(ebp) 

    mov VarLocation{name=factorLabel32, type=float, expr=VarLocation{name=PLUSLabel31, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel33, type=float, expr=2.0, size=0}(%rbp), %eax

    jmp endIfLabel28

.elseCondLabel27

.endIfLabel28

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -132(%rbp)

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -148(%rbp)

    cmp	$0, -132(%rbp)
    je .L6
    cmp	$0, -148(%rbp)
    je .L6
    mov	$1, %eax
    jmp .L7
.L6:
    movl	$0, %eax
    jmp .L8
.L7:
    movl	%eax, -156(%rbp)
.L8:

    mov true(%rbp), %eax
    cmp -156(%rbp), %eax

    jne elseCondLabel44

    mov %edx,-168%(ebp) 

    mov -168(%ebp) , %eax 
    mov %ecx,-180%(ebp) 

    mov VarLocation{name=factorLabel49, type=float, expr=VarLocation{name=PLUSLabel48, type=float, expr=0.0+0.0, size=0}, size=0}/VarLocation{name=factorLabel50, type=float, expr=2.0, size=0}(%rbp), %eax

    jmp endIfLabel45

.elseCondLabel44

.endIfLabel45

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -192(%rbp)

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -208(%rbp)

    cmp	$0, -192(%rbp)
    je .L9
    cmp	$0, -208(%rbp)
    je .L9
    mov	$1, %eax
    jmp .L10
.L9:
    movl	$0, %eax
    jmp .L11
.L10:
    movl	%eax, -216(%rbp)
.L11:

    movl	$0.0, %eax
    cmpl	$0.0, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -228(%rbp)


    mov true(%rbp), %eax
    cmp -236(%rbp), %eax

    jne elseCondLabel66

    mov 0.0(%rbp), %eax

    jmp endIfLabel67

.elseCondLabel66

.endIfLabel67

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM

    call promedio
    movl %eax, RESULTLabel72(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel74(%rbp) 

    mov 1(%rbp), %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_mainSolo.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 11
lista: 
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), true, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
{NON(!), false, null, Result: VarLocation{name=NONLabel3, type=boolean, expr=!false, size=0}}
{ASSIGN(=), !false, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
{AND(&&), false, false, Result: VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=false&&false, size=0}}
{NON(!), false, null, Result: VarLocation{name=NONLabel9, type=boolean, expr=!false, size=0}}
{OR(||), VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=false&&false, size=0}, !false, Result: VarLocation{name=DISYUNCIONLabel10, type=boolean, expr=VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=false&&false, size=0}||!false, size=0}}
{ASSIGN(=), VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=false&&false, size=0}||!false, null, Result: VarLocation{name=c, type=boolean, expr=null, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=boolean, parameters=[false]}, null, Result: EXTERNINVKLabel12}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), true, null, Result: VarLocation{name=a, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {NON(!), false, null, Result: VarLocation{name=NONLabel3, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), !false, null, Result: VarLocation{name=b, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {AND(&&), false, false, Result: VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=false&&false, size=0}}
{And}TRATAMIENTO PARA class ir.ast.BoolLiteral y class ir.ast.BoolLiteral PENDIENTE
finalizado.

procesando : . . . {NON(!), false, null, Result: VarLocation{name=NONLabel9, type=boolean, expr=!false, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=false&&false, size=0}, !false, Result: VarLocation{name=DISYUNCIONLabel10, type=boolean, expr=VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=false&&false, size=0}||!false, size=0}}
{Or}TRATAMIENTO PARA class ir.ast.VarLocation y class ir.ast.UnaryOpExpr PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=false&&false, size=0}||!false, null, Result: VarLocation{name=c, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=boolean, parameters=[false]}, null, Result: EXTERNINVKLabel12}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov true(%rbp), %eax
    mov -24(%rbp), %eax

    cmp $0, 0(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -40(%rbp) 

    mov !false(%rbp), %eax
    mov -32(%rbp), %eax


    cmp $0, 0(%rbp) 
    sete	%al 
    movzbl %al, %eax 
    mov %eax, -68(%rbp) 


    mov VarLocation{name=CONJUNCIONLabel6, type=boolean, expr=false&&false, size=0}||!false(%rbp), %eax
    mov -44(%rbp), %eax

    call "printf"
    movl %eax, EXTERNINVKLabel12(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_mcd.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 31
lista: 
{LABEL, null, null, Result: BeginMethod maxcomdiv}

{METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0}, Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
{GE(>), 0, 0, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel4}
{ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: elseCondLabel4}
{ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel5}
{ASSIGN(=), 1, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel16}
{CMP, VarLocation{name=factorLabel15, type=boolean, expr=VarLocation{name=factorLabel14, type=boolean, expr=VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel17}
{MOD(%), 0, 0, Result: VarLocation{name=MODLabel20, type=int, expr=0%0, size=0}}
{ASSIGN(=), 0%0, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel16}
{LABEL, null, null, Result: EndWhileLabel17}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod maxcomdiv}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [6, 9]}
{METHODCALL, maxcomdiv, 2, Result: RESULTLabel26}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="mcd%d"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}]}, null, Result: EXTERNINVKLabel28}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod maxcomdiv}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0}, Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {ASSIGN(=), 1, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel16}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel15, type=boolean, expr=VarLocation{name=factorLabel14, type=boolean, expr=VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel17}
finalizado.

procesando : . . . {MOD(%), 0, 0, Result: VarLocation{name=MODLabel20, type=int, expr=0%0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0%0, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel16}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel17}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod maxcomdiv}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6, 9]}
index: 1 tamaño: 2

Result = 9
index: 0 tamaño: 2

Result = 6
finalizado.

procesando : . . . {METHODCALL, maxcomdiv, 2, Result: RESULTLabel26}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="mcd%d"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}]}, null, Result: EXTERNINVKLabel28}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	maxcomdiv
    .type	maxcomdiv, @function 
maxcomdiv: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -24(%rbp)

    mov true(%rbp), %eax
    cmp -24(%rbp), %eax

    jne elseCondLabel4

    mov 0(%rbp), %eax
    mov -28(%rbp), %eax

    mov 0(%rbp), %eax
    mov -36(%rbp), %eax

    jmp endIfLabel5

.elseCondLabel4

    mov 0(%rbp), %eax
    mov -44(%rbp), %eax

    mov 0(%rbp), %eax
    mov -52(%rbp), %eax

.endIfLabel5

    mov 1(%rbp), %eax
    mov -60(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -76(%rbp)

.BeginWhileLabel16

    mov true(%rbp), %eax
    cmp -84(%rbp), %eax

    jne EndWhileLabel17

    movl	$0, %eax 
    cltd
    idivl $0 
    movl	%edx, -100(%rbp)

    mov 0%0(%rbp), %eax
    mov -88(%rbp), %eax

    mov 0(%rbp), %eax
    mov -104(%rbp), %eax

    mov 0(%rbp), %eax
    mov -112(%rbp), %eax

    jmp BeginWhileLabel16

.EndWhileLabel17

    mov 0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $9 , 0(%esp)    movl $6 , (%esp)
    call maxcomdiv
    movl %eax, RESULTLabel26(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel28(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos00.ctds ... -------------------
parseo iniciado
Error: Method alo not declared
Error: Method alo not declared
ocurrio un error: null
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos01.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 26
lista: 
{null, float, c, Result: 0}
{LABEL, null, null, Result: BeginMethod alo}

{METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{LABEL, null, null, Result: EndMethod alo}
{LABEL, null, null, Result: BeginMethod alo2}

{METHODDECL, Metodo{ name=alo2, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
{PARAM, null, null, Result: [0]}
{METHODCALL, alo, 1, Result: RESULTLabel5}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod alo2}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), 7, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{ASSIGN(=), 8.0, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0]}
{METHODCALL, alo2, 1, Result: RESULTLabel13}
{ASSIGN(=), MethodCallExpr{name=alo2, args=[0]}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=factorLabel15, type=int, expr=3, size=0}, 0, Result: VarLocation{name=MULTIPLYLabel18, type=int, expr=VarLocation{name=factorLabel15, type=int, expr=3, size=0}*0, size=0}}
{PARAM, null, null, Result: [VarLocation{name=factorLabel15, type=int, expr=3, size=0}*0]}
{METHODCALL, alo2, 1, Result: RESULTLabel19}
{ASSIGN(=), MethodCallExpr{name=alo2, args=[VarLocation{name=factorLabel15, type=int, expr=3, size=0}*0]}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, float, c, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod alo}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod alo}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod alo2}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=alo2, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0]}
index: 0 tamaño: 1

Result = 0
finalizado.

procesando : . . . {METHODCALL, alo, 1, Result: RESULTLabel5}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel8, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod alo2}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 7, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 8.0, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0]}
index: 0 tamaño: 1

Result = 0
finalizado.

procesando : . . . {METHODCALL, alo2, 1, Result: RESULTLabel13}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=alo2, args=[0]}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel15, type=int, expr=3, size=0}, 0, Result: VarLocation{name=MULTIPLYLabel18, type=int, expr=VarLocation{name=factorLabel15, type=int, expr=3, size=0}*0, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [VarLocation{name=factorLabel15, type=int, expr=3, size=0}*0]}
index: 0 tamaño: 1
ocurrio un error: For input string: "0VarLocation{name=factorLabel15, type=int, expr=3, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 35
lista: 
{null, float, c, Result: 0}
{LABEL, null, null, Result: BeginMethod alo}

{METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=boolean, name=b, value=null, size=0}, Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
{CMP, VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel2}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel6, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel3}
{LABEL, null, null, Result: elseCondLabel2}
{MINUS(-), 0, 1, Result: VarLocation{name=MINUSLabel9, type=int, expr=0-1, size=0}}
{ASSIGN(=), 0-1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel3}
{LABEL, null, null, Result: EndMethod alo}
{LABEL, null, null, Result: BeginMethod Alo}

{METHODDECL, Metodo{ name=Alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=boolean, name=b, value=null, size=0}, Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
{LABEL, null, null, Result: EndMethod Alo}
{LABEL, null, null, Result: BeginMethod alo2}

{METHODDECL, Metodo{ name=alo2, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
{PARAM, null, null, Result: [true, 0]}
{METHODCALL, alo, 2, Result: RESULTLabel12}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel15, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod alo2}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
{ASSIGN(=), 7, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{ASSIGN(=), 8.0, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
{PARAM, null, null, Result: [0]}
{METHODCALL, alo2, 1, Result: RESULTLabel20}
{ASSIGN(=), MethodCallExpr{name=alo2, args=[0]}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
{MULTIPLY(*), VarLocation{name=factorLabel23, type=int, expr=3, size=0}, 0, Result: VarLocation{name=MULTIPLYLabel26, type=int, expr=VarLocation{name=factorLabel23, type=int, expr=3, size=0}*0, size=0}}
{PARAM, null, null, Result: [false, VarLocation{name=factorLabel23, type=int, expr=3, size=0}*0]}
{METHODCALL, alo, 2, Result: RESULTLabel27}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, float, c, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod alo}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=boolean, name=b, value=null, size=0}, Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel1, type=boolean, expr=false, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel2}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel6, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel3}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel2}
finalizado.

procesando : . . . {MINUS(-), 0, 1, Result: VarLocation{name=MINUSLabel9, type=int, expr=0-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0-1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel3}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod alo}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod Alo}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=Alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=boolean, name=b, value=null, size=0}, Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod Alo}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod alo2}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=alo2, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [true, 0]}
index: 1 tamaño: 2

Result = 0
index: 0 tamaño: 2
finalizado.

procesando : . . . {METHODCALL, alo, 2, Result: RESULTLabel12}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel15, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod alo2}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=false, typeReturn=void, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 7, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 8.0, null, Result: VarLocation{name=c, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [0]}
index: 0 tamaño: 1

Result = 0
finalizado.

procesando : . . . {METHODCALL, alo2, 1, Result: RESULTLabel20}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=alo2, args=[0]}, null, Result: VarLocation{name=y, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), VarLocation{name=factorLabel23, type=int, expr=3, size=0}, 0, Result: VarLocation{name=MULTIPLYLabel26, type=int, expr=VarLocation{name=factorLabel23, type=int, expr=3, size=0}*0, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [false, VarLocation{name=factorLabel23, type=int, expr=3, size=0}*0]}
index: 1 tamaño: 2
ocurrio un error: For input string: "0VarLocation{name=factorLabel23, type=int, expr=3, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos03.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=res, type=boolean, expr=null, size=0}
actual VarLocation{name=res, type=int, expr=null, size=0}
actual VarLocation{name=res, type=int, expr=null, size=0}
actual VarLocation{name=res, type=int, expr=null, size=0}
actual VarLocation{name=A, type=int[], expr=null, size=1}

Result = 0

parseo exitoso
tamaño lista de codigo tercetos: 30
lista: 
{null, boolean, res, Result: 0}
{LABEL, null, null, Result: BeginMethod inc}

{METHODDECL, Metodo{ name=inc, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
{RETURN, null, null, Result: 0+1}
{LABEL, null, null, Result: EndMethod inc}
{LABEL, null, null, Result: BeginMethod resto}

{METHODDECL, Metodo{ name=resto, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}, Simbolo{type=float, name=y, value=null, size=0}]}, null, Result: null}
{MULTIPLY(*), 3, 2, Result: VarLocation{name=MULTIPLYLabel7, type=int, expr=3*2, size=0}}
{GE(>), 0, 3*2, Result: VarLocation{name=GELabel8, type=boolean, expr=0>3*2, size=0}}
{CMP, VarLocation{name=GELabel8, type=boolean, expr=0>3*2, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel9}
{DIVIDE(/), 0, 3, Result: VarLocation{name=DIVIDELabel13, type=int, expr=0/3, size=0}}
{ASSIGN(=), 0/3, null, Result: VarLocation{name=res, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel10}
{LABEL, null, null, Result: elseCondLabel9}
{MOD(%), 0, 2, Result: VarLocation{name=MODLabel16, type=int, expr=0%2, size=0}}
{ASSIGN(=), 0%2, null, Result: VarLocation{name=res, type=int, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel10}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod resto}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), false, null, Result: VarLocation{name=res, type=boolean, expr=null, size=0}}
{PARAM, null, null, Result: [5]}
{METHODCALL, inc, 1, Result: RESULTLabel21}
{PARAM, null, null, Result: [MethodCallExpr{name=inc, args=[5]}, 10.2]}
{METHODCALL, resto, 2, Result: RESULTLabel24}
{ASSIGN(=), MethodCallExpr{name=resto, args=[MethodCallExpr{name=inc, args=[5]}, 10.2]}, null, Result: VarLocation{name=A, type=int[], expr=0, size=1}}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {null, boolean, res, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod inc}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=inc, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0+1}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod inc}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod resto}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=resto, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}, Simbolo{type=float, name=y, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {MULTIPLY(*), 3, 2, Result: VarLocation{name=MULTIPLYLabel7, type=int, expr=3*2, size=0}}
finalizado.

procesando : . . . {GE(>), 0, 3*2, Result: VarLocation{name=GELabel8, type=boolean, expr=0>3*2, size=0}}
{logic} FALTA CASO (2do param)class ir.ast.BinOpExpr
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel8, type=boolean, expr=0>3*2, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel9}
finalizado.

procesando : . . . {DIVIDE(/), 0, 3, Result: VarLocation{name=DIVIDELabel13, type=int, expr=0/3, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0/3, null, Result: VarLocation{name=res, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel9}
finalizado.

procesando : . . . {MOD(%), 0, 2, Result: VarLocation{name=MODLabel16, type=int, expr=0%2, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0%2, null, Result: VarLocation{name=res, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel10}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod resto}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), false, null, Result: VarLocation{name=res, type=boolean, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [5]}
index: 0 tamaño: 1

Result = 5
finalizado.

procesando : . . . {METHODCALL, inc, 1, Result: RESULTLabel21}
finalizado.

procesando : . . . {PARAM, null, null, Result: [MethodCallExpr{name=inc, args=[5]}, 10.2]}
index: 1 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
index: 0 tamaño: 2
{PARAM} CASO METHODCALL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, resto, 2, Result: RESULTLabel24}
finalizado.

procesando : . . . {ASSIGN(=), MethodCallExpr{name=resto, args=[MethodCallExpr{name=inc, args=[5]}, 10.2]}, null, Result: VarLocation{name=A, type=int[], expr=0, size=1}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.


    .comm res,4


    .globl	inc
    .type	inc, @function 
inc: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-12%(ebp) 

    mov 0+1(%rbp), %eax

    leave
    ret



    .globl	resto
    .type	resto, @function 
resto: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov $3, %eax 
    mov $2, %edx 
    mov %eax,-20%(ebp) 

    movl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -24(%rbp)

    mov true(%rbp), %eax
    cmp -24(%rbp), %eax

    jne elseCondLabel9

    mov $0, %eax 
    mov $3, %ecx 
    mov %ecx,-40%(ebp) 

    mov 0/3(%rbp), %eax
    mov -28(%rbp), %eax

    jmp endIfLabel10

.elseCondLabel9

    movl	$2, %eax 
    cltd
    idivl $0 
    movl	%edx, -56(%rbp)

    mov 0%2(%rbp), %eax
    mov -44(%rbp), %eax

.endIfLabel10

    mov 0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov false(%rbp), %eax
    mov -12(%rbp), %eax

PARAM
    movl $5 , (%esp)
    call inc
    movl %eax, RESULTLabel21(%rbp) 

PARAM

    call resto
    movl %eax, RESULTLabel24(%rbp) 

    mov MethodCallExpr{name=resto, args=[MethodCallExpr{name=inc, args=[5]}, 10.2]}(%rbp), %eax
    mov -16(%rbp), %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos_externos01.ctds ... -------------------
parseo iniciado
Error: Method alo not declared
Error: Method alo not declared
ocurrio un error: null
---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_metodos_externos02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 35
lista: 
{LABEL, null, null, Result: BeginMethod maxcomdiv}

{METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0}, Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
{GE(>), 0, 0, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel4}
{ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: elseCondLabel4}
{ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel5}
{ASSIGN(=), 1, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel16}
{CMP, VarLocation{name=factorLabel15, type=boolean, expr=VarLocation{name=factorLabel14, type=boolean, expr=VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel17}
{MOD(%), 0, 0, Result: VarLocation{name=MODLabel20, type=int, expr=0%0, size=0}}
{ASSIGN(=), 0%0, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel16}
{LABEL, null, null, Result: EndWhileLabel17}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod maxcomdiv}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 10000, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{PARAM, null, null, Result: [6, 9]}
{METHODCALL, maxcomdiv, 2, Result: RESULTLabel27}
{MULTIPLY(*), 3.5, 0, Result: VarLocation{name=MULTIPLYLabel31, type=float, expr=3.5*0, size=0}}
{DIVIDE(/), 7, 6, Result: VarLocation{name=DIVIDELabel34, type=int, expr=7/6, size=0}}
{MINUS(-), 3.5*0, 7/6, Result: VarLocation{name=MINUSLabel35, type=float, expr=3.5*0-7/6, size=0}}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%d%f"}, StringLiteral{value="mcd"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}, 3.5*0-7/6]}, null, Result: EXTERNINVKLabel36}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod maxcomdiv}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0}, Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel3, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {ASSIGN(=), 1, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel16}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel15, type=boolean, expr=VarLocation{name=factorLabel14, type=boolean, expr=VarLocation{name=NEQLabel13, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel17}
finalizado.

procesando : . . . {MOD(%), 0, 0, Result: VarLocation{name=MODLabel20, type=int, expr=0%0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0%0, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=divisor, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel16}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel17}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod maxcomdiv}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 10000, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6, 9]}
index: 1 tamaño: 2

Result = 9
index: 0 tamaño: 2

Result = 6
finalizado.

procesando : . . . {METHODCALL, maxcomdiv, 2, Result: RESULTLabel27}
finalizado.

procesando : . . . {MULTIPLY(*), 3.5, 0, Result: VarLocation{name=MULTIPLYLabel31, type=float, expr=3.5*0, size=0}}
{IMUL1} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {DIVIDE(/), 7, 6, Result: VarLocation{name=DIVIDELabel34, type=int, expr=7/6, size=0}}
finalizado.

procesando : . . . {MINUS(-), 3.5*0, 7/6, Result: VarLocation{name=MINUSLabel35, type=float, expr=3.5*0-7/6, size=0}}
{SUB1}CASO BinOpExpr entre float y int pendiente
{SUB2}CASO BinOpExpr entre float y int pendiente
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%d%f"}, StringLiteral{value="mcd"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}, 3.5*0-7/6]}, null, Result: EXTERNINVKLabel36}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	maxcomdiv
    .type	maxcomdiv, @function 
maxcomdiv: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -24(%rbp)

    mov true(%rbp), %eax
    cmp -24(%rbp), %eax

    jne elseCondLabel4

    mov 0(%rbp), %eax
    mov -28(%rbp), %eax

    mov 0(%rbp), %eax
    mov -36(%rbp), %eax

    jmp endIfLabel5

.elseCondLabel4

    mov 0(%rbp), %eax
    mov -44(%rbp), %eax

    mov 0(%rbp), %eax
    mov -52(%rbp), %eax

.endIfLabel5

    mov 1(%rbp), %eax
    mov -60(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -76(%rbp)

.BeginWhileLabel16

    mov true(%rbp), %eax
    cmp -84(%rbp), %eax

    jne EndWhileLabel17

    movl	$0, %eax 
    cltd
    idivl $0 
    movl	%edx, -100(%rbp)

    mov 0%0(%rbp), %eax
    mov -88(%rbp), %eax

    mov 0(%rbp), %eax
    mov -104(%rbp), %eax

    mov 0(%rbp), %eax
    mov -112(%rbp), %eax

    jmp BeginWhileLabel16

.EndWhileLabel17

    mov 0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 10000(%rbp), %eax
    mov -8(%rbp), %eax

PARAM
    movl $9 , 0(%esp)    movl $6 , (%esp)
    call maxcomdiv
    movl %eax, RESULTLabel27(%rbp) 

    mov $0, %edx 
    mov %eax,-36%(ebp) 

    mov $7, %eax 
    mov $6, %ecx 
    mov %ecx,-48%(ebp) 

    mov %edx,-52%(ebp) 

    call "printf"
    movl %eax, EXTERNINVKLabel36(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_mod.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 11
lista: 
{LABEL, null, null, Result: BeginMethod pruAritmetica}

{METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 90, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{MOD(%), 0, 7, Result: VarLocation{name=MODLabel4, type=int, expr=0%7, size=0}}
{RETURN, null, null, Result: VarLocation{name=MODLabel4, type=int, expr=0%7, size=0}}
{LABEL, null, null, Result: EndMethod pruAritmetica}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{METHODCALL, pruAritmetica, 0, Result: RESULTLabel6}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[]}]}, null, Result: EXTERNINVKLabel8}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruAritmetica}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruAritmetica, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 90, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MOD(%), 0, 7, Result: VarLocation{name=MODLabel4, type=int, expr=0%7, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=MODLabel4, type=int, expr=0%7, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruAritmetica}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {METHODCALL, pruAritmetica, 0, Result: RESULTLabel6}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruAritmetica, args=[]}]}, null, Result: EXTERNINVKLabel8}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	pruAritmetica
    .type	pruAritmetica, @function 
pruAritmetica: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 90(%rbp), %eax
    mov -8(%rbp), %eax

    movl	$7, %eax 
    cltd
    idivl $0 
    movl	%edx, -24(%rbp)

    mov VarLocation{name=MODLabel4, type=int, expr=0%7, size=0}(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    call pruAritmetica
    movl %eax, RESULTLabel6(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel8(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_mult01.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 15
lista: 
{LABEL, null, null, Result: BeginMethod pruMult}

{METHODDECL, Metodo{ name=pruMult, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 5, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{ASSIGN(=), 2000, null, Result: VarLocation{name=d, type=int, expr=null, size=0}}
{MULTIPLY(*), 0, 1000, Result: VarLocation{name=MULTIPLYLabel5, type=int, expr=0*1000, size=0}}
{MULTIPLY(*), 0*1000, 0, Result: VarLocation{name=MULTIPLYLabel7, type=int, expr=0*1000*0, size=0}}
{MULTIPLY(*), 0*1000*0, 0, Result: VarLocation{name=MULTIPLYLabel9, type=int, expr=0*1000*0*0, size=0}}
{RETURN, null, null, Result: VarLocation{name=MULTIPLYLabel9, type=int, expr=0*1000*0*0, size=0}}
{LABEL, null, null, Result: EndMethod pruMult}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [2]}
{METHODCALL, pruMult, 1, Result: RESULTLabel12}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruMult, args=[2]}]}, null, Result: EXTERNINVKLabel14}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruMult}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruMult, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=c, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 5, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 2000, null, Result: VarLocation{name=d, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), 0, 1000, Result: VarLocation{name=MULTIPLYLabel5, type=int, expr=0*1000, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), 0*1000, 0, Result: VarLocation{name=MULTIPLYLabel7, type=int, expr=0*1000*0, size=0}}

Result = 0
finalizado.

procesando : . . . {MULTIPLY(*), 0*1000*0, 0, Result: VarLocation{name=MULTIPLYLabel9, type=int, expr=0*1000*0*0, size=0}}

Result = 0
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=MULTIPLYLabel9, type=int, expr=0*1000*0*0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruMult}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [2]}
index: 0 tamaño: 1

Result = 2
finalizado.

procesando : . . . {METHODCALL, pruMult, 1, Result: RESULTLabel12}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruMult, args=[2]}]}, null, Result: EXTERNINVKLabel14}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	pruMult
    .type	pruMult, @function 
pruMult: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 5(%rbp), %eax
    mov -12(%rbp), %eax

    mov 2000(%rbp), %eax
    mov -20(%rbp), %eax

    mov $0, %eax 
    mov $1000, %edx 
    mov %eax,-36%(ebp) 

    mov $0, %eax 
    mov $0, %edx 
    mov %eax,-44%(ebp) 

    mov $0, %eax 
    mov $0, %edx 
    mov %eax,-52%(ebp) 

    mov VarLocation{name=MULTIPLYLabel9, type=int, expr=0*1000*0*0, size=0}(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $2 , (%esp)
    call pruMult
    movl %eax, RESULTLabel12(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel14(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_mult02.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 11
lista: 
{LABEL, null, null, Result: BeginMethod pruMult}

{METHODDECL, Metodo{ name=pruMult, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{ASSIGN(=), 5, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
{MULTIPLY(*), 0, 7, Result: VarLocation{name=MULTIPLYLabel4, type=int, expr=0*7, size=0}}
{RETURN, null, null, Result: VarLocation{name=MULTIPLYLabel4, type=int, expr=0*7, size=0}}
{LABEL, null, null, Result: EndMethod pruMult}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{METHODCALL, pruMult, 0, Result: RESULTLabel6}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruMult, args=[]}]}, null, Result: EXTERNINVKLabel8}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod pruMult}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=pruMult, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 5, null, Result: VarLocation{name=a, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), 0, 7, Result: VarLocation{name=MULTIPLYLabel4, type=int, expr=0*7, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: VarLocation{name=MULTIPLYLabel4, type=int, expr=0*7, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod pruMult}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {METHODCALL, pruMult, 0, Result: RESULTLabel6}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=pruMult, args=[]}]}, null, Result: EXTERNINVKLabel8}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	pruMult
    .type	pruMult, @function 
pruMult: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 5(%rbp), %eax
    mov -8(%rbp), %eax

    mov $0, %eax 
    mov $7, %edx 
    mov %eax,-24%(ebp) 

    mov VarLocation{name=MULTIPLYLabel4, type=int, expr=0*7, size=0}(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

    call pruMult
    movl %eax, RESULTLabel6(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel8(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_prog_simple.ctds ... -------------------
parseo iniciado

Error: Main Method Missing in Class prueba2
parseo exitoso
tamaño lista de codigo tercetos: 6
lista: 
{null, float, c, Result: 0}
{LABEL, null, null, Result: BeginMethod alo}

{METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{LABEL, null, null, Result: EndMethod alo}

procesando : . . . {null, float, c, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod alo}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=alo, return_not_void=false, typeReturn=void, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel3, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod alo}
finalizado.


    .comm c,4


    .globl	alo
    .type	alo, @function 
alo: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-16%(ebp) 

    mov 0+1(%rbp), %eax
    mov -4(%rbp), %eax

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_retorno.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 69
lista: 
{LABEL, null, null, Result: BeginMethod id}

{METHODDECL, Metodo{ name=id, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 100, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=z, type=int, expr=null, size=0}}
{LE(<), 0, 0, Result: VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel8}
{CMP, VarLocation{name=factorLabel7, type=boolean, expr=VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel9}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{GE(>), 0, 0, Result: VarLocation{name=GELabel13, type=boolean, expr=0>0, size=0}}
{LE(<), 0, 0, Result: VarLocation{name=LELabel17, type=boolean, expr=0<0, size=0}}
{OR(||), VarLocation{name=GELabel13, type=boolean, expr=0>0, size=0}, VarLocation{name=LELabel17, type=boolean, expr=0<0, size=0}, Result: VarLocation{name=DISYUNCIONLabel19, type=boolean, expr=VarLocation{name=GELabel13, type=boolean, expr=0>0, size=0}||VarLocation{name=LELabel17, type=boolean, expr=0<0, size=0}, size=0}}
{LABEL, null, null, Result: BeginWhileLabel21}
{CMP, VarLocation{name=factorLabel20, type=boolean, expr=VarLocation{name=DISYUNCIONLabel19, type=boolean, expr=VarLocation{name=GELabel13, type=boolean, expr=0>0, size=0}||VarLocation{name=LELabel17, type=boolean, expr=0<0, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel22}
{GE(>), 0, 0, Result: VarLocation{name=GELabel25, type=boolean, expr=0>0, size=0}}
{CMP, VarLocation{name=GELabel25, type=boolean, expr=0>0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel26}
{MINUS(-), 0, 1, Result: VarLocation{name=MINUSLabel30, type=int, expr=0-1, size=0}}
{ASSIGN(=), 0-1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel27}
{LABEL, null, null, Result: elseCondLabel26}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel33, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{LABEL, null, null, Result: endIfLabel27}
{JMP, null, null, Result: BeginWhileLabel21}
{LABEL, null, null, Result: EndWhileLabel22}
{LE(<), 0, 0, Result: VarLocation{name=LELabel36, type=boolean, expr=0<0, size=0}}
{GE(>), 0, 0, Result: VarLocation{name=GELabel40, type=boolean, expr=0>0, size=0}}
{OR(||), VarLocation{name=LELabel36, type=boolean, expr=0<0, size=0}, VarLocation{name=GELabel40, type=boolean, expr=0>0, size=0}, Result: VarLocation{name=DISYUNCIONLabel42, type=boolean, expr=VarLocation{name=LELabel36, type=boolean, expr=0<0, size=0}||VarLocation{name=GELabel40, type=boolean, expr=0>0, size=0}, size=0}}
{LABEL, null, null, Result: BeginWhileLabel44}
{CMP, VarLocation{name=factorLabel43, type=boolean, expr=VarLocation{name=DISYUNCIONLabel42, type=boolean, expr=VarLocation{name=LELabel36, type=boolean, expr=0<0, size=0}||VarLocation{name=GELabel40, type=boolean, expr=0>0, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel45}
{LE(<), 0, 0, Result: VarLocation{name=LELabel48, type=boolean, expr=0<0, size=0}}
{CMP, VarLocation{name=LELabel48, type=boolean, expr=0<0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel49}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel53, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel50}
{LABEL, null, null, Result: elseCondLabel49}
{CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel56, type=boolean, expr=0==0, size=0}}
{CMP, VarLocation{name=CEQLabel56, type=boolean, expr=0==0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel57}
{MINUS(-), 0, 1, Result: VarLocation{name=MINUSLabel61, type=int, expr=0-1, size=0}}
{MULTIPLY(*), 0, 0, Result: VarLocation{name=MULTIPLYLabel64, type=int, expr=0*0, size=0}}
{MULTIPLY(*), 0, 0, Result: VarLocation{name=MULTIPLYLabel67, type=int, expr=0*0, size=0}}
{MINUS(-), 0*0, 0*0, Result: VarLocation{name=MINUSLabel68, type=int, expr=0*0-0*0, size=0}}
{PLUS(+), 0-1, VarLocation{name=MINUSLabel68, type=int, expr=0*0-0*0, size=0}, Result: VarLocation{name=PLUSLabel70, type=int, expr=0-1+VarLocation{name=MINUSLabel68, type=int, expr=0*0-0*0, size=0}, size=0}}
{ASSIGN(=), 0-1+VarLocation{name=MINUSLabel68, type=int, expr=0*0-0*0, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{JMP, null, null, Result: endIfLabel58}
{LABEL, null, null, Result: elseCondLabel57}
{LABEL, null, null, Result: endIfLabel58}
{LABEL, null, null, Result: endIfLabel50}
{JMP, null, null, Result: BeginWhileLabel44}
{LABEL, null, null, Result: EndWhileLabel45}
{ASSIGN(=), 0, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel74, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel8}
{LABEL, null, null, Result: EndWhileLabel9}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod id}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [9]}
{METHODCALL, id, 1, Result: RESULTLabel77}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=id, args=[9]}]}, null, Result: EXTERNINVKLabel79}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod id}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=id, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=x, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 100, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=z, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel8}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel7, type=boolean, expr=VarLocation{name=LELabel6, type=boolean, expr=0<0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel9}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel13, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel17, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=GELabel13, type=boolean, expr=0>0, size=0}, VarLocation{name=LELabel17, type=boolean, expr=0<0, size=0}, Result: VarLocation{name=DISYUNCIONLabel19, type=boolean, expr=VarLocation{name=GELabel13, type=boolean, expr=0>0, size=0}||VarLocation{name=LELabel17, type=boolean, expr=0<0, size=0}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel21}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel20, type=boolean, expr=VarLocation{name=DISYUNCIONLabel19, type=boolean, expr=VarLocation{name=GELabel13, type=boolean, expr=0>0, size=0}||VarLocation{name=LELabel17, type=boolean, expr=0<0, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel22}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel25, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=GELabel25, type=boolean, expr=0>0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel26}
finalizado.

procesando : . . . {MINUS(-), 0, 1, Result: VarLocation{name=MINUSLabel30, type=int, expr=0-1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0-1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel27}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel26}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel33, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel27}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel21}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel22}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel36, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {GE(>), 0, 0, Result: VarLocation{name=GELabel40, type=boolean, expr=0>0, size=0}}
finalizado.

procesando : . . . {OR(||), VarLocation{name=LELabel36, type=boolean, expr=0<0, size=0}, VarLocation{name=GELabel40, type=boolean, expr=0>0, size=0}, Result: VarLocation{name=DISYUNCIONLabel42, type=boolean, expr=VarLocation{name=LELabel36, type=boolean, expr=0<0, size=0}||VarLocation{name=GELabel40, type=boolean, expr=0>0, size=0}, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel44}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel43, type=boolean, expr=VarLocation{name=DISYUNCIONLabel42, type=boolean, expr=VarLocation{name=LELabel36, type=boolean, expr=0<0, size=0}||VarLocation{name=GELabel40, type=boolean, expr=0>0, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel45}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel48, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=LELabel48, type=boolean, expr=0<0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel49}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel53, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel50}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel49}
finalizado.

procesando : . . . {CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel56, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel56, type=boolean, expr=0==0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel57}
finalizado.

procesando : . . . {MINUS(-), 0, 1, Result: VarLocation{name=MINUSLabel61, type=int, expr=0-1, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), 0, 0, Result: VarLocation{name=MULTIPLYLabel64, type=int, expr=0*0, size=0}}
finalizado.

procesando : . . . {MULTIPLY(*), 0, 0, Result: VarLocation{name=MULTIPLYLabel67, type=int, expr=0*0, size=0}}
finalizado.

procesando : . . . {MINUS(-), 0*0, 0*0, Result: VarLocation{name=MINUSLabel68, type=int, expr=0*0-0*0, size=0}}

Result = 0

Result = 0
finalizado.

procesando : . . . {PLUS(+), 0-1, VarLocation{name=MINUSLabel68, type=int, expr=0*0-0*0, size=0}, Result: VarLocation{name=PLUSLabel70, type=int, expr=0-1+VarLocation{name=MINUSLabel68, type=int, expr=0*0-0*0, size=0}, size=0}}

Result = -1
VarLocation2
finalizado.

procesando : . . . {ASSIGN(=), 0-1+VarLocation{name=MINUSLabel68, type=int, expr=0*0-0*0, size=0}, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel58}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel57}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel58}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel50}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel44}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel45}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=x, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel74, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=j, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel8}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel9}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod id}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [9]}
index: 0 tamaño: 1

Result = 9
finalizado.

procesando : . . . {METHODCALL, id, 1, Result: RESULTLabel77}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=id, args=[9]}]}, null, Result: EXTERNINVKLabel79}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	id
    .type	id, @function 
id: 
    enter   $(4), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 100(%rbp), %eax
    mov -16(%rbp), %eax

    mov 0(%rbp), %eax
    mov -24(%rbp), %eax

    mov 0(%rbp), %eax
    mov -32(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -48(%rbp)

.BeginWhileLabel8

    mov true(%rbp), %eax
    cmp -52(%rbp), %eax

    jne EndWhileLabel9

    mov 0(%rbp), %eax
    mov -60(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -76(%rbp)

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -92(%rbp)

    cmp	$0, -76(%rbp)
    jne .L0
    cmp	$0, -92(%rbp)
    je .L0
    mov	$1, %eax
    jmp .L1
.L0:
    movl	$0, %eax
    jmp .L2
.L1:
    movl	%eax, -100(%rbp)
.L2:

.BeginWhileLabel21

    mov true(%rbp), %eax
    cmp -104(%rbp), %eax

    jne EndWhileLabel22

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -116(%rbp)

    mov true(%rbp), %eax
    cmp -116(%rbp), %eax

    jne elseCondLabel26

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-132%(ebp) 

    mov 0-1(%rbp), %eax
    mov -120(%rbp), %eax

    jmp endIfLabel27

.elseCondLabel26

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-148%(ebp) 

    mov 0+1(%rbp), %eax
    mov -136(%rbp), %eax

.endIfLabel27

    jmp BeginWhileLabel21

.EndWhileLabel22

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -160(%rbp)

    movl	$0, %eax
    cmpl	$0, %eax
    setg	%al
    movzbl %al, %eax
    movl	%eax, -176(%rbp)

    cmp	$0, -160(%rbp)
    jne .L3
    cmp	$0, -176(%rbp)
    je .L3
    mov	$1, %eax
    jmp .L4
.L3:
    movl	$0, %eax
    jmp .L5
.L4:
    movl	%eax, -184(%rbp)
.L5:

.BeginWhileLabel44

    mov true(%rbp), %eax
    cmp -188(%rbp), %eax

    jne EndWhileLabel45

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -200(%rbp)

    mov true(%rbp), %eax
    cmp -200(%rbp), %eax

    jne elseCondLabel49

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-216%(ebp) 

    mov 0+1(%rbp), %eax
    mov -204(%rbp), %eax

    jmp endIfLabel50

.elseCondLabel49

    movl	$0, %eax
    cmpl	$0, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -228(%rbp)

    mov true(%rbp), %eax
    cmp -228(%rbp), %eax

    jne elseCondLabel57

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-244%(ebp) 

    mov $0, %eax 
    mov $0, %edx 
    mov %eax,-256%(ebp) 

    mov $0, %eax 
    mov $0, %edx 
    mov %eax,-268%(ebp) 

    mov $0, %eax 
    mov $0, %edx 
    sub %eax, %edx 
    mov %edx,-272%(ebp) 

    mov $-1, %eax 
    mov -272(%ebp) , %edx 
    mov %edx,-280%(ebp) 

    mov 0-1+VarLocation{name=MINUSLabel68, type=int, expr=0*0-0*0, size=0}(%rbp), %eax
    mov -232(%rbp), %eax

    jmp endIfLabel58

.elseCondLabel57

.endIfLabel58

.endIfLabel50

    jmp BeginWhileLabel44

.EndWhileLabel45

    mov 0(%rbp), %eax
    mov -284(%rbp), %eax

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-304%(ebp) 

    mov 0+1(%rbp), %eax
    mov -292(%rbp), %eax

    jmp BeginWhileLabel8

.EndWhileLabel9

    mov 0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $9 , (%esp)
    call id
    movl %eax, RESULTLabel77(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel79(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_suma.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 25
lista: 
{LABEL, null, null, Result: BeginMethod suma}

{METHODDECL, Metodo{ name=suma, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=num1, value=null, size=0}, Simbolo{type=int, name=num2, value=null, size=0}]}, null, Result: null}
{CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel3, type=boolean, expr=0==0, size=0}}
{CMP, VarLocation{name=CEQLabel3, type=boolean, expr=0==0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel4}
{RETURN, null, null, Result: 0}
{JMP, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: elseCondLabel4}
{CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel9, type=boolean, expr=0==0, size=0}}
{CMP, VarLocation{name=CEQLabel9, type=boolean, expr=0==0, size=0}, true, Result: null}
{JNE, null, null, Result: elseCondLabel10}
{RETURN, null, null, Result: 0}
{JMP, null, null, Result: endIfLabel11}
{LABEL, null, null, Result: elseCondLabel10}
{PLUS(+), 0, 0, Result: VarLocation{name=PLUSLabel15, type=int, expr=0+0, size=0}}
{RETURN, null, null, Result: 0+0}
{LABEL, null, null, Result: endIfLabel11}
{LABEL, null, null, Result: endIfLabel5}
{LABEL, null, null, Result: EndMethod suma}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [4, 9]}
{METHODCALL, suma, 2, Result: RESULTLabel18}
{EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=suma, args=[4, 9]}]}, null, Result: EXTERNINVKLabel20}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod suma}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=suma, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=num1, value=null, size=0}, Simbolo{type=int, name=num2, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel3, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel3, type=boolean, expr=0==0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel4}
finalizado.

procesando : . . . {CEQ(==), 0, 0, Result: VarLocation{name=CEQLabel9, type=boolean, expr=0==0, size=0}}
finalizado.

procesando : . . . {CMP, VarLocation{name=CEQLabel9, type=boolean, expr=0==0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: elseCondLabel10}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {JMP, null, null, Result: endIfLabel11}
finalizado.

procesando : . . . {LABEL, null, null, Result: elseCondLabel10}
finalizado.

procesando : . . . {PLUS(+), 0, 0, Result: VarLocation{name=PLUSLabel15, type=int, expr=0+0, size=0}}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0+0}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel11}
finalizado.

procesando : . . . {LABEL, null, null, Result: endIfLabel5}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod suma}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [4, 9]}
index: 1 tamaño: 2

Result = 9
index: 0 tamaño: 2

Result = 4
finalizado.

procesando : . . . {METHODCALL, suma, 2, Result: RESULTLabel18}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=int, parameters=[MethodCallExpr{name=suma, args=[4, 9]}]}, null, Result: EXTERNINVKLabel20}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	suma
    .type	suma, @function 
suma: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    movl	$0, %eax
    cmpl	$0, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -12(%rbp)

    mov true(%rbp), %eax
    cmp -12(%rbp), %eax

    jne elseCondLabel4

    mov 0(%rbp), %eax

    jmp endIfLabel5

.elseCondLabel4

    movl	$0, %eax
    cmpl	$0, %eax
    sete %al
    movzbl %al, %eax
    movl	%eax, -28(%rbp)

    mov true(%rbp), %eax
    cmp -28(%rbp), %eax

    jne elseCondLabel10

    mov 0(%rbp), %eax

    jmp endIfLabel11

.elseCondLabel10

    mov $0, %eax 
    mov $0, %edx 
    mov %edx,-44%(ebp) 

    mov 0+0(%rbp), %eax

.endIfLabel11

.endIfLabel5

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $9 , 0(%esp)    movl $4 , (%esp)
    call suma
    movl %eax, RESULTLabel18(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel20(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_sumx.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 22
lista: 
{LABEL, null, null, Result: BeginMethod sumx}

{METHODDECL, Metodo{ name=sumx, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 0, null, Result: VarLocation{name=aux, type=float, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{LE(<), 0, 0, Result: VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel7}
{CMP, VarLocation{name=factorLabel6, type=boolean, expr=VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel8}
{PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel11, type=float, expr=0.0+0.0, size=0}}
{ASSIGN(=), 0.0+0.0, null, Result: VarLocation{name=aux, type=float, expr=null, size=0}}
{PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel14, type=int, expr=0+1, size=0}}
{ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel7}
{LABEL, null, null, Result: EndWhileLabel8}
{RETURN, null, null, Result: 0.0}
{LABEL, null, null, Result: EndMethod sumx}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [6.0, 2]}
{METHODCALL, sumx, 2, Result: RESULTLabel18}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=sumx, args=[6.0, 2]}]}, null, Result: EXTERNINVKLabel20}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod sumx}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=sumx, return_not_void=true, typeReturn=float, parameters [Simbolo{type=float, name=x, value=null, size=0}, Simbolo{type=int, name=n, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=aux, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {LE(<), 0, 0, Result: VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel7}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel6, type=boolean, expr=VarLocation{name=LELabel5, type=boolean, expr=0<0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel8}
finalizado.

procesando : . . . {PLUS(+), 0.0, 0.0, Result: VarLocation{name=PLUSLabel11, type=float, expr=0.0+0.0, size=0}}
{ADD1} CASO class ir.ast.FloatLiteral PENDIENTE
{ADD2} CASO class ir.ast.FloatLiteral PENDIENTE
finalizado.

procesando : . . . {ASSIGN(=), 0.0+0.0, null, Result: VarLocation{name=aux, type=float, expr=null, size=0}}
finalizado.

procesando : . . . {PLUS(+), 0, 1, Result: VarLocation{name=PLUSLabel14, type=int, expr=0+1, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0+1, null, Result: VarLocation{name=i, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel7}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel8}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0.0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod sumx}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6.0, 2]}
index: 1 tamaño: 2

Result = 2
index: 0 tamaño: 2
{PARAM} CASO FLAOTLITERAL PENDIENTE
finalizado.

procesando : . . . {METHODCALL, sumx, 2, Result: RESULTLabel18}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[MethodCallExpr{name=sumx, args=[6.0, 2]}]}, null, Result: EXTERNINVKLabel20}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	sumx
    .type	sumx, @function 
sumx: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 0(%rbp), %eax
    mov -12(%rbp), %eax

    mov 0(%rbp), %eax
    mov -20(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setl	%al
    movzbl %al, %eax
    movl	%eax, -36(%rbp)

.BeginWhileLabel7

    mov true(%rbp), %eax
    cmp -40(%rbp), %eax

    jne EndWhileLabel8

    mov %edx,-56%(ebp) 

    mov 0.0+0.0(%rbp), %eax
    mov -44(%rbp), %eax

    mov $0, %eax 
    mov $1, %edx 
    mov %edx,-72%(ebp) 

    mov 0+1(%rbp), %eax
    mov -60(%rbp), %eax

    jmp BeginWhileLabel7

.EndWhileLabel8

    mov 0.0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $2 , 0(%esp)
    call sumx
    movl %eax, RESULTLabel18(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel20(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
---------------- Test tests/test_correctos/test_while.ctds ... -------------------
parseo iniciado

parseo exitoso
tamaño lista de codigo tercetos: 34
lista: 
{LABEL, null, null, Result: BeginMethod maxcomdiv}

{METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0}, Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
{ASSIGN(=), 1, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel4, type=boolean, expr=0!=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel10}
{CMP, VarLocation{name=factorLabel9, type=boolean, expr=VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=factorLabel7, type=boolean, expr=VarLocation{name=factorLabel6, type=boolean, expr=VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=NEQLabel4, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, size=0}, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel11}
{MOD(%), 0, 0, Result: VarLocation{name=MODLabel14, type=int, expr=0%0, size=0}}
{ASSIGN(=), 0%0, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
{ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
{JMP, null, null, Result: BeginWhileLabel10}
{JMP, null, null, Result: BeginWhileLabel10}
{LABEL, null, null, Result: EndWhileLabel11}
{NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel18, type=boolean, expr=0!=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel19}
{CMP, VarLocation{name=NEQLabel18, type=boolean, expr=0!=0, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel20}
{JMP, null, null, Result: EndWhileLabel20}
{JMP, null, null, Result: BeginWhileLabel19}
{LABEL, null, null, Result: EndWhileLabel20}
{NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel23, type=boolean, expr=0!=0, size=0}}
{LABEL, null, null, Result: BeginWhileLabel25}
{CMP, VarLocation{name=factorLabel24, type=boolean, expr=VarLocation{name=NEQLabel23, type=boolean, expr=0!=0, size=0}, size=0}, true, Result: null}
{JNE, null, null, Result: EndWhileLabel26}
{JMP, null, null, Result: BeginWhileLabel25}
{LABEL, null, null, Result: EndWhileLabel26}
{RETURN, null, null, Result: 0}
{LABEL, null, null, Result: EndMethod maxcomdiv}
{LABEL, null, null, Result: BeginMethod main}

{METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
{PARAM, null, null, Result: [6, 9]}
{METHODCALL, maxcomdiv, 2, Result: RESULTLabel30}
{EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%dMcd"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}]}, null, Result: EXTERNINVKLabel32}
{LABEL, null, null, Result: EndMethod main}

procesando : . . . {LABEL, null, null, Result: BeginMethod maxcomdiv}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=maxcomdiv, return_not_void=true, typeReturn=int, parameters [Simbolo{type=int, name=a, value=null, size=0}, Simbolo{type=int, name=b, value=null, size=0}]}, null, Result: null}
finalizado.

procesando : . . . {ASSIGN(=), 1, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel4, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel10}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel9, type=boolean, expr=VarLocation{name=factorLabel8, type=boolean, expr=VarLocation{name=factorLabel7, type=boolean, expr=VarLocation{name=factorLabel6, type=boolean, expr=VarLocation{name=factorLabel5, type=boolean, expr=VarLocation{name=NEQLabel4, type=boolean, expr=0!=0, size=0}, size=0}, size=0}, size=0}, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel11}
finalizado.

procesando : . . . {MOD(%), 0, 0, Result: VarLocation{name=MODLabel14, type=int, expr=0%0, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0%0, null, Result: VarLocation{name=resto, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {ASSIGN(=), 0, null, Result: VarLocation{name=dividendo, type=int, expr=null, size=0}}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel10}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel10}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel11}
finalizado.

procesando : . . . {NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel18, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel19}
finalizado.

procesando : . . . {CMP, VarLocation{name=NEQLabel18, type=boolean, expr=0!=0, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel20}
finalizado.

procesando : . . . {JMP, null, null, Result: EndWhileLabel20}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel19}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel20}
finalizado.

procesando : . . . {NEQ(!=), 0, 0, Result: VarLocation{name=NEQLabel23, type=boolean, expr=0!=0, size=0}}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginWhileLabel25}
finalizado.

procesando : . . . {CMP, VarLocation{name=factorLabel24, type=boolean, expr=VarLocation{name=NEQLabel23, type=boolean, expr=0!=0, size=0}, size=0}, true, Result: null}
finalizado.

procesando : . . . {JNE, null, null, Result: EndWhileLabel26}
finalizado.

procesando : . . . {JMP, null, null, Result: BeginWhileLabel25}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndWhileLabel26}
finalizado.

procesando : . . . {RETURN, null, null, Result: 0}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod maxcomdiv}
finalizado.

procesando : . . . {LABEL, null, null, Result: BeginMethod main}
finalizado.


procesando : . . . {METHODDECL, Metodo{ name=main, return_not_void=true, typeReturn=int, parameters []}, null, Result: null}
finalizado.

procesando : . . . {PARAM, null, null, Result: [6, 9]}
index: 1 tamaño: 2

Result = 9
index: 0 tamaño: 2

Result = 6
finalizado.

procesando : . . . {METHODCALL, maxcomdiv, 2, Result: RESULTLabel30}
finalizado.

procesando : . . . {EXTERNINVK, ExternInvkExpr{id="printf", type=float, parameters=[StringLiteral{value="%dMcd"}, MethodCallExpr{name=maxcomdiv, args=[6, 9]}]}, null, Result: EXTERNINVKLabel32}
finalizado.

procesando : . . . {LABEL, null, null, Result: EndMethod main}
finalizado.



    .globl	maxcomdiv
    .type	maxcomdiv, @function 
maxcomdiv: 
    enter   $(8), $0 
    push	%rbp
    mov %rsp, %rbp

    mov 1(%rbp), %eax
    mov -16(%rbp), %eax

    movl	$0, %eax
    cmpl	$0, %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -32(%rbp)

.BeginWhileLabel10

    mov true(%rbp), %eax
    cmp -52(%rbp), %eax

    jne EndWhileLabel11

    movl	$0, %eax 
    cltd
    idivl $0 
    movl	%edx, -68(%rbp)

    mov 0%0(%rbp), %eax
    mov -56(%rbp), %eax

    mov 0(%rbp), %eax
    mov -72(%rbp), %eax

    jmp BeginWhileLabel10

    jmp BeginWhileLabel10

.EndWhileLabel11

    movl	$0, %eax
    cmpl	$0, %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -88(%rbp)

.BeginWhileLabel19

    mov true(%rbp), %eax
    cmp -88(%rbp), %eax

    jne EndWhileLabel20

    jmp EndWhileLabel20

    jmp BeginWhileLabel19

.EndWhileLabel20

    movl	$0, %eax
    cmpl	$0, %eax
    setgne %al
    movzbl %al, %eax
    movl	%eax, -100(%rbp)

.BeginWhileLabel25

    mov true(%rbp), %eax
    cmp -104(%rbp), %eax

    jne EndWhileLabel26

    jmp BeginWhileLabel25

.EndWhileLabel26

    mov 0(%rbp), %eax

    leave
    ret



    .globl	main
    .type	main, @function 
main: 
    enter   $(0), $0 
    push	%rbp
    mov %rsp, %rbp

PARAM
    movl $9 , 0(%esp)    movl $6 , (%esp)
    call maxcomdiv
    movl %eax, RESULTLabel30(%rbp) 

    call "printf"
    movl %eax, EXTERNINVKLabel32(%rbp) 

    leave
    ret


---------------------------------------------------
  
  
///////////////////////// TESTS CON FALLAS ////////////////////////////////////////
---------------- Test tests/test_errores/error_arreglos01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_arreglos02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_arreglos03.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 7.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_arreglos04.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_arreglos05.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_bloques01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_bloques02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 9.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_char.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 4.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_class01.ctds ... -------------------
parseo iniciado
Error: Method alo not declared
Error: Method alo not declared
ocurrio un error: null
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_class02.ctds ... -------------------
parseo iniciado
Error: Method alo not declared
Error: Method alo not declared
ocurrio un error: null
---------------------------------------------------
  
  
---------------- Test tests/test_errores/errores.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_externinvk02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 23.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_externinvk.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 22.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_float01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 9.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_float02.ctds ... -------------------
parseo iniciado
error: 0 9 .
error: 0 21 .
error de sintaxis: Linea 22.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_float03.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 29.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_float04.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 41.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_for01.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel3, type=int, expr=1, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_for02.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel3, type=int, expr=1, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_for03.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel3, type=int, expr=1, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_for04.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel3, type=int, expr=1, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_for05.ctds ... -------------------
parseo iniciado
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}

Result = 0
buscado: A
actual VarLocation{name=A, type=int[], expr=null, size=5}
ocurrio un error: For input string: "0VarLocation{name=factorLabel4, type=int, expr=1, size=0}"
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_if01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 9.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_if02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 8.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_lineaerror02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 20.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_lineaerror.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 20.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_break.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 20.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_logicos02.ctds ... -------------------
parseo iniciado
error: 0 4 &
error de sintaxis: Linea 5.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_logicos.ctds ... -------------------
parseo iniciado
ocurrio un error: null
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_main01.ctds ... -------------------
parseo iniciado
Error: Method alo not declared
error de sintaxis: Linea 11.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_main02.ctds ... -------------------
parseo iniciado
Error: Method Main must not have parameters
Error: Method alo not declared
error de sintaxis: Linea 14.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 4.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos02.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 4.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos03.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 19.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos04.ctds ... -------------------
parseo iniciado
Error: Method alo3 not declared
error de sintaxis: Linea 21.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos05.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 15.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos06.ctds ... -------------------
parseo iniciado
error: 0 3 &
error de sintaxis: Linea 4.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_metodos07.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 9.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_test_multiplesMain.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 9.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_vbles01.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 6.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_vbles02.ctds ... -------------------
parseo iniciado
error: 0 5 _
error de sintaxis: Linea 7.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/error_vbles03.ctds ... -------------------
error de sintaxis: Linea 3.
---------------------------------------------------
  
  
---------------- Test tests/test_errores/ifErrorTest.ctds ... -------------------
parseo iniciado
error de sintaxis: Linea 6.
---------------------------------------------------
  
  
